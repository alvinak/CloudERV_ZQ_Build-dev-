/* soapH.h
   Generated by gSOAP 2.8.17r from ImageViewerAutomation.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap*, const char*, void*, size_t, int, int, size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 soap_container_insert(struct soap*, int, int, void*, size_t, const void*, size_t);

/* _ns3__byte is a typedef element/attribute synonym for byte */

#ifndef SOAP_TYPE__ns3__byte
#define SOAP_TYPE__ns3__byte (167)
#endif

#define soap_default__ns3__byte(soap, a) soap_default_byte(soap, a)


#define soap_out__ns3__byte soap_out_byte


#define soap_in__ns3__byte soap_in_byte


#define soap_put__ns3__byte soap_put_byte


#define soap_get__ns3__byte soap_get_byte


#ifndef SOAP_TYPE_xsd__byte
#define SOAP_TYPE_xsd__byte (16)
#endif

#define soap_default_xsd__byte(soap, a) soap_default_byte(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_xsd__byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_xsd__byte
#define soap_write_xsd__byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__byte(soap, data),0) || soap_put_xsd__byte(soap, data, "xsd:byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_xsd__byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_xsd__byte
#define soap_read_xsd__byte(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__byte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_byte(soap, data),0) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


/* _ns3__short is a typedef element/attribute synonym for short */

#ifndef SOAP_TYPE__ns3__short
#define SOAP_TYPE__ns3__short (175)
#endif

#define soap_default__ns3__short(soap, a) soap_default_short(soap, a)


#define soap_out__ns3__short soap_out_short


#define soap_in__ns3__short soap_in_short


#define soap_put__ns3__short soap_put_short


#define soap_get__ns3__short soap_get_short


#ifndef SOAP_TYPE_short
#define SOAP_TYPE_short (43)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_short(struct soap*, short *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_short(struct soap*, const char*, int, const short *, const char*);
SOAP_FMAC3 short * SOAP_FMAC4 soap_in_short(struct soap*, const char*, short *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_short(struct soap*, const short *, const char*, const char*);

#ifndef soap_write_short
#define soap_write_short(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_short(soap, data),0) || soap_put_short(soap, data, "short", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 short * SOAP_FMAC4 soap_get_short(struct soap*, short *, const char*, const char*);

#ifndef soap_read_short
#define soap_read_short(soap, data) ( soap_begin_recv(soap) || !soap_get_short(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


/* _ns3__char is a typedef element/attribute synonym for int */

#ifndef SOAP_TYPE__ns3__char
#define SOAP_TYPE__ns3__char (181)
#endif

#define soap_default__ns3__char(soap, a) soap_default_int(soap, a)


#define soap_out__ns3__char soap_out_int


#define soap_in__ns3__char soap_in_int


#define soap_put__ns3__char soap_put_int


#define soap_get__ns3__char soap_get_int


/* _ns3__int is a typedef element/attribute synonym for int */

#ifndef SOAP_TYPE__ns3__int
#define SOAP_TYPE__ns3__int (172)
#endif

#define soap_default__ns3__int(soap, a) soap_default_int(soap, a)


#define soap_out__ns3__int soap_out_int


#define soap_in__ns3__int soap_in_int


#define soap_put__ns3__int soap_put_int


#define soap_get__ns3__int soap_get_int


#ifndef SOAP_TYPE_ns3__char
#define SOAP_TYPE_ns3__char (106)
#endif

#define soap_default_ns3__char(soap, a) soap_default_int(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__char(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_ns3__char(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns3__char(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_ns3__char
#define soap_write_ns3__char(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns3__char(soap, data),0) || soap_put_ns3__char(soap, data, "ns3:char", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_ns3__char(struct soap*, int *, const char*, const char*);

#ifndef soap_read_ns3__char
#define soap_read_ns3__char(soap, data) ( soap_begin_recv(soap) || !soap_get_ns3__char(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_int(soap, data),0) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


/* _ns3__long is a typedef element/attribute synonym for LONG64 */

#ifndef SOAP_TYPE__ns3__long
#define SOAP_TYPE__ns3__long (173)
#endif

#define soap_default__ns3__long(soap, a) soap_default_LONG64(soap, a)


#define soap_out__ns3__long soap_out_LONG64


#define soap_in__ns3__long soap_in_LONG64


#define soap_put__ns3__long soap_put_LONG64


#define soap_get__ns3__long soap_get_LONG64


#ifndef SOAP_TYPE_LONG64
#define SOAP_TYPE_LONG64 (41)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_LONG64(struct soap*, LONG64 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_LONG64(struct soap*, const char*, int, const LONG64 *, const char*);
SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_in_LONG64(struct soap*, const char*, LONG64 *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_LONG64(struct soap*, const LONG64 *, const char*, const char*);

#ifndef soap_write_LONG64
#define soap_write_LONG64(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_LONG64(soap, data),0) || soap_put_LONG64(soap, data, "long", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_get_LONG64(struct soap*, LONG64 *, const char*, const char*);

#ifndef soap_read_LONG64
#define soap_read_LONG64(soap, data) ( soap_begin_recv(soap) || !soap_get_LONG64(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


/* _ns3__float is a typedef element/attribute synonym for float */

#ifndef SOAP_TYPE__ns3__float
#define SOAP_TYPE__ns3__float (171)
#endif

#define soap_default__ns3__float(soap, a) soap_default_float(soap, a)


#define soap_out__ns3__float soap_out_float


#define soap_in__ns3__float soap_in_float


#define soap_put__ns3__float soap_put_float


#define soap_get__ns3__float soap_get_float


#ifndef SOAP_TYPE_float
#define SOAP_TYPE_float (38)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_float(struct soap*, float *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_float(struct soap*, const char*, int, const float *, const char*);
SOAP_FMAC3 float * SOAP_FMAC4 soap_in_float(struct soap*, const char*, float *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_float(struct soap*, const float *, const char*, const char*);

#ifndef soap_write_float
#define soap_write_float(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_float(soap, data),0) || soap_put_float(soap, data, "float", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 float * SOAP_FMAC4 soap_get_float(struct soap*, float *, const char*, const char*);

#ifndef soap_read_float
#define soap_read_float(soap, data) ( soap_begin_recv(soap) || !soap_get_float(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


/* _ns3__double is a typedef element/attribute synonym for double */

#ifndef SOAP_TYPE__ns3__double
#define SOAP_TYPE__ns3__double (170)
#endif

#define soap_default__ns3__double(soap, a) soap_default_double(soap, a)


#define soap_out__ns3__double soap_out_double


#define soap_in__ns3__double soap_in_double


#define soap_put__ns3__double soap_put_double


#define soap_get__ns3__double soap_get_double


#ifndef SOAP_TYPE_double
#define SOAP_TYPE_double (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_double(struct soap*, double *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_double(struct soap*, const char*, int, const double *, const char*);
SOAP_FMAC3 double * SOAP_FMAC4 soap_in_double(struct soap*, const char*, double *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_double(struct soap*, const double *, const char*, const char*);

#ifndef soap_write_double
#define soap_write_double(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_double(soap, data),0) || soap_put_double(soap, data, "double", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 double * SOAP_FMAC4 soap_get_double(struct soap*, double *, const char*, const char*);

#ifndef soap_read_double
#define soap_read_double(soap, data) ( soap_begin_recv(soap) || !soap_get_double(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


/* _ns3__unsignedByte is a typedef element/attribute synonym for unsignedByte */

#ifndef SOAP_TYPE__ns3__unsignedByte
#define SOAP_TYPE__ns3__unsignedByte (177)
#endif

#define soap_default__ns3__unsignedByte(soap, a) soap_default_unsignedByte(soap, a)


#define soap_out__ns3__unsignedByte soap_out_unsignedByte


#define soap_in__ns3__unsignedByte soap_in_unsignedByte


#define soap_put__ns3__unsignedByte soap_put_unsignedByte


#define soap_get__ns3__unsignedByte soap_get_unsignedByte


#ifndef SOAP_TYPE_xsd__unsignedByte
#define SOAP_TYPE_xsd__unsignedByte (17)
#endif

#define soap_default_xsd__unsignedByte(soap, a) soap_default_unsignedByte(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__unsignedByte(struct soap*, const char*, int, const unsigned char *, const char*);
SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_in_xsd__unsignedByte(struct soap*, const char*, unsigned char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__unsignedByte(struct soap*, const unsigned char *, const char*, const char*);

#ifndef soap_write_xsd__unsignedByte
#define soap_write_xsd__unsignedByte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__unsignedByte(soap, data),0) || soap_put_xsd__unsignedByte(soap, data, "xsd:unsignedByte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_get_xsd__unsignedByte(struct soap*, unsigned char *, const char*, const char*);

#ifndef soap_read_xsd__unsignedByte
#define soap_read_xsd__unsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__unsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_unsignedByte
#define SOAP_TYPE_unsignedByte (14)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedByte(struct soap*, unsigned char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedByte(struct soap*, const char*, int, const unsigned char *, const char*);
SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_in_unsignedByte(struct soap*, const char*, unsigned char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedByte(struct soap*, const unsigned char *, const char*, const char*);

#ifndef soap_write_unsignedByte
#define soap_write_unsignedByte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_unsignedByte(soap, data),0) || soap_put_unsignedByte(soap, data, "unsignedByte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_get_unsignedByte(struct soap*, unsigned char *, const char*, const char*);

#ifndef soap_read_unsignedByte
#define soap_read_unsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


/* _ns3__unsignedShort is a typedef element/attribute synonym for unsignedShort */

#ifndef SOAP_TYPE__ns3__unsignedShort
#define SOAP_TYPE__ns3__unsignedShort (180)
#endif

#define soap_default__ns3__unsignedShort(soap, a) soap_default_unsignedShort(soap, a)


#define soap_out__ns3__unsignedShort soap_out_unsignedShort


#define soap_in__ns3__unsignedShort soap_in_unsignedShort


#define soap_put__ns3__unsignedShort soap_put_unsignedShort


#define soap_get__ns3__unsignedShort soap_get_unsignedShort


#ifndef SOAP_TYPE_unsignedShort
#define SOAP_TYPE_unsignedShort (50)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedShort(struct soap*, unsigned short *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedShort(struct soap*, const char*, int, const unsigned short *, const char*);
SOAP_FMAC3 unsigned short * SOAP_FMAC4 soap_in_unsignedShort(struct soap*, const char*, unsigned short *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedShort(struct soap*, const unsigned short *, const char*, const char*);

#ifndef soap_write_unsignedShort
#define soap_write_unsignedShort(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_unsignedShort(soap, data),0) || soap_put_unsignedShort(soap, data, "unsignedShort", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned short * SOAP_FMAC4 soap_get_unsignedShort(struct soap*, unsigned short *, const char*, const char*);

#ifndef soap_read_unsignedShort
#define soap_read_unsignedShort(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedShort(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


/* _ns3__unsignedInt is a typedef element/attribute synonym for unsignedInt */

#ifndef SOAP_TYPE__ns3__unsignedInt
#define SOAP_TYPE__ns3__unsignedInt (178)
#endif

#define soap_default__ns3__unsignedInt(soap, a) soap_default_unsignedInt(soap, a)


#define soap_out__ns3__unsignedInt soap_out_unsignedInt


#define soap_in__ns3__unsignedInt soap_in_unsignedInt


#define soap_put__ns3__unsignedInt soap_put_unsignedInt


#define soap_get__ns3__unsignedInt soap_get_unsignedInt


#ifndef SOAP_TYPE_unsignedInt
#define SOAP_TYPE_unsignedInt (13)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedInt(struct soap*, unsigned int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedInt(struct soap*, const char*, int, const unsigned int *, const char*);
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_in_unsignedInt(struct soap*, const char*, unsigned int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedInt(struct soap*, const unsigned int *, const char*, const char*);

#ifndef soap_write_unsignedInt
#define soap_write_unsignedInt(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_unsignedInt(soap, data),0) || soap_put_unsignedInt(soap, data, "unsignedInt", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_get_unsignedInt(struct soap*, unsigned int *, const char*, const char*);

#ifndef soap_read_unsignedInt
#define soap_read_unsignedInt(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedInt(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


/* _ns3__unsignedLong is a typedef element/attribute synonym for unsignedLONG64 */

#ifndef SOAP_TYPE__ns3__unsignedLong
#define SOAP_TYPE__ns3__unsignedLong (179)
#endif

#define soap_default__ns3__unsignedLong(soap, a) soap_default_unsignedLONG64(soap, a)


#define soap_out__ns3__unsignedLong soap_out_unsignedLONG64


#define soap_in__ns3__unsignedLong soap_in_unsignedLONG64


#define soap_put__ns3__unsignedLong soap_put_unsignedLONG64


#define soap_get__ns3__unsignedLong soap_get_unsignedLONG64


#ifndef SOAP_TYPE_unsignedLONG64
#define SOAP_TYPE_unsignedLONG64 (48)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedLONG64(struct soap*, ULONG64 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedLONG64(struct soap*, const char*, int, const ULONG64 *, const char*);
SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_in_unsignedLONG64(struct soap*, const char*, ULONG64 *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedLONG64(struct soap*, const ULONG64 *, const char*, const char*);

#ifndef soap_write_unsignedLONG64
#define soap_write_unsignedLONG64(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_unsignedLONG64(soap, data),0) || soap_put_unsignedLONG64(soap, data, "unsignedLong", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_get_unsignedLONG64(struct soap*, ULONG64 *, const char*, const char*);

#ifndef soap_read_unsignedLONG64
#define soap_read_unsignedLONG64(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedLONG64(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


/* _ns3__dateTime is a typedef element/attribute synonym for time */

#ifndef SOAP_TYPE__ns3__dateTime
#define SOAP_TYPE__ns3__dateTime (168)
#endif

#define soap_default__ns3__dateTime(soap, a) soap_default_time(soap, a)


#define soap_out__ns3__dateTime soap_out_time


#define soap_in__ns3__dateTime soap_in_time


#define soap_put__ns3__dateTime soap_put_time


#define soap_get__ns3__dateTime soap_get_time


#ifndef SOAP_TYPE_time
#define SOAP_TYPE_time (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_time(struct soap*, time_t *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_time(struct soap*, const char*, int, const time_t *, const char*);
SOAP_FMAC3 time_t * SOAP_FMAC4 soap_in_time(struct soap*, const char*, time_t *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_time(struct soap*, const time_t *, const char*, const char*);

#ifndef soap_write_time
#define soap_write_time(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_time(soap, data),0) || soap_put_time(soap, data, "dateTime", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 time_t * SOAP_FMAC4 soap_get_time(struct soap*, time_t *, const char*, const char*);

#ifndef soap_read_time
#define soap_read_time(soap, data) ( soap_begin_recv(soap) || !soap_get_time(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


/* _ns3__boolean is a typedef element/attribute synonym for bool */

#ifndef SOAP_TYPE__ns3__boolean
#define SOAP_TYPE__ns3__boolean (166)
#endif

#define soap_default__ns3__boolean(soap, a) soap_default_bool(soap, a)


#define soap_out__ns3__boolean soap_out_bool


#define soap_in__ns3__boolean soap_in_bool


#define soap_put__ns3__boolean soap_put_bool


#define soap_get__ns3__boolean soap_get_bool


#ifndef SOAP_TYPE_bool
#define SOAP_TYPE_bool (27)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_bool(struct soap*, bool *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_bool(struct soap*, const char*, int, const bool *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_bool2s(struct soap*, bool);
SOAP_FMAC3 bool * SOAP_FMAC4 soap_in_bool(struct soap*, const char*, bool *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2bool(struct soap*, const char*, bool *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_bool(struct soap*, const bool *, const char*, const char*);

#ifndef soap_write_bool
#define soap_write_bool(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_bool(soap, data),0) || soap_put_bool(soap, data, "boolean", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 bool * SOAP_FMAC4 soap_get_bool(struct soap*, bool *, const char*, const char*);

#ifndef soap_read_bool
#define soap_read_bool(soap, data) ( soap_begin_recv(soap) || !soap_get_bool(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


/* _ns6__StudyOfflineFault is a typedef element/attribute synonym for ns6__StudyOfflineFault */

#ifndef SOAP_TYPE__ns6__StudyOfflineFault
#define SOAP_TYPE__ns6__StudyOfflineFault (201)
#endif

#define soap_default__ns6__StudyOfflineFault(soap, a) (a)->ns6__StudyOfflineFault::soap_default(soap)


#define soap_serialize__ns6__StudyOfflineFault(soap, a) (a)->soap_serialize(soap)


#define soap_out__ns6__StudyOfflineFault soap_out_ns6__StudyOfflineFault


#define soap_in__ns6__StudyOfflineFault soap_in_ns6__StudyOfflineFault


#define soap_put__ns6__StudyOfflineFault soap_put_ns6__StudyOfflineFault


#define soap_get__ns6__StudyOfflineFault soap_get_ns6__StudyOfflineFault


#define soap_instantiate__ns6__StudyOfflineFault soap_instantiate_ns6__StudyOfflineFault


#define soap_copy__ns6__StudyOfflineFault soap_copy_ns6__StudyOfflineFault

/* _ns6__StudyInUseFault is a typedef element/attribute synonym for ns6__StudyInUseFault */

#ifndef SOAP_TYPE__ns6__StudyInUseFault
#define SOAP_TYPE__ns6__StudyInUseFault (200)
#endif

#define soap_default__ns6__StudyInUseFault(soap, a) (a)->ns6__StudyInUseFault::soap_default(soap)


#define soap_serialize__ns6__StudyInUseFault(soap, a) (a)->soap_serialize(soap)


#define soap_out__ns6__StudyInUseFault soap_out_ns6__StudyInUseFault


#define soap_in__ns6__StudyInUseFault soap_in_ns6__StudyInUseFault


#define soap_put__ns6__StudyInUseFault soap_put_ns6__StudyInUseFault


#define soap_get__ns6__StudyInUseFault soap_get_ns6__StudyInUseFault


#define soap_instantiate__ns6__StudyInUseFault soap_instantiate_ns6__StudyInUseFault


#define soap_copy__ns6__StudyInUseFault soap_copy_ns6__StudyInUseFault

/* _ns6__StudyNotFoundFault is a typedef element/attribute synonym for ns6__StudyNotFoundFault */

#ifndef SOAP_TYPE__ns6__StudyNotFoundFault
#define SOAP_TYPE__ns6__StudyNotFoundFault (199)
#endif

#define soap_default__ns6__StudyNotFoundFault(soap, a) (a)->ns6__StudyNotFoundFault::soap_default(soap)


#define soap_serialize__ns6__StudyNotFoundFault(soap, a) (a)->soap_serialize(soap)


#define soap_out__ns6__StudyNotFoundFault soap_out_ns6__StudyNotFoundFault


#define soap_in__ns6__StudyNotFoundFault soap_in_ns6__StudyNotFoundFault


#define soap_put__ns6__StudyNotFoundFault soap_put_ns6__StudyNotFoundFault


#define soap_get__ns6__StudyNotFoundFault soap_get_ns6__StudyNotFoundFault


#define soap_instantiate__ns6__StudyNotFoundFault soap_instantiate_ns6__StudyNotFoundFault


#define soap_copy__ns6__StudyNotFoundFault soap_copy_ns6__StudyNotFoundFault

/* _ns6__StudyNearlineFault is a typedef element/attribute synonym for ns6__StudyNearlineFault */

#ifndef SOAP_TYPE__ns6__StudyNearlineFault
#define SOAP_TYPE__ns6__StudyNearlineFault (198)
#endif

#define soap_default__ns6__StudyNearlineFault(soap, a) (a)->ns6__StudyNearlineFault::soap_default(soap)


#define soap_serialize__ns6__StudyNearlineFault(soap, a) (a)->soap_serialize(soap)


#define soap_out__ns6__StudyNearlineFault soap_out_ns6__StudyNearlineFault


#define soap_in__ns6__StudyNearlineFault soap_in_ns6__StudyNearlineFault


#define soap_put__ns6__StudyNearlineFault soap_put_ns6__StudyNearlineFault


#define soap_get__ns6__StudyNearlineFault soap_get_ns6__StudyNearlineFault


#define soap_instantiate__ns6__StudyNearlineFault soap_instantiate_ns6__StudyNearlineFault


#define soap_copy__ns6__StudyNearlineFault soap_copy_ns6__StudyNearlineFault

/* _ns5__ArrayOfImageIdentifier is a typedef element/attribute synonym for ns5__ArrayOfImageIdentifier */

#ifndef SOAP_TYPE__ns5__ArrayOfImageIdentifier
#define SOAP_TYPE__ns5__ArrayOfImageIdentifier (197)
#endif

#define soap_default__ns5__ArrayOfImageIdentifier(soap, a) (a)->ns5__ArrayOfImageIdentifier::soap_default(soap)


#define soap_serialize__ns5__ArrayOfImageIdentifier(soap, a) (a)->soap_serialize(soap)


#define soap_out__ns5__ArrayOfImageIdentifier soap_out_ns5__ArrayOfImageIdentifier


#define soap_in__ns5__ArrayOfImageIdentifier soap_in_ns5__ArrayOfImageIdentifier


#define soap_put__ns5__ArrayOfImageIdentifier soap_put_ns5__ArrayOfImageIdentifier


#define soap_get__ns5__ArrayOfImageIdentifier soap_get_ns5__ArrayOfImageIdentifier


#define soap_instantiate__ns5__ArrayOfImageIdentifier soap_instantiate_ns5__ArrayOfImageIdentifier


#define soap_copy__ns5__ArrayOfImageIdentifier soap_copy_ns5__ArrayOfImageIdentifier

/* _ns5__ImageIdentifier is a typedef element/attribute synonym for ns5__ImageIdentifier */

#ifndef SOAP_TYPE__ns5__ImageIdentifier
#define SOAP_TYPE__ns5__ImageIdentifier (196)
#endif

#define soap_default__ns5__ImageIdentifier(soap, a) (a)->ns5__ImageIdentifier::soap_default(soap)


#define soap_serialize__ns5__ImageIdentifier(soap, a) (a)->soap_serialize(soap)


#define soap_out__ns5__ImageIdentifier soap_out_ns5__ImageIdentifier


#define soap_in__ns5__ImageIdentifier soap_in_ns5__ImageIdentifier


#define soap_put__ns5__ImageIdentifier soap_put_ns5__ImageIdentifier


#define soap_get__ns5__ImageIdentifier soap_get_ns5__ImageIdentifier


#define soap_instantiate__ns5__ImageIdentifier soap_instantiate_ns5__ImageIdentifier


#define soap_copy__ns5__ImageIdentifier soap_copy_ns5__ImageIdentifier

/* _ns5__ArrayOfSeriesIdentifier is a typedef element/attribute synonym for ns5__ArrayOfSeriesIdentifier */

#ifndef SOAP_TYPE__ns5__ArrayOfSeriesIdentifier
#define SOAP_TYPE__ns5__ArrayOfSeriesIdentifier (195)
#endif

#define soap_default__ns5__ArrayOfSeriesIdentifier(soap, a) (a)->ns5__ArrayOfSeriesIdentifier::soap_default(soap)


#define soap_serialize__ns5__ArrayOfSeriesIdentifier(soap, a) (a)->soap_serialize(soap)


#define soap_out__ns5__ArrayOfSeriesIdentifier soap_out_ns5__ArrayOfSeriesIdentifier


#define soap_in__ns5__ArrayOfSeriesIdentifier soap_in_ns5__ArrayOfSeriesIdentifier


#define soap_put__ns5__ArrayOfSeriesIdentifier soap_put_ns5__ArrayOfSeriesIdentifier


#define soap_get__ns5__ArrayOfSeriesIdentifier soap_get_ns5__ArrayOfSeriesIdentifier


#define soap_instantiate__ns5__ArrayOfSeriesIdentifier soap_instantiate_ns5__ArrayOfSeriesIdentifier


#define soap_copy__ns5__ArrayOfSeriesIdentifier soap_copy_ns5__ArrayOfSeriesIdentifier

/* _ns5__SeriesIdentifier is a typedef element/attribute synonym for ns5__SeriesIdentifier */

#ifndef SOAP_TYPE__ns5__SeriesIdentifier
#define SOAP_TYPE__ns5__SeriesIdentifier (194)
#endif

#define soap_default__ns5__SeriesIdentifier(soap, a) (a)->ns5__SeriesIdentifier::soap_default(soap)


#define soap_serialize__ns5__SeriesIdentifier(soap, a) (a)->soap_serialize(soap)


#define soap_out__ns5__SeriesIdentifier soap_out_ns5__SeriesIdentifier


#define soap_in__ns5__SeriesIdentifier soap_in_ns5__SeriesIdentifier


#define soap_put__ns5__SeriesIdentifier soap_put_ns5__SeriesIdentifier


#define soap_get__ns5__SeriesIdentifier soap_get_ns5__SeriesIdentifier


#define soap_instantiate__ns5__SeriesIdentifier soap_instantiate_ns5__SeriesIdentifier


#define soap_copy__ns5__SeriesIdentifier soap_copy_ns5__SeriesIdentifier

/* _ns5__DataValidationFault is a typedef element/attribute synonym for ns5__DataValidationFault */

#ifndef SOAP_TYPE__ns5__DataValidationFault
#define SOAP_TYPE__ns5__DataValidationFault (193)
#endif

#define soap_default__ns5__DataValidationFault(soap, a) (a)->ns5__DataValidationFault::soap_default(soap)


#define soap_serialize__ns5__DataValidationFault(soap, a) (a)->soap_serialize(soap)


#define soap_out__ns5__DataValidationFault soap_out_ns5__DataValidationFault


#define soap_in__ns5__DataValidationFault soap_in_ns5__DataValidationFault


#define soap_put__ns5__DataValidationFault soap_put_ns5__DataValidationFault


#define soap_get__ns5__DataValidationFault soap_get_ns5__DataValidationFault


#define soap_instantiate__ns5__DataValidationFault soap_instantiate_ns5__DataValidationFault


#define soap_copy__ns5__DataValidationFault soap_copy_ns5__DataValidationFault

/* _ns5__QueryFailedFault is a typedef element/attribute synonym for ns5__QueryFailedFault */

#ifndef SOAP_TYPE__ns5__QueryFailedFault
#define SOAP_TYPE__ns5__QueryFailedFault (192)
#endif

#define soap_default__ns5__QueryFailedFault(soap, a) (a)->ns5__QueryFailedFault::soap_default(soap)


#define soap_serialize__ns5__QueryFailedFault(soap, a) (a)->soap_serialize(soap)


#define soap_out__ns5__QueryFailedFault soap_out_ns5__QueryFailedFault


#define soap_in__ns5__QueryFailedFault soap_in_ns5__QueryFailedFault


#define soap_put__ns5__QueryFailedFault soap_put_ns5__QueryFailedFault


#define soap_get__ns5__QueryFailedFault soap_get_ns5__QueryFailedFault


#define soap_instantiate__ns5__QueryFailedFault soap_instantiate_ns5__QueryFailedFault


#define soap_copy__ns5__QueryFailedFault soap_copy_ns5__QueryFailedFault

/* _ns5__ArrayOfStudyRootStudyIdentifier is a typedef element/attribute synonym for ns5__ArrayOfStudyRootStudyIdentifier */

#ifndef SOAP_TYPE__ns5__ArrayOfStudyRootStudyIdentifier
#define SOAP_TYPE__ns5__ArrayOfStudyRootStudyIdentifier (191)
#endif

#define soap_default__ns5__ArrayOfStudyRootStudyIdentifier(soap, a) (a)->ns5__ArrayOfStudyRootStudyIdentifier::soap_default(soap)


#define soap_serialize__ns5__ArrayOfStudyRootStudyIdentifier(soap, a) (a)->soap_serialize(soap)


#define soap_out__ns5__ArrayOfStudyRootStudyIdentifier soap_out_ns5__ArrayOfStudyRootStudyIdentifier


#define soap_in__ns5__ArrayOfStudyRootStudyIdentifier soap_in_ns5__ArrayOfStudyRootStudyIdentifier


#define soap_put__ns5__ArrayOfStudyRootStudyIdentifier soap_put_ns5__ArrayOfStudyRootStudyIdentifier


#define soap_get__ns5__ArrayOfStudyRootStudyIdentifier soap_get_ns5__ArrayOfStudyRootStudyIdentifier


#define soap_instantiate__ns5__ArrayOfStudyRootStudyIdentifier soap_instantiate_ns5__ArrayOfStudyRootStudyIdentifier


#define soap_copy__ns5__ArrayOfStudyRootStudyIdentifier soap_copy_ns5__ArrayOfStudyRootStudyIdentifier

/* _ns5__Identifier is a typedef element/attribute synonym for ns5__Identifier */

#ifndef SOAP_TYPE__ns5__Identifier
#define SOAP_TYPE__ns5__Identifier (190)
#endif

#define soap_default__ns5__Identifier(soap, a) (a)->ns5__Identifier::soap_default(soap)


#define soap_serialize__ns5__Identifier(soap, a) (a)->soap_serialize(soap)


#define soap_out__ns5__Identifier soap_out_ns5__Identifier


#define soap_in__ns5__Identifier soap_in_ns5__Identifier


#define soap_put__ns5__Identifier soap_put_ns5__Identifier


#define soap_get__ns5__Identifier soap_get_ns5__Identifier


#define soap_instantiate__ns5__Identifier soap_instantiate_ns5__Identifier


#define soap_copy__ns5__Identifier soap_copy_ns5__Identifier

/* _ns5__StudyIdentifier is a typedef element/attribute synonym for ns5__StudyIdentifier */

#ifndef SOAP_TYPE__ns5__StudyIdentifier
#define SOAP_TYPE__ns5__StudyIdentifier (189)
#endif

#define soap_default__ns5__StudyIdentifier(soap, a) (a)->ns5__StudyIdentifier::soap_default(soap)


#define soap_serialize__ns5__StudyIdentifier(soap, a) (a)->soap_serialize(soap)


#define soap_out__ns5__StudyIdentifier soap_out_ns5__StudyIdentifier


#define soap_in__ns5__StudyIdentifier soap_in_ns5__StudyIdentifier


#define soap_put__ns5__StudyIdentifier soap_put_ns5__StudyIdentifier


#define soap_get__ns5__StudyIdentifier soap_get_ns5__StudyIdentifier


#define soap_instantiate__ns5__StudyIdentifier soap_instantiate_ns5__StudyIdentifier


#define soap_copy__ns5__StudyIdentifier soap_copy_ns5__StudyIdentifier

/* _ns5__StudyRootStudyIdentifier is a typedef element/attribute synonym for ns5__StudyRootStudyIdentifier */

#ifndef SOAP_TYPE__ns5__StudyRootStudyIdentifier
#define SOAP_TYPE__ns5__StudyRootStudyIdentifier (188)
#endif

#define soap_default__ns5__StudyRootStudyIdentifier(soap, a) (a)->ns5__StudyRootStudyIdentifier::soap_default(soap)


#define soap_serialize__ns5__StudyRootStudyIdentifier(soap, a) (a)->soap_serialize(soap)


#define soap_out__ns5__StudyRootStudyIdentifier soap_out_ns5__StudyRootStudyIdentifier


#define soap_in__ns5__StudyRootStudyIdentifier soap_in_ns5__StudyRootStudyIdentifier


#define soap_put__ns5__StudyRootStudyIdentifier soap_put_ns5__StudyRootStudyIdentifier


#define soap_get__ns5__StudyRootStudyIdentifier soap_get_ns5__StudyRootStudyIdentifier


#define soap_instantiate__ns5__StudyRootStudyIdentifier soap_instantiate_ns5__StudyRootStudyIdentifier


#define soap_copy__ns5__StudyRootStudyIdentifier soap_copy_ns5__StudyRootStudyIdentifier

/* _ns4__ArrayOfstring is a typedef element/attribute synonym for ns4__ArrayOfstring */

#ifndef SOAP_TYPE__ns4__ArrayOfstring
#define SOAP_TYPE__ns4__ArrayOfstring (187)
#endif

#define soap_default__ns4__ArrayOfstring(soap, a) (a)->ns4__ArrayOfstring::soap_default(soap)


#define soap_serialize__ns4__ArrayOfstring(soap, a) (a)->soap_serialize(soap)


#define soap_out__ns4__ArrayOfstring soap_out_ns4__ArrayOfstring


#define soap_in__ns4__ArrayOfstring soap_in_ns4__ArrayOfstring


#define soap_put__ns4__ArrayOfstring soap_put_ns4__ArrayOfstring


#define soap_get__ns4__ArrayOfstring soap_get_ns4__ArrayOfstring


#define soap_instantiate__ns4__ArrayOfstring soap_instantiate_ns4__ArrayOfstring


#define soap_copy__ns4__ArrayOfstring soap_copy_ns4__ArrayOfstring

/* _ns3__Ref is a typedef element/attribute synonym for std__string */

#ifndef SOAP_TYPE__ns3__Ref
#define SOAP_TYPE__ns3__Ref (186)
#endif

#define soap_default__ns3__Ref(soap, a) soap_default_std__string(soap, a)


#define soap_serialize__ns3__Ref soap_serialize_std__string


#define soap_out__ns3__Ref soap_out_std__string


#define soap_in__ns3__Ref soap_in_std__string


#define soap_put__ns3__Ref soap_put_std__string


#define soap_get__ns3__Ref soap_get_std__string


#define soap_instantiate__ns3__Ref soap_instantiate_std__string


#define soap_copy__ns3__Ref soap_copy_std__string

/* _ns3__Id is a typedef element/attribute synonym for std__string */

#ifndef SOAP_TYPE__ns3__Id
#define SOAP_TYPE__ns3__Id (185)
#endif

#define soap_default__ns3__Id(soap, a) soap_default_std__string(soap, a)


#define soap_serialize__ns3__Id soap_serialize_std__string


#define soap_out__ns3__Id soap_out_std__string


#define soap_in__ns3__Id soap_in_std__string


#define soap_put__ns3__Id soap_put_std__string


#define soap_get__ns3__Id soap_get_std__string


#define soap_instantiate__ns3__Id soap_instantiate_std__string


#define soap_copy__ns3__Id soap_copy_std__string

/* _ns3__FactoryType is a typedef element/attribute synonym for std__string */

#ifndef SOAP_TYPE__ns3__FactoryType
#define SOAP_TYPE__ns3__FactoryType (184)
#endif

#define soap_default__ns3__FactoryType(soap, a) soap_default_std__string(soap, a)


#define soap_serialize__ns3__FactoryType soap_serialize_std__string


#define soap_out__ns3__FactoryType soap_out_std__string


#define soap_in__ns3__FactoryType soap_in_std__string


#define soap_put__ns3__FactoryType soap_put_std__string


#define soap_get__ns3__FactoryType soap_get_std__string


#define soap_instantiate__ns3__FactoryType soap_instantiate_std__string


#define soap_copy__ns3__FactoryType soap_copy_std__string

/* _ns3__guid is a typedef element/attribute synonym for std__string */

#ifndef SOAP_TYPE__ns3__guid
#define SOAP_TYPE__ns3__guid (183)
#endif

#define soap_default__ns3__guid(soap, a) soap_default_std__string(soap, a)


#define soap_serialize__ns3__guid soap_serialize_std__string


#define soap_out__ns3__guid soap_out_std__string


#define soap_in__ns3__guid soap_in_std__string


#define soap_put__ns3__guid soap_put_std__string


#define soap_get__ns3__guid soap_get_std__string


#define soap_instantiate__ns3__guid soap_instantiate_std__string


#define soap_copy__ns3__guid soap_copy_std__string

/* _ns3__duration is a typedef element/attribute synonym for std__string */

#ifndef SOAP_TYPE__ns3__duration
#define SOAP_TYPE__ns3__duration (182)
#endif

#define soap_default__ns3__duration(soap, a) soap_default_std__string(soap, a)


#define soap_serialize__ns3__duration soap_serialize_std__string


#define soap_out__ns3__duration soap_out_std__string


#define soap_in__ns3__duration soap_in_std__string


#define soap_put__ns3__duration soap_put_std__string


#define soap_get__ns3__duration soap_get_std__string


#define soap_instantiate__ns3__duration soap_instantiate_std__string


#define soap_copy__ns3__duration soap_copy_std__string

/* _ns3__string is a typedef element/attribute synonym for std__string */

#ifndef SOAP_TYPE__ns3__string
#define SOAP_TYPE__ns3__string (176)
#endif

#define soap_default__ns3__string(soap, a) soap_default_std__string(soap, a)


#define soap_serialize__ns3__string soap_serialize_std__string


#define soap_out__ns3__string soap_out_std__string


#define soap_in__ns3__string soap_in_std__string


#define soap_put__ns3__string soap_put_std__string


#define soap_get__ns3__string soap_get_std__string


#define soap_instantiate__ns3__string soap_instantiate_std__string


#define soap_copy__ns3__string soap_copy_std__string

/* _ns3__QName is a typedef element/attribute synonym for std__string */

#ifndef SOAP_TYPE__ns3__QName
#define SOAP_TYPE__ns3__QName (174)
#endif

#define soap_default__ns3__QName(soap, a) soap_default_std__string(soap, a)


#define soap_serialize__ns3__QName soap_serialize_std__string


#define soap_out__ns3__QName soap_out_std__string


#define soap_in__ns3__QName soap_in_std__string


#define soap_put__ns3__QName soap_put_std__string


#define soap_get__ns3__QName soap_get_std__string


#define soap_instantiate__ns3__QName soap_instantiate_std__string


#define soap_copy__ns3__QName soap_copy_std__string

/* _ns3__decimal is a typedef element/attribute synonym for std__string */

#ifndef SOAP_TYPE__ns3__decimal
#define SOAP_TYPE__ns3__decimal (169)
#endif

#define soap_default__ns3__decimal(soap, a) soap_default_std__string(soap, a)


#define soap_serialize__ns3__decimal soap_serialize_std__string


#define soap_out__ns3__decimal soap_out_std__string


#define soap_in__ns3__decimal soap_in_std__string


#define soap_put__ns3__decimal soap_put_std__string


#define soap_get__ns3__decimal soap_get_std__string


#define soap_instantiate__ns3__decimal soap_instantiate_std__string


#define soap_copy__ns3__decimal soap_copy_std__string

/* _ns3__base64Binary is a typedef element/attribute synonym for xsd__base64Binary */

#ifndef SOAP_TYPE__ns3__base64Binary
#define SOAP_TYPE__ns3__base64Binary (165)
#endif

#define soap_default__ns3__base64Binary(soap, a) (a)->xsd__base64Binary::soap_default(soap)


#define soap_serialize__ns3__base64Binary(soap, a) (a)->soap_serialize(soap)

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns3__base64Binary(struct soap*, const char*, int, const xsd__base64Binary *, const char*);
SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_in__ns3__base64Binary(struct soap*, const char*, xsd__base64Binary *, const char*);

#define soap_put__ns3__base64Binary soap_put_xsd__base64Binary


#define soap_get__ns3__base64Binary soap_get_xsd__base64Binary


#define soap_instantiate__ns3__base64Binary soap_instantiate_xsd__base64Binary


#define soap_copy__ns3__base64Binary soap_copy_xsd__base64Binary

/* _ns3__anyURI is a typedef element/attribute synonym for std__string */

#ifndef SOAP_TYPE__ns3__anyURI
#define SOAP_TYPE__ns3__anyURI (164)
#endif

#define soap_default__ns3__anyURI(soap, a) soap_default_std__string(soap, a)


#define soap_serialize__ns3__anyURI soap_serialize_std__string


#define soap_out__ns3__anyURI soap_out_std__string


#define soap_in__ns3__anyURI soap_in_std__string


#define soap_put__ns3__anyURI soap_put_std__string


#define soap_get__ns3__anyURI soap_get_std__string


#define soap_instantiate__ns3__anyURI soap_instantiate_std__string


#define soap_copy__ns3__anyURI soap_copy_std__string

/* _ns3__anyType is a typedef element/attribute synonym for xsd__anyType */

#ifndef SOAP_TYPE__ns3__anyType
#define SOAP_TYPE__ns3__anyType (163)
#endif

#define soap_default__ns3__anyType(soap, a) (a)->xsd__anyType::soap_default(soap)


#define soap_serialize__ns3__anyType(soap, a) (a)->soap_serialize(soap)


#define soap_out__ns3__anyType soap_out_xsd__anyType


#define soap_in__ns3__anyType soap_in_xsd__anyType


#define soap_put__ns3__anyType soap_put_xsd__anyType


#define soap_get__ns3__anyType soap_get_xsd__anyType


#define soap_instantiate__ns3__anyType soap_instantiate_xsd__anyType


#define soap_copy__ns3__anyType soap_copy_xsd__anyType

/* _ns2__CloseViewerRequest is a typedef element/attribute synonym for ns2__CloseViewerRequest */

#ifndef SOAP_TYPE__ns2__CloseViewerRequest
#define SOAP_TYPE__ns2__CloseViewerRequest (162)
#endif

#define soap_default__ns2__CloseViewerRequest(soap, a) (a)->ns2__CloseViewerRequest::soap_default(soap)


#define soap_serialize__ns2__CloseViewerRequest(soap, a) (a)->soap_serialize(soap)


#define soap_out__ns2__CloseViewerRequest soap_out_ns2__CloseViewerRequest


#define soap_in__ns2__CloseViewerRequest soap_in_ns2__CloseViewerRequest


#define soap_put__ns2__CloseViewerRequest soap_put_ns2__CloseViewerRequest


#define soap_get__ns2__CloseViewerRequest soap_get_ns2__CloseViewerRequest


#define soap_instantiate__ns2__CloseViewerRequest soap_instantiate_ns2__CloseViewerRequest


#define soap_copy__ns2__CloseViewerRequest soap_copy_ns2__CloseViewerRequest

/* _ns2__ActivateViewerRequest is a typedef element/attribute synonym for ns2__ActivateViewerRequest */

#ifndef SOAP_TYPE__ns2__ActivateViewerRequest
#define SOAP_TYPE__ns2__ActivateViewerRequest (161)
#endif

#define soap_default__ns2__ActivateViewerRequest(soap, a) (a)->ns2__ActivateViewerRequest::soap_default(soap)


#define soap_serialize__ns2__ActivateViewerRequest(soap, a) (a)->soap_serialize(soap)


#define soap_out__ns2__ActivateViewerRequest soap_out_ns2__ActivateViewerRequest


#define soap_in__ns2__ActivateViewerRequest soap_in_ns2__ActivateViewerRequest


#define soap_put__ns2__ActivateViewerRequest soap_put_ns2__ActivateViewerRequest


#define soap_get__ns2__ActivateViewerRequest soap_get_ns2__ActivateViewerRequest


#define soap_instantiate__ns2__ActivateViewerRequest soap_instantiate_ns2__ActivateViewerRequest


#define soap_copy__ns2__ActivateViewerRequest soap_copy_ns2__ActivateViewerRequest

/* _ns2__OpenStudiesFault is a typedef element/attribute synonym for ns2__OpenStudiesFault */

#ifndef SOAP_TYPE__ns2__OpenStudiesFault
#define SOAP_TYPE__ns2__OpenStudiesFault (160)
#endif

#define soap_default__ns2__OpenStudiesFault(soap, a) (a)->ns2__OpenStudiesFault::soap_default(soap)


#define soap_serialize__ns2__OpenStudiesFault(soap, a) (a)->soap_serialize(soap)


#define soap_out__ns2__OpenStudiesFault soap_out_ns2__OpenStudiesFault


#define soap_in__ns2__OpenStudiesFault soap_in_ns2__OpenStudiesFault


#define soap_put__ns2__OpenStudiesFault soap_put_ns2__OpenStudiesFault


#define soap_get__ns2__OpenStudiesFault soap_get_ns2__OpenStudiesFault


#define soap_instantiate__ns2__OpenStudiesFault soap_instantiate_ns2__OpenStudiesFault


#define soap_copy__ns2__OpenStudiesFault soap_copy_ns2__OpenStudiesFault

/* _ns2__OpenStudiesResult is a typedef element/attribute synonym for ns2__OpenStudiesResult */

#ifndef SOAP_TYPE__ns2__OpenStudiesResult
#define SOAP_TYPE__ns2__OpenStudiesResult (159)
#endif

#define soap_default__ns2__OpenStudiesResult(soap, a) (a)->ns2__OpenStudiesResult::soap_default(soap)


#define soap_serialize__ns2__OpenStudiesResult(soap, a) (a)->soap_serialize(soap)


#define soap_out__ns2__OpenStudiesResult soap_out_ns2__OpenStudiesResult


#define soap_in__ns2__OpenStudiesResult soap_in_ns2__OpenStudiesResult


#define soap_put__ns2__OpenStudiesResult soap_put_ns2__OpenStudiesResult


#define soap_get__ns2__OpenStudiesResult soap_get_ns2__OpenStudiesResult


#define soap_instantiate__ns2__OpenStudiesResult soap_instantiate_ns2__OpenStudiesResult


#define soap_copy__ns2__OpenStudiesResult soap_copy_ns2__OpenStudiesResult

/* _ns2__OpenStudyInfo is a typedef element/attribute synonym for ns2__OpenStudyInfo */

#ifndef SOAP_TYPE__ns2__OpenStudyInfo
#define SOAP_TYPE__ns2__OpenStudyInfo (158)
#endif

#define soap_default__ns2__OpenStudyInfo(soap, a) (a)->ns2__OpenStudyInfo::soap_default(soap)


#define soap_serialize__ns2__OpenStudyInfo(soap, a) (a)->soap_serialize(soap)


#define soap_out__ns2__OpenStudyInfo soap_out_ns2__OpenStudyInfo


#define soap_in__ns2__OpenStudyInfo soap_in_ns2__OpenStudyInfo


#define soap_put__ns2__OpenStudyInfo soap_put_ns2__OpenStudyInfo


#define soap_get__ns2__OpenStudyInfo soap_get_ns2__OpenStudyInfo


#define soap_instantiate__ns2__OpenStudyInfo soap_instantiate_ns2__OpenStudyInfo


#define soap_copy__ns2__OpenStudyInfo soap_copy_ns2__OpenStudyInfo

/* _ns2__ArrayOfOpenStudyInfo is a typedef element/attribute synonym for ns2__ArrayOfOpenStudyInfo */

#ifndef SOAP_TYPE__ns2__ArrayOfOpenStudyInfo
#define SOAP_TYPE__ns2__ArrayOfOpenStudyInfo (157)
#endif

#define soap_default__ns2__ArrayOfOpenStudyInfo(soap, a) (a)->ns2__ArrayOfOpenStudyInfo::soap_default(soap)


#define soap_serialize__ns2__ArrayOfOpenStudyInfo(soap, a) (a)->soap_serialize(soap)


#define soap_out__ns2__ArrayOfOpenStudyInfo soap_out_ns2__ArrayOfOpenStudyInfo


#define soap_in__ns2__ArrayOfOpenStudyInfo soap_in_ns2__ArrayOfOpenStudyInfo


#define soap_put__ns2__ArrayOfOpenStudyInfo soap_put_ns2__ArrayOfOpenStudyInfo


#define soap_get__ns2__ArrayOfOpenStudyInfo soap_get_ns2__ArrayOfOpenStudyInfo


#define soap_instantiate__ns2__ArrayOfOpenStudyInfo soap_instantiate_ns2__ArrayOfOpenStudyInfo


#define soap_copy__ns2__ArrayOfOpenStudyInfo soap_copy_ns2__ArrayOfOpenStudyInfo

/* _ns2__OpenStudiesRequest is a typedef element/attribute synonym for ns2__OpenStudiesRequest */

#ifndef SOAP_TYPE__ns2__OpenStudiesRequest
#define SOAP_TYPE__ns2__OpenStudiesRequest (156)
#endif

#define soap_default__ns2__OpenStudiesRequest(soap, a) (a)->ns2__OpenStudiesRequest::soap_default(soap)


#define soap_serialize__ns2__OpenStudiesRequest(soap, a) (a)->soap_serialize(soap)


#define soap_out__ns2__OpenStudiesRequest soap_out_ns2__OpenStudiesRequest


#define soap_in__ns2__OpenStudiesRequest soap_in_ns2__OpenStudiesRequest


#define soap_put__ns2__OpenStudiesRequest soap_put_ns2__OpenStudiesRequest


#define soap_get__ns2__OpenStudiesRequest soap_get_ns2__OpenStudiesRequest


#define soap_instantiate__ns2__OpenStudiesRequest soap_instantiate_ns2__OpenStudiesRequest


#define soap_copy__ns2__OpenStudiesRequest soap_copy_ns2__OpenStudiesRequest

/* _ns2__ViewerNotFoundFault is a typedef element/attribute synonym for ns2__ViewerNotFoundFault */

#ifndef SOAP_TYPE__ns2__ViewerNotFoundFault
#define SOAP_TYPE__ns2__ViewerNotFoundFault (155)
#endif

#define soap_default__ns2__ViewerNotFoundFault(soap, a) (a)->ns2__ViewerNotFoundFault::soap_default(soap)


#define soap_serialize__ns2__ViewerNotFoundFault(soap, a) (a)->soap_serialize(soap)


#define soap_out__ns2__ViewerNotFoundFault soap_out_ns2__ViewerNotFoundFault


#define soap_in__ns2__ViewerNotFoundFault soap_in_ns2__ViewerNotFoundFault


#define soap_put__ns2__ViewerNotFoundFault soap_put_ns2__ViewerNotFoundFault


#define soap_get__ns2__ViewerNotFoundFault soap_get_ns2__ViewerNotFoundFault


#define soap_instantiate__ns2__ViewerNotFoundFault soap_instantiate_ns2__ViewerNotFoundFault


#define soap_copy__ns2__ViewerNotFoundFault soap_copy_ns2__ViewerNotFoundFault

/* _ns2__GetViewerInfoResult is a typedef element/attribute synonym for ns2__GetViewerInfoResult */

#ifndef SOAP_TYPE__ns2__GetViewerInfoResult
#define SOAP_TYPE__ns2__GetViewerInfoResult (154)
#endif

#define soap_default__ns2__GetViewerInfoResult(soap, a) (a)->ns2__GetViewerInfoResult::soap_default(soap)


#define soap_serialize__ns2__GetViewerInfoResult(soap, a) (a)->soap_serialize(soap)


#define soap_out__ns2__GetViewerInfoResult soap_out_ns2__GetViewerInfoResult


#define soap_in__ns2__GetViewerInfoResult soap_in_ns2__GetViewerInfoResult


#define soap_put__ns2__GetViewerInfoResult soap_put_ns2__GetViewerInfoResult


#define soap_get__ns2__GetViewerInfoResult soap_get_ns2__GetViewerInfoResult


#define soap_instantiate__ns2__GetViewerInfoResult soap_instantiate_ns2__GetViewerInfoResult


#define soap_copy__ns2__GetViewerInfoResult soap_copy_ns2__GetViewerInfoResult

/* _ns2__GetViewerInfoRequest is a typedef element/attribute synonym for ns2__GetViewerInfoRequest */

#ifndef SOAP_TYPE__ns2__GetViewerInfoRequest
#define SOAP_TYPE__ns2__GetViewerInfoRequest (153)
#endif

#define soap_default__ns2__GetViewerInfoRequest(soap, a) (a)->ns2__GetViewerInfoRequest::soap_default(soap)


#define soap_serialize__ns2__GetViewerInfoRequest(soap, a) (a)->soap_serialize(soap)


#define soap_out__ns2__GetViewerInfoRequest soap_out_ns2__GetViewerInfoRequest


#define soap_in__ns2__GetViewerInfoRequest soap_in_ns2__GetViewerInfoRequest


#define soap_put__ns2__GetViewerInfoRequest soap_put_ns2__GetViewerInfoRequest


#define soap_get__ns2__GetViewerInfoRequest soap_get_ns2__GetViewerInfoRequest


#define soap_instantiate__ns2__GetViewerInfoRequest soap_instantiate_ns2__GetViewerInfoRequest


#define soap_copy__ns2__GetViewerInfoRequest soap_copy_ns2__GetViewerInfoRequest

/* _ns2__NoActiveViewersFault is a typedef element/attribute synonym for ns2__NoActiveViewersFault */

#ifndef SOAP_TYPE__ns2__NoActiveViewersFault
#define SOAP_TYPE__ns2__NoActiveViewersFault (152)
#endif

#define soap_default__ns2__NoActiveViewersFault(soap, a) (a)->ns2__NoActiveViewersFault::soap_default(soap)


#define soap_serialize__ns2__NoActiveViewersFault(soap, a) (a)->soap_serialize(soap)


#define soap_out__ns2__NoActiveViewersFault soap_out_ns2__NoActiveViewersFault


#define soap_in__ns2__NoActiveViewersFault soap_in_ns2__NoActiveViewersFault


#define soap_put__ns2__NoActiveViewersFault soap_put_ns2__NoActiveViewersFault


#define soap_get__ns2__NoActiveViewersFault soap_get_ns2__NoActiveViewersFault


#define soap_instantiate__ns2__NoActiveViewersFault soap_instantiate_ns2__NoActiveViewersFault


#define soap_copy__ns2__NoActiveViewersFault soap_copy_ns2__NoActiveViewersFault

/* _ns2__GetActiveViewersResult is a typedef element/attribute synonym for ns2__GetActiveViewersResult */

#ifndef SOAP_TYPE__ns2__GetActiveViewersResult
#define SOAP_TYPE__ns2__GetActiveViewersResult (151)
#endif

#define soap_default__ns2__GetActiveViewersResult(soap, a) (a)->ns2__GetActiveViewersResult::soap_default(soap)


#define soap_serialize__ns2__GetActiveViewersResult(soap, a) (a)->soap_serialize(soap)


#define soap_out__ns2__GetActiveViewersResult soap_out_ns2__GetActiveViewersResult


#define soap_in__ns2__GetActiveViewersResult soap_in_ns2__GetActiveViewersResult


#define soap_put__ns2__GetActiveViewersResult soap_put_ns2__GetActiveViewersResult


#define soap_get__ns2__GetActiveViewersResult soap_get_ns2__GetActiveViewersResult


#define soap_instantiate__ns2__GetActiveViewersResult soap_instantiate_ns2__GetActiveViewersResult


#define soap_copy__ns2__GetActiveViewersResult soap_copy_ns2__GetActiveViewersResult

/* _ns2__NoViewersFault is a typedef element/attribute synonym for ns2__NoViewersFault */

#ifndef SOAP_TYPE__ns2__NoViewersFault
#define SOAP_TYPE__ns2__NoViewersFault (150)
#endif

#define soap_default__ns2__NoViewersFault(soap, a) (a)->ns2__NoViewersFault::soap_default(soap)


#define soap_serialize__ns2__NoViewersFault(soap, a) (a)->soap_serialize(soap)


#define soap_out__ns2__NoViewersFault soap_out_ns2__NoViewersFault


#define soap_in__ns2__NoViewersFault soap_in_ns2__NoViewersFault


#define soap_put__ns2__NoViewersFault soap_put_ns2__NoViewersFault


#define soap_get__ns2__NoViewersFault soap_get_ns2__NoViewersFault


#define soap_instantiate__ns2__NoViewersFault soap_instantiate_ns2__NoViewersFault


#define soap_copy__ns2__NoViewersFault soap_copy_ns2__NoViewersFault

/* _ns2__ArrayOfViewer is a typedef element/attribute synonym for ns2__ArrayOfViewer */

#ifndef SOAP_TYPE__ns2__ArrayOfViewer
#define SOAP_TYPE__ns2__ArrayOfViewer (149)
#endif

#define soap_default__ns2__ArrayOfViewer(soap, a) (a)->ns2__ArrayOfViewer::soap_default(soap)


#define soap_serialize__ns2__ArrayOfViewer(soap, a) (a)->soap_serialize(soap)


#define soap_out__ns2__ArrayOfViewer soap_out_ns2__ArrayOfViewer


#define soap_in__ns2__ArrayOfViewer soap_in_ns2__ArrayOfViewer


#define soap_put__ns2__ArrayOfViewer soap_put_ns2__ArrayOfViewer


#define soap_get__ns2__ArrayOfViewer soap_get_ns2__ArrayOfViewer


#define soap_instantiate__ns2__ArrayOfViewer soap_instantiate_ns2__ArrayOfViewer


#define soap_copy__ns2__ArrayOfViewer soap_copy_ns2__ArrayOfViewer

/* _ns2__GetViewersResult is a typedef element/attribute synonym for ns2__GetViewersResult */

#ifndef SOAP_TYPE__ns2__GetViewersResult
#define SOAP_TYPE__ns2__GetViewersResult (148)
#endif

#define soap_default__ns2__GetViewersResult(soap, a) (a)->ns2__GetViewersResult::soap_default(soap)


#define soap_serialize__ns2__GetViewersResult(soap, a) (a)->soap_serialize(soap)


#define soap_out__ns2__GetViewersResult soap_out_ns2__GetViewersResult


#define soap_in__ns2__GetViewersResult soap_in_ns2__GetViewersResult


#define soap_put__ns2__GetViewersResult soap_put_ns2__GetViewersResult


#define soap_get__ns2__GetViewersResult soap_get_ns2__GetViewersResult


#define soap_instantiate__ns2__GetViewersResult soap_instantiate_ns2__GetViewersResult


#define soap_copy__ns2__GetViewersResult soap_copy_ns2__GetViewersResult

/* _ns2__GetViewersRequest is a typedef element/attribute synonym for ns2__GetViewersRequest */

#ifndef SOAP_TYPE__ns2__GetViewersRequest
#define SOAP_TYPE__ns2__GetViewersRequest (147)
#endif

#define soap_default__ns2__GetViewersRequest(soap, a) (a)->ns2__GetViewersRequest::soap_default(soap)


#define soap_serialize__ns2__GetViewersRequest(soap, a) (a)->soap_serialize(soap)


#define soap_out__ns2__GetViewersRequest soap_out_ns2__GetViewersRequest


#define soap_in__ns2__GetViewersRequest soap_in_ns2__GetViewersRequest


#define soap_put__ns2__GetViewersRequest soap_put_ns2__GetViewersRequest


#define soap_get__ns2__GetViewersRequest soap_get_ns2__GetViewersRequest


#define soap_instantiate__ns2__GetViewersRequest soap_instantiate_ns2__GetViewersRequest


#define soap_copy__ns2__GetViewersRequest soap_copy_ns2__GetViewersRequest

/* _ns2__OpenFilesFault is a typedef element/attribute synonym for ns2__OpenFilesFault */

#ifndef SOAP_TYPE__ns2__OpenFilesFault
#define SOAP_TYPE__ns2__OpenFilesFault (146)
#endif

#define soap_default__ns2__OpenFilesFault(soap, a) (a)->ns2__OpenFilesFault::soap_default(soap)


#define soap_serialize__ns2__OpenFilesFault(soap, a) (a)->soap_serialize(soap)


#define soap_out__ns2__OpenFilesFault soap_out_ns2__OpenFilesFault


#define soap_in__ns2__OpenFilesFault soap_in_ns2__OpenFilesFault


#define soap_put__ns2__OpenFilesFault soap_put_ns2__OpenFilesFault


#define soap_get__ns2__OpenFilesFault soap_get_ns2__OpenFilesFault


#define soap_instantiate__ns2__OpenFilesFault soap_instantiate_ns2__OpenFilesFault


#define soap_copy__ns2__OpenFilesFault soap_copy_ns2__OpenFilesFault

/* _ns2__Viewer is a typedef element/attribute synonym for ns2__Viewer */

#ifndef SOAP_TYPE__ns2__Viewer
#define SOAP_TYPE__ns2__Viewer (145)
#endif

#define soap_default__ns2__Viewer(soap, a) (a)->ns2__Viewer::soap_default(soap)


#define soap_serialize__ns2__Viewer(soap, a) (a)->soap_serialize(soap)


#define soap_out__ns2__Viewer soap_out_ns2__Viewer


#define soap_in__ns2__Viewer soap_in_ns2__Viewer


#define soap_put__ns2__Viewer soap_put_ns2__Viewer


#define soap_get__ns2__Viewer soap_get_ns2__Viewer


#define soap_instantiate__ns2__Viewer soap_instantiate_ns2__Viewer


#define soap_copy__ns2__Viewer soap_copy_ns2__Viewer

/* _ns2__OpenFilesResult is a typedef element/attribute synonym for ns2__OpenFilesResult */

#ifndef SOAP_TYPE__ns2__OpenFilesResult
#define SOAP_TYPE__ns2__OpenFilesResult (144)
#endif

#define soap_default__ns2__OpenFilesResult(soap, a) (a)->ns2__OpenFilesResult::soap_default(soap)


#define soap_serialize__ns2__OpenFilesResult(soap, a) (a)->soap_serialize(soap)


#define soap_out__ns2__OpenFilesResult soap_out_ns2__OpenFilesResult


#define soap_in__ns2__OpenFilesResult soap_in_ns2__OpenFilesResult


#define soap_put__ns2__OpenFilesResult soap_put_ns2__OpenFilesResult


#define soap_get__ns2__OpenFilesResult soap_get_ns2__OpenFilesResult


#define soap_instantiate__ns2__OpenFilesResult soap_instantiate_ns2__OpenFilesResult


#define soap_copy__ns2__OpenFilesResult soap_copy_ns2__OpenFilesResult

/* _ns2__OpenFilesRequest is a typedef element/attribute synonym for ns2__OpenFilesRequest */

#ifndef SOAP_TYPE__ns2__OpenFilesRequest
#define SOAP_TYPE__ns2__OpenFilesRequest (143)
#endif

#define soap_default__ns2__OpenFilesRequest(soap, a) (a)->ns2__OpenFilesRequest::soap_default(soap)


#define soap_serialize__ns2__OpenFilesRequest(soap, a) (a)->soap_serialize(soap)


#define soap_out__ns2__OpenFilesRequest soap_out_ns2__OpenFilesRequest


#define soap_in__ns2__OpenFilesRequest soap_in_ns2__OpenFilesRequest


#define soap_put__ns2__OpenFilesRequest soap_put_ns2__OpenFilesRequest


#define soap_get__ns2__OpenFilesRequest soap_get_ns2__OpenFilesRequest


#define soap_instantiate__ns2__OpenFilesRequest soap_instantiate_ns2__OpenFilesRequest


#define soap_copy__ns2__OpenFilesRequest soap_copy_ns2__OpenFilesRequest

#ifndef SOAP_TYPE_ns3__guid__
#define SOAP_TYPE_ns3__guid__ (111)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__guid__(struct soap*, const char*, int, const ns3__guid__ *, const char*);
SOAP_FMAC3 ns3__guid__ * SOAP_FMAC4 soap_in_ns3__guid__(struct soap*, const char*, ns3__guid__ *, const char*);

#ifndef soap_write_ns3__guid__
#define soap_write_ns3__guid__(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns3:guid", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns3__guid__ * SOAP_FMAC4 soap_get_ns3__guid__(struct soap*, ns3__guid__ *, const char*, const char*);

#ifndef soap_read_ns3__guid__
#define soap_read_ns3__guid__(soap, data) ( soap_begin_recv(soap) || !soap_get_ns3__guid__(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns3__guid__ * SOAP_FMAC2 soap_instantiate_ns3__guid__(struct soap*, int, const char*, const char*, size_t*);

inline ns3__guid__ * soap_new_ns3__guid__(struct soap *soap, int n = -1) { return soap_instantiate_ns3__guid__(soap, n, NULL, NULL, NULL); }

inline ns3__guid__ * soap_new_req_ns3__guid__(struct soap *soap, std::string& __item) { ns3__guid__ *_p = soap_instantiate_ns3__guid__(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns3__guid__::__item = __item; } return _p; }

inline ns3__guid__ * soap_new_set_ns3__guid__(struct soap *soap, std::string& __item, char *__item1) { ns3__guid__ *_p = soap_instantiate_ns3__guid__(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns3__guid__::__item = __item; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_ns3__guid__(struct soap *soap, ns3__guid__ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns3__guid__(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns3__guid
#define SOAP_TYPE_ns3__guid (110)
#endif

#define soap_default_ns3__guid(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns3__guid(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__guid(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_ns3__guid(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns3__guid(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_ns3__guid
#define soap_write_ns3__guid(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns3__guid(soap, data),0) || soap_put_ns3__guid(soap, data, "ns3:guid", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_ns3__guid(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_ns3__guid
#define soap_read_ns3__guid(soap, data) ( soap_begin_recv(soap) || !soap_get_ns3__guid(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_ns3__guid soap_instantiate_std__string


#define soap_copy_ns3__guid soap_copy_std__string

#ifndef SOAP_TYPE_ns3__duration__
#define SOAP_TYPE_ns3__duration__ (109)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__duration__(struct soap*, const char*, int, const ns3__duration__ *, const char*);
SOAP_FMAC3 ns3__duration__ * SOAP_FMAC4 soap_in_ns3__duration__(struct soap*, const char*, ns3__duration__ *, const char*);

#ifndef soap_write_ns3__duration__
#define soap_write_ns3__duration__(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns3:duration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns3__duration__ * SOAP_FMAC4 soap_get_ns3__duration__(struct soap*, ns3__duration__ *, const char*, const char*);

#ifndef soap_read_ns3__duration__
#define soap_read_ns3__duration__(soap, data) ( soap_begin_recv(soap) || !soap_get_ns3__duration__(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns3__duration__ * SOAP_FMAC2 soap_instantiate_ns3__duration__(struct soap*, int, const char*, const char*, size_t*);

inline ns3__duration__ * soap_new_ns3__duration__(struct soap *soap, int n = -1) { return soap_instantiate_ns3__duration__(soap, n, NULL, NULL, NULL); }

inline ns3__duration__ * soap_new_req_ns3__duration__(struct soap *soap, std::string& __item) { ns3__duration__ *_p = soap_instantiate_ns3__duration__(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns3__duration__::__item = __item; } return _p; }

inline ns3__duration__ * soap_new_set_ns3__duration__(struct soap *soap, std::string& __item, char *__item1) { ns3__duration__ *_p = soap_instantiate_ns3__duration__(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns3__duration__::__item = __item; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_ns3__duration__(struct soap *soap, ns3__duration__ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns3__duration__(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns3__duration
#define SOAP_TYPE_ns3__duration (108)
#endif

#define soap_default_ns3__duration(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns3__duration(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__duration(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_ns3__duration(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns3__duration(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_ns3__duration
#define soap_write_ns3__duration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ns3__duration(soap, data),0) || soap_put_ns3__duration(soap, data, "ns3:duration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_ns3__duration(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_ns3__duration
#define soap_read_ns3__duration(soap, data) ( soap_begin_recv(soap) || !soap_get_ns3__duration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_ns3__duration soap_instantiate_std__string


#define soap_copy_ns3__duration soap_copy_std__string

#ifndef SOAP_TYPE_ns3__char__
#define SOAP_TYPE_ns3__char__ (107)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__char__(struct soap*, const char*, int, const ns3__char__ *, const char*);
SOAP_FMAC3 ns3__char__ * SOAP_FMAC4 soap_in_ns3__char__(struct soap*, const char*, ns3__char__ *, const char*);

#ifndef soap_write_ns3__char__
#define soap_write_ns3__char__(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns3:char", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns3__char__ * SOAP_FMAC4 soap_get_ns3__char__(struct soap*, ns3__char__ *, const char*, const char*);

#ifndef soap_read_ns3__char__
#define soap_read_ns3__char__(soap, data) ( soap_begin_recv(soap) || !soap_get_ns3__char__(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns3__char__ * SOAP_FMAC2 soap_instantiate_ns3__char__(struct soap*, int, const char*, const char*, size_t*);

inline ns3__char__ * soap_new_ns3__char__(struct soap *soap, int n = -1) { return soap_instantiate_ns3__char__(soap, n, NULL, NULL, NULL); }

inline ns3__char__ * soap_new_req_ns3__char__(struct soap *soap, int __item) { ns3__char__ *_p = soap_instantiate_ns3__char__(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns3__char__::__item = __item; } return _p; }

inline ns3__char__ * soap_new_set_ns3__char__(struct soap *soap, int __item, char *__item1) { ns3__char__ *_p = soap_instantiate_ns3__char__(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns3__char__::__item = __item; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_ns3__char__(struct soap *soap, ns3__char__ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns3__char__(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns6__StudyOfflineFault
#define SOAP_TYPE_ns6__StudyOfflineFault (105)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__StudyOfflineFault(struct soap*, const char*, int, const ns6__StudyOfflineFault *, const char*);
SOAP_FMAC3 ns6__StudyOfflineFault * SOAP_FMAC4 soap_in_ns6__StudyOfflineFault(struct soap*, const char*, ns6__StudyOfflineFault *, const char*);

#ifndef soap_write_ns6__StudyOfflineFault
#define soap_write_ns6__StudyOfflineFault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns6:StudyOfflineFault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__StudyOfflineFault * SOAP_FMAC4 soap_get_ns6__StudyOfflineFault(struct soap*, ns6__StudyOfflineFault *, const char*, const char*);

#ifndef soap_read_ns6__StudyOfflineFault
#define soap_read_ns6__StudyOfflineFault(soap, data) ( soap_begin_recv(soap) || !soap_get_ns6__StudyOfflineFault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns6__StudyOfflineFault * SOAP_FMAC2 soap_instantiate_ns6__StudyOfflineFault(struct soap*, int, const char*, const char*, size_t*);

inline ns6__StudyOfflineFault * soap_new_ns6__StudyOfflineFault(struct soap *soap, int n = -1) { return soap_instantiate_ns6__StudyOfflineFault(soap, n, NULL, NULL, NULL); }

inline ns6__StudyOfflineFault * soap_new_req_ns6__StudyOfflineFault(struct soap *soap) { ns6__StudyOfflineFault *_p = soap_instantiate_ns6__StudyOfflineFault(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns6__StudyOfflineFault * soap_new_set_ns6__StudyOfflineFault(struct soap *soap, char *__item1) { ns6__StudyOfflineFault *_p = soap_instantiate_ns6__StudyOfflineFault(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_ns6__StudyOfflineFault(struct soap *soap, ns6__StudyOfflineFault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns6__StudyOfflineFault(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns6__StudyInUseFault
#define SOAP_TYPE_ns6__StudyInUseFault (104)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__StudyInUseFault(struct soap*, const char*, int, const ns6__StudyInUseFault *, const char*);
SOAP_FMAC3 ns6__StudyInUseFault * SOAP_FMAC4 soap_in_ns6__StudyInUseFault(struct soap*, const char*, ns6__StudyInUseFault *, const char*);

#ifndef soap_write_ns6__StudyInUseFault
#define soap_write_ns6__StudyInUseFault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns6:StudyInUseFault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__StudyInUseFault * SOAP_FMAC4 soap_get_ns6__StudyInUseFault(struct soap*, ns6__StudyInUseFault *, const char*, const char*);

#ifndef soap_read_ns6__StudyInUseFault
#define soap_read_ns6__StudyInUseFault(soap, data) ( soap_begin_recv(soap) || !soap_get_ns6__StudyInUseFault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns6__StudyInUseFault * SOAP_FMAC2 soap_instantiate_ns6__StudyInUseFault(struct soap*, int, const char*, const char*, size_t*);

inline ns6__StudyInUseFault * soap_new_ns6__StudyInUseFault(struct soap *soap, int n = -1) { return soap_instantiate_ns6__StudyInUseFault(soap, n, NULL, NULL, NULL); }

inline ns6__StudyInUseFault * soap_new_req_ns6__StudyInUseFault(struct soap *soap) { ns6__StudyInUseFault *_p = soap_instantiate_ns6__StudyInUseFault(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns6__StudyInUseFault * soap_new_set_ns6__StudyInUseFault(struct soap *soap, char *__item1) { ns6__StudyInUseFault *_p = soap_instantiate_ns6__StudyInUseFault(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_ns6__StudyInUseFault(struct soap *soap, ns6__StudyInUseFault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns6__StudyInUseFault(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns6__StudyNotFoundFault
#define SOAP_TYPE_ns6__StudyNotFoundFault (103)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__StudyNotFoundFault(struct soap*, const char*, int, const ns6__StudyNotFoundFault *, const char*);
SOAP_FMAC3 ns6__StudyNotFoundFault * SOAP_FMAC4 soap_in_ns6__StudyNotFoundFault(struct soap*, const char*, ns6__StudyNotFoundFault *, const char*);

#ifndef soap_write_ns6__StudyNotFoundFault
#define soap_write_ns6__StudyNotFoundFault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns6:StudyNotFoundFault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__StudyNotFoundFault * SOAP_FMAC4 soap_get_ns6__StudyNotFoundFault(struct soap*, ns6__StudyNotFoundFault *, const char*, const char*);

#ifndef soap_read_ns6__StudyNotFoundFault
#define soap_read_ns6__StudyNotFoundFault(soap, data) ( soap_begin_recv(soap) || !soap_get_ns6__StudyNotFoundFault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns6__StudyNotFoundFault * SOAP_FMAC2 soap_instantiate_ns6__StudyNotFoundFault(struct soap*, int, const char*, const char*, size_t*);

inline ns6__StudyNotFoundFault * soap_new_ns6__StudyNotFoundFault(struct soap *soap, int n = -1) { return soap_instantiate_ns6__StudyNotFoundFault(soap, n, NULL, NULL, NULL); }

inline ns6__StudyNotFoundFault * soap_new_req_ns6__StudyNotFoundFault(struct soap *soap) { ns6__StudyNotFoundFault *_p = soap_instantiate_ns6__StudyNotFoundFault(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns6__StudyNotFoundFault * soap_new_set_ns6__StudyNotFoundFault(struct soap *soap, char *__item1) { ns6__StudyNotFoundFault *_p = soap_instantiate_ns6__StudyNotFoundFault(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_ns6__StudyNotFoundFault(struct soap *soap, ns6__StudyNotFoundFault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns6__StudyNotFoundFault(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns6__StudyNearlineFault
#define SOAP_TYPE_ns6__StudyNearlineFault (102)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns6__StudyNearlineFault(struct soap*, const char*, int, const ns6__StudyNearlineFault *, const char*);
SOAP_FMAC3 ns6__StudyNearlineFault * SOAP_FMAC4 soap_in_ns6__StudyNearlineFault(struct soap*, const char*, ns6__StudyNearlineFault *, const char*);

#ifndef soap_write_ns6__StudyNearlineFault
#define soap_write_ns6__StudyNearlineFault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns6:StudyNearlineFault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__StudyNearlineFault * SOAP_FMAC4 soap_get_ns6__StudyNearlineFault(struct soap*, ns6__StudyNearlineFault *, const char*, const char*);

#ifndef soap_read_ns6__StudyNearlineFault
#define soap_read_ns6__StudyNearlineFault(soap, data) ( soap_begin_recv(soap) || !soap_get_ns6__StudyNearlineFault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns6__StudyNearlineFault * SOAP_FMAC2 soap_instantiate_ns6__StudyNearlineFault(struct soap*, int, const char*, const char*, size_t*);

inline ns6__StudyNearlineFault * soap_new_ns6__StudyNearlineFault(struct soap *soap, int n = -1) { return soap_instantiate_ns6__StudyNearlineFault(soap, n, NULL, NULL, NULL); }

inline ns6__StudyNearlineFault * soap_new_req_ns6__StudyNearlineFault(struct soap *soap) { ns6__StudyNearlineFault *_p = soap_instantiate_ns6__StudyNearlineFault(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns6__StudyNearlineFault * soap_new_set_ns6__StudyNearlineFault(struct soap *soap, bool *IsStudyBeingRestored, char *__item1) { ns6__StudyNearlineFault *_p = soap_instantiate_ns6__StudyNearlineFault(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns6__StudyNearlineFault::IsStudyBeingRestored = IsStudyBeingRestored; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_ns6__StudyNearlineFault(struct soap *soap, ns6__StudyNearlineFault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns6__StudyNearlineFault(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns5__ImageQueryResponse
#define SOAP_TYPE__ns5__ImageQueryResponse (101)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns5__ImageQueryResponse(struct soap*, const char*, int, const _ns5__ImageQueryResponse *, const char*);
SOAP_FMAC3 _ns5__ImageQueryResponse * SOAP_FMAC4 soap_in__ns5__ImageQueryResponse(struct soap*, const char*, _ns5__ImageQueryResponse *, const char*);

#ifndef soap_write__ns5__ImageQueryResponse
#define soap_write__ns5__ImageQueryResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns5:ImageQueryResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns5__ImageQueryResponse * SOAP_FMAC4 soap_get__ns5__ImageQueryResponse(struct soap*, _ns5__ImageQueryResponse *, const char*, const char*);

#ifndef soap_read__ns5__ImageQueryResponse
#define soap_read__ns5__ImageQueryResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns5__ImageQueryResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns5__ImageQueryResponse * SOAP_FMAC2 soap_instantiate__ns5__ImageQueryResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns5__ImageQueryResponse * soap_new__ns5__ImageQueryResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns5__ImageQueryResponse(soap, n, NULL, NULL, NULL); }

inline _ns5__ImageQueryResponse * soap_new_req__ns5__ImageQueryResponse(struct soap *soap) { _ns5__ImageQueryResponse *_p = soap_instantiate__ns5__ImageQueryResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns5__ImageQueryResponse * soap_new_set__ns5__ImageQueryResponse(struct soap *soap, ns5__ArrayOfImageIdentifier *ImageQueryResult) { _ns5__ImageQueryResponse *_p = soap_instantiate__ns5__ImageQueryResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns5__ImageQueryResponse::ImageQueryResult = ImageQueryResult; } return _p; }

inline void soap_delete__ns5__ImageQueryResponse(struct soap *soap, _ns5__ImageQueryResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns5__ImageQueryResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns5__ImageQuery
#define SOAP_TYPE__ns5__ImageQuery (100)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns5__ImageQuery(struct soap*, const char*, int, const _ns5__ImageQuery *, const char*);
SOAP_FMAC3 _ns5__ImageQuery * SOAP_FMAC4 soap_in__ns5__ImageQuery(struct soap*, const char*, _ns5__ImageQuery *, const char*);

#ifndef soap_write__ns5__ImageQuery
#define soap_write__ns5__ImageQuery(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns5:ImageQuery", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns5__ImageQuery * SOAP_FMAC4 soap_get__ns5__ImageQuery(struct soap*, _ns5__ImageQuery *, const char*, const char*);

#ifndef soap_read__ns5__ImageQuery
#define soap_read__ns5__ImageQuery(soap, data) ( soap_begin_recv(soap) || !soap_get__ns5__ImageQuery(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns5__ImageQuery * SOAP_FMAC2 soap_instantiate__ns5__ImageQuery(struct soap*, int, const char*, const char*, size_t*);

inline _ns5__ImageQuery * soap_new__ns5__ImageQuery(struct soap *soap, int n = -1) { return soap_instantiate__ns5__ImageQuery(soap, n, NULL, NULL, NULL); }

inline _ns5__ImageQuery * soap_new_req__ns5__ImageQuery(struct soap *soap) { _ns5__ImageQuery *_p = soap_instantiate__ns5__ImageQuery(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns5__ImageQuery * soap_new_set__ns5__ImageQuery(struct soap *soap, ns5__ImageIdentifier *queryCriteria) { _ns5__ImageQuery *_p = soap_instantiate__ns5__ImageQuery(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns5__ImageQuery::queryCriteria = queryCriteria; } return _p; }

inline void soap_delete__ns5__ImageQuery(struct soap *soap, _ns5__ImageQuery *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns5__ImageQuery(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns5__SeriesQueryResponse
#define SOAP_TYPE__ns5__SeriesQueryResponse (99)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns5__SeriesQueryResponse(struct soap*, const char*, int, const _ns5__SeriesQueryResponse *, const char*);
SOAP_FMAC3 _ns5__SeriesQueryResponse * SOAP_FMAC4 soap_in__ns5__SeriesQueryResponse(struct soap*, const char*, _ns5__SeriesQueryResponse *, const char*);

#ifndef soap_write__ns5__SeriesQueryResponse
#define soap_write__ns5__SeriesQueryResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns5:SeriesQueryResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns5__SeriesQueryResponse * SOAP_FMAC4 soap_get__ns5__SeriesQueryResponse(struct soap*, _ns5__SeriesQueryResponse *, const char*, const char*);

#ifndef soap_read__ns5__SeriesQueryResponse
#define soap_read__ns5__SeriesQueryResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns5__SeriesQueryResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns5__SeriesQueryResponse * SOAP_FMAC2 soap_instantiate__ns5__SeriesQueryResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns5__SeriesQueryResponse * soap_new__ns5__SeriesQueryResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns5__SeriesQueryResponse(soap, n, NULL, NULL, NULL); }

inline _ns5__SeriesQueryResponse * soap_new_req__ns5__SeriesQueryResponse(struct soap *soap) { _ns5__SeriesQueryResponse *_p = soap_instantiate__ns5__SeriesQueryResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns5__SeriesQueryResponse * soap_new_set__ns5__SeriesQueryResponse(struct soap *soap, ns5__ArrayOfSeriesIdentifier *SeriesQueryResult) { _ns5__SeriesQueryResponse *_p = soap_instantiate__ns5__SeriesQueryResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns5__SeriesQueryResponse::SeriesQueryResult = SeriesQueryResult; } return _p; }

inline void soap_delete__ns5__SeriesQueryResponse(struct soap *soap, _ns5__SeriesQueryResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns5__SeriesQueryResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns5__SeriesQuery
#define SOAP_TYPE__ns5__SeriesQuery (98)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns5__SeriesQuery(struct soap*, const char*, int, const _ns5__SeriesQuery *, const char*);
SOAP_FMAC3 _ns5__SeriesQuery * SOAP_FMAC4 soap_in__ns5__SeriesQuery(struct soap*, const char*, _ns5__SeriesQuery *, const char*);

#ifndef soap_write__ns5__SeriesQuery
#define soap_write__ns5__SeriesQuery(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns5:SeriesQuery", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns5__SeriesQuery * SOAP_FMAC4 soap_get__ns5__SeriesQuery(struct soap*, _ns5__SeriesQuery *, const char*, const char*);

#ifndef soap_read__ns5__SeriesQuery
#define soap_read__ns5__SeriesQuery(soap, data) ( soap_begin_recv(soap) || !soap_get__ns5__SeriesQuery(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns5__SeriesQuery * SOAP_FMAC2 soap_instantiate__ns5__SeriesQuery(struct soap*, int, const char*, const char*, size_t*);

inline _ns5__SeriesQuery * soap_new__ns5__SeriesQuery(struct soap *soap, int n = -1) { return soap_instantiate__ns5__SeriesQuery(soap, n, NULL, NULL, NULL); }

inline _ns5__SeriesQuery * soap_new_req__ns5__SeriesQuery(struct soap *soap) { _ns5__SeriesQuery *_p = soap_instantiate__ns5__SeriesQuery(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns5__SeriesQuery * soap_new_set__ns5__SeriesQuery(struct soap *soap, ns5__SeriesIdentifier *queryCriteria) { _ns5__SeriesQuery *_p = soap_instantiate__ns5__SeriesQuery(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns5__SeriesQuery::queryCriteria = queryCriteria; } return _p; }

inline void soap_delete__ns5__SeriesQuery(struct soap *soap, _ns5__SeriesQuery *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns5__SeriesQuery(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns5__StudyQueryResponse
#define SOAP_TYPE__ns5__StudyQueryResponse (97)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns5__StudyQueryResponse(struct soap*, const char*, int, const _ns5__StudyQueryResponse *, const char*);
SOAP_FMAC3 _ns5__StudyQueryResponse * SOAP_FMAC4 soap_in__ns5__StudyQueryResponse(struct soap*, const char*, _ns5__StudyQueryResponse *, const char*);

#ifndef soap_write__ns5__StudyQueryResponse
#define soap_write__ns5__StudyQueryResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns5:StudyQueryResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns5__StudyQueryResponse * SOAP_FMAC4 soap_get__ns5__StudyQueryResponse(struct soap*, _ns5__StudyQueryResponse *, const char*, const char*);

#ifndef soap_read__ns5__StudyQueryResponse
#define soap_read__ns5__StudyQueryResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns5__StudyQueryResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns5__StudyQueryResponse * SOAP_FMAC2 soap_instantiate__ns5__StudyQueryResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns5__StudyQueryResponse * soap_new__ns5__StudyQueryResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns5__StudyQueryResponse(soap, n, NULL, NULL, NULL); }

inline _ns5__StudyQueryResponse * soap_new_req__ns5__StudyQueryResponse(struct soap *soap) { _ns5__StudyQueryResponse *_p = soap_instantiate__ns5__StudyQueryResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns5__StudyQueryResponse * soap_new_set__ns5__StudyQueryResponse(struct soap *soap, ns5__ArrayOfStudyRootStudyIdentifier *StudyQueryResult) { _ns5__StudyQueryResponse *_p = soap_instantiate__ns5__StudyQueryResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns5__StudyQueryResponse::StudyQueryResult = StudyQueryResult; } return _p; }

inline void soap_delete__ns5__StudyQueryResponse(struct soap *soap, _ns5__StudyQueryResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns5__StudyQueryResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns5__StudyQuery
#define SOAP_TYPE__ns5__StudyQuery (96)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns5__StudyQuery(struct soap*, const char*, int, const _ns5__StudyQuery *, const char*);
SOAP_FMAC3 _ns5__StudyQuery * SOAP_FMAC4 soap_in__ns5__StudyQuery(struct soap*, const char*, _ns5__StudyQuery *, const char*);

#ifndef soap_write__ns5__StudyQuery
#define soap_write__ns5__StudyQuery(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns5:StudyQuery", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns5__StudyQuery * SOAP_FMAC4 soap_get__ns5__StudyQuery(struct soap*, _ns5__StudyQuery *, const char*, const char*);

#ifndef soap_read__ns5__StudyQuery
#define soap_read__ns5__StudyQuery(soap, data) ( soap_begin_recv(soap) || !soap_get__ns5__StudyQuery(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns5__StudyQuery * SOAP_FMAC2 soap_instantiate__ns5__StudyQuery(struct soap*, int, const char*, const char*, size_t*);

inline _ns5__StudyQuery * soap_new__ns5__StudyQuery(struct soap *soap, int n = -1) { return soap_instantiate__ns5__StudyQuery(soap, n, NULL, NULL, NULL); }

inline _ns5__StudyQuery * soap_new_req__ns5__StudyQuery(struct soap *soap) { _ns5__StudyQuery *_p = soap_instantiate__ns5__StudyQuery(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns5__StudyQuery * soap_new_set__ns5__StudyQuery(struct soap *soap, ns5__StudyRootStudyIdentifier *queryCriteria) { _ns5__StudyQuery *_p = soap_instantiate__ns5__StudyQuery(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns5__StudyQuery::queryCriteria = queryCriteria; } return _p; }

inline void soap_delete__ns5__StudyQuery(struct soap *soap, _ns5__StudyQuery *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns5__StudyQuery(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns5__ArrayOfImageIdentifier
#define SOAP_TYPE_ns5__ArrayOfImageIdentifier (95)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns5__ArrayOfImageIdentifier(struct soap*, const char*, int, const ns5__ArrayOfImageIdentifier *, const char*);
SOAP_FMAC3 ns5__ArrayOfImageIdentifier * SOAP_FMAC4 soap_in_ns5__ArrayOfImageIdentifier(struct soap*, const char*, ns5__ArrayOfImageIdentifier *, const char*);

#ifndef soap_write_ns5__ArrayOfImageIdentifier
#define soap_write_ns5__ArrayOfImageIdentifier(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns5:ArrayOfImageIdentifier", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__ArrayOfImageIdentifier * SOAP_FMAC4 soap_get_ns5__ArrayOfImageIdentifier(struct soap*, ns5__ArrayOfImageIdentifier *, const char*, const char*);

#ifndef soap_read_ns5__ArrayOfImageIdentifier
#define soap_read_ns5__ArrayOfImageIdentifier(soap, data) ( soap_begin_recv(soap) || !soap_get_ns5__ArrayOfImageIdentifier(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns5__ArrayOfImageIdentifier * SOAP_FMAC2 soap_instantiate_ns5__ArrayOfImageIdentifier(struct soap*, int, const char*, const char*, size_t*);

inline ns5__ArrayOfImageIdentifier * soap_new_ns5__ArrayOfImageIdentifier(struct soap *soap, int n = -1) { return soap_instantiate_ns5__ArrayOfImageIdentifier(soap, n, NULL, NULL, NULL); }

inline ns5__ArrayOfImageIdentifier * soap_new_req_ns5__ArrayOfImageIdentifier(struct soap *soap) { ns5__ArrayOfImageIdentifier *_p = soap_instantiate_ns5__ArrayOfImageIdentifier(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns5__ArrayOfImageIdentifier * soap_new_set_ns5__ArrayOfImageIdentifier(struct soap *soap, std::vector<ns5__ImageIdentifier * >& ImageIdentifier, char *__item1) { ns5__ArrayOfImageIdentifier *_p = soap_instantiate_ns5__ArrayOfImageIdentifier(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns5__ArrayOfImageIdentifier::ImageIdentifier = ImageIdentifier; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_ns5__ArrayOfImageIdentifier(struct soap *soap, ns5__ArrayOfImageIdentifier *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns5__ArrayOfImageIdentifier(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns5__ImageIdentifier
#define SOAP_TYPE_ns5__ImageIdentifier (94)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns5__ImageIdentifier(struct soap*, const char*, int, const ns5__ImageIdentifier *, const char*);
SOAP_FMAC3 ns5__ImageIdentifier * SOAP_FMAC4 soap_in_ns5__ImageIdentifier(struct soap*, const char*, ns5__ImageIdentifier *, const char*);

#ifndef soap_write_ns5__ImageIdentifier
#define soap_write_ns5__ImageIdentifier(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns5:ImageIdentifier", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__ImageIdentifier * SOAP_FMAC4 soap_get_ns5__ImageIdentifier(struct soap*, ns5__ImageIdentifier *, const char*, const char*);

#ifndef soap_read_ns5__ImageIdentifier
#define soap_read_ns5__ImageIdentifier(soap, data) ( soap_begin_recv(soap) || !soap_get_ns5__ImageIdentifier(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns5__ImageIdentifier * SOAP_FMAC2 soap_instantiate_ns5__ImageIdentifier(struct soap*, int, const char*, const char*, size_t*);

inline ns5__ImageIdentifier * soap_new_ns5__ImageIdentifier(struct soap *soap, int n = -1) { return soap_instantiate_ns5__ImageIdentifier(soap, n, NULL, NULL, NULL); }

inline ns5__ImageIdentifier * soap_new_req_ns5__ImageIdentifier(struct soap *soap) { ns5__ImageIdentifier *_p = soap_instantiate_ns5__ImageIdentifier(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns5__ImageIdentifier * soap_new_set_ns5__ImageIdentifier(struct soap *soap, int *InstanceNumber, std::string *SeriesInstanceUid, std::string *SopClassUid, std::string *SopInstanceUid, std::string *StudyInstanceUid, std::string *InstanceAvailability1, std::string *RetrieveAeTitle1, std::string *SpecificCharacterSet1, char *__item2) { ns5__ImageIdentifier *_p = soap_instantiate_ns5__ImageIdentifier(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns5__ImageIdentifier::InstanceNumber = InstanceNumber; _p->ns5__ImageIdentifier::SeriesInstanceUid = SeriesInstanceUid; _p->ns5__ImageIdentifier::SopClassUid = SopClassUid; _p->ns5__ImageIdentifier::SopInstanceUid = SopInstanceUid; _p->ns5__ImageIdentifier::StudyInstanceUid = StudyInstanceUid; _p->ns5__Identifier::InstanceAvailability = InstanceAvailability1; _p->ns5__Identifier::RetrieveAeTitle = RetrieveAeTitle1; _p->ns5__Identifier::SpecificCharacterSet = SpecificCharacterSet1; _p->xsd__anyType::__item = __item2; } return _p; }

inline void soap_delete_ns5__ImageIdentifier(struct soap *soap, ns5__ImageIdentifier *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns5__ImageIdentifier(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns5__ArrayOfSeriesIdentifier
#define SOAP_TYPE_ns5__ArrayOfSeriesIdentifier (93)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns5__ArrayOfSeriesIdentifier(struct soap*, const char*, int, const ns5__ArrayOfSeriesIdentifier *, const char*);
SOAP_FMAC3 ns5__ArrayOfSeriesIdentifier * SOAP_FMAC4 soap_in_ns5__ArrayOfSeriesIdentifier(struct soap*, const char*, ns5__ArrayOfSeriesIdentifier *, const char*);

#ifndef soap_write_ns5__ArrayOfSeriesIdentifier
#define soap_write_ns5__ArrayOfSeriesIdentifier(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns5:ArrayOfSeriesIdentifier", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__ArrayOfSeriesIdentifier * SOAP_FMAC4 soap_get_ns5__ArrayOfSeriesIdentifier(struct soap*, ns5__ArrayOfSeriesIdentifier *, const char*, const char*);

#ifndef soap_read_ns5__ArrayOfSeriesIdentifier
#define soap_read_ns5__ArrayOfSeriesIdentifier(soap, data) ( soap_begin_recv(soap) || !soap_get_ns5__ArrayOfSeriesIdentifier(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns5__ArrayOfSeriesIdentifier * SOAP_FMAC2 soap_instantiate_ns5__ArrayOfSeriesIdentifier(struct soap*, int, const char*, const char*, size_t*);

inline ns5__ArrayOfSeriesIdentifier * soap_new_ns5__ArrayOfSeriesIdentifier(struct soap *soap, int n = -1) { return soap_instantiate_ns5__ArrayOfSeriesIdentifier(soap, n, NULL, NULL, NULL); }

inline ns5__ArrayOfSeriesIdentifier * soap_new_req_ns5__ArrayOfSeriesIdentifier(struct soap *soap) { ns5__ArrayOfSeriesIdentifier *_p = soap_instantiate_ns5__ArrayOfSeriesIdentifier(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns5__ArrayOfSeriesIdentifier * soap_new_set_ns5__ArrayOfSeriesIdentifier(struct soap *soap, std::vector<ns5__SeriesIdentifier * >& SeriesIdentifier, char *__item1) { ns5__ArrayOfSeriesIdentifier *_p = soap_instantiate_ns5__ArrayOfSeriesIdentifier(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns5__ArrayOfSeriesIdentifier::SeriesIdentifier = SeriesIdentifier; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_ns5__ArrayOfSeriesIdentifier(struct soap *soap, ns5__ArrayOfSeriesIdentifier *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns5__ArrayOfSeriesIdentifier(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns5__SeriesIdentifier
#define SOAP_TYPE_ns5__SeriesIdentifier (92)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns5__SeriesIdentifier(struct soap*, const char*, int, const ns5__SeriesIdentifier *, const char*);
SOAP_FMAC3 ns5__SeriesIdentifier * SOAP_FMAC4 soap_in_ns5__SeriesIdentifier(struct soap*, const char*, ns5__SeriesIdentifier *, const char*);

#ifndef soap_write_ns5__SeriesIdentifier
#define soap_write_ns5__SeriesIdentifier(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns5:SeriesIdentifier", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__SeriesIdentifier * SOAP_FMAC4 soap_get_ns5__SeriesIdentifier(struct soap*, ns5__SeriesIdentifier *, const char*, const char*);

#ifndef soap_read_ns5__SeriesIdentifier
#define soap_read_ns5__SeriesIdentifier(soap, data) ( soap_begin_recv(soap) || !soap_get_ns5__SeriesIdentifier(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns5__SeriesIdentifier * SOAP_FMAC2 soap_instantiate_ns5__SeriesIdentifier(struct soap*, int, const char*, const char*, size_t*);

inline ns5__SeriesIdentifier * soap_new_ns5__SeriesIdentifier(struct soap *soap, int n = -1) { return soap_instantiate_ns5__SeriesIdentifier(soap, n, NULL, NULL, NULL); }

inline ns5__SeriesIdentifier * soap_new_req_ns5__SeriesIdentifier(struct soap *soap) { ns5__SeriesIdentifier *_p = soap_instantiate_ns5__SeriesIdentifier(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns5__SeriesIdentifier * soap_new_set_ns5__SeriesIdentifier(struct soap *soap, std::string *Modality, int *NumberOfSeriesRelatedInstances, std::string *SeriesDescription, std::string *SeriesInstanceUid, int *SeriesNumber, std::string *StudyInstanceUid, std::string *InstanceAvailability1, std::string *RetrieveAeTitle1, std::string *SpecificCharacterSet1, char *__item2) { ns5__SeriesIdentifier *_p = soap_instantiate_ns5__SeriesIdentifier(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns5__SeriesIdentifier::Modality = Modality; _p->ns5__SeriesIdentifier::NumberOfSeriesRelatedInstances = NumberOfSeriesRelatedInstances; _p->ns5__SeriesIdentifier::SeriesDescription = SeriesDescription; _p->ns5__SeriesIdentifier::SeriesInstanceUid = SeriesInstanceUid; _p->ns5__SeriesIdentifier::SeriesNumber = SeriesNumber; _p->ns5__SeriesIdentifier::StudyInstanceUid = StudyInstanceUid; _p->ns5__Identifier::InstanceAvailability = InstanceAvailability1; _p->ns5__Identifier::RetrieveAeTitle = RetrieveAeTitle1; _p->ns5__Identifier::SpecificCharacterSet = SpecificCharacterSet1; _p->xsd__anyType::__item = __item2; } return _p; }

inline void soap_delete_ns5__SeriesIdentifier(struct soap *soap, ns5__SeriesIdentifier *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns5__SeriesIdentifier(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns5__DataValidationFault
#define SOAP_TYPE_ns5__DataValidationFault (91)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns5__DataValidationFault(struct soap*, const char*, int, const ns5__DataValidationFault *, const char*);
SOAP_FMAC3 ns5__DataValidationFault * SOAP_FMAC4 soap_in_ns5__DataValidationFault(struct soap*, const char*, ns5__DataValidationFault *, const char*);

#ifndef soap_write_ns5__DataValidationFault
#define soap_write_ns5__DataValidationFault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns5:DataValidationFault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__DataValidationFault * SOAP_FMAC4 soap_get_ns5__DataValidationFault(struct soap*, ns5__DataValidationFault *, const char*, const char*);

#ifndef soap_read_ns5__DataValidationFault
#define soap_read_ns5__DataValidationFault(soap, data) ( soap_begin_recv(soap) || !soap_get_ns5__DataValidationFault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns5__DataValidationFault * SOAP_FMAC2 soap_instantiate_ns5__DataValidationFault(struct soap*, int, const char*, const char*, size_t*);

inline ns5__DataValidationFault * soap_new_ns5__DataValidationFault(struct soap *soap, int n = -1) { return soap_instantiate_ns5__DataValidationFault(soap, n, NULL, NULL, NULL); }

inline ns5__DataValidationFault * soap_new_req_ns5__DataValidationFault(struct soap *soap) { ns5__DataValidationFault *_p = soap_instantiate_ns5__DataValidationFault(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns5__DataValidationFault * soap_new_set_ns5__DataValidationFault(struct soap *soap, std::string *Description, char *__item1) { ns5__DataValidationFault *_p = soap_instantiate_ns5__DataValidationFault(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns5__DataValidationFault::Description = Description; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_ns5__DataValidationFault(struct soap *soap, ns5__DataValidationFault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns5__DataValidationFault(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns5__QueryFailedFault
#define SOAP_TYPE_ns5__QueryFailedFault (90)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns5__QueryFailedFault(struct soap*, const char*, int, const ns5__QueryFailedFault *, const char*);
SOAP_FMAC3 ns5__QueryFailedFault * SOAP_FMAC4 soap_in_ns5__QueryFailedFault(struct soap*, const char*, ns5__QueryFailedFault *, const char*);

#ifndef soap_write_ns5__QueryFailedFault
#define soap_write_ns5__QueryFailedFault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns5:QueryFailedFault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__QueryFailedFault * SOAP_FMAC4 soap_get_ns5__QueryFailedFault(struct soap*, ns5__QueryFailedFault *, const char*, const char*);

#ifndef soap_read_ns5__QueryFailedFault
#define soap_read_ns5__QueryFailedFault(soap, data) ( soap_begin_recv(soap) || !soap_get_ns5__QueryFailedFault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns5__QueryFailedFault * SOAP_FMAC2 soap_instantiate_ns5__QueryFailedFault(struct soap*, int, const char*, const char*, size_t*);

inline ns5__QueryFailedFault * soap_new_ns5__QueryFailedFault(struct soap *soap, int n = -1) { return soap_instantiate_ns5__QueryFailedFault(soap, n, NULL, NULL, NULL); }

inline ns5__QueryFailedFault * soap_new_req_ns5__QueryFailedFault(struct soap *soap) { ns5__QueryFailedFault *_p = soap_instantiate_ns5__QueryFailedFault(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns5__QueryFailedFault * soap_new_set_ns5__QueryFailedFault(struct soap *soap, std::string *Description, char *__item1) { ns5__QueryFailedFault *_p = soap_instantiate_ns5__QueryFailedFault(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns5__QueryFailedFault::Description = Description; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_ns5__QueryFailedFault(struct soap *soap, ns5__QueryFailedFault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns5__QueryFailedFault(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns5__ArrayOfStudyRootStudyIdentifier
#define SOAP_TYPE_ns5__ArrayOfStudyRootStudyIdentifier (89)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns5__ArrayOfStudyRootStudyIdentifier(struct soap*, const char*, int, const ns5__ArrayOfStudyRootStudyIdentifier *, const char*);
SOAP_FMAC3 ns5__ArrayOfStudyRootStudyIdentifier * SOAP_FMAC4 soap_in_ns5__ArrayOfStudyRootStudyIdentifier(struct soap*, const char*, ns5__ArrayOfStudyRootStudyIdentifier *, const char*);

#ifndef soap_write_ns5__ArrayOfStudyRootStudyIdentifier
#define soap_write_ns5__ArrayOfStudyRootStudyIdentifier(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns5:ArrayOfStudyRootStudyIdentifier", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__ArrayOfStudyRootStudyIdentifier * SOAP_FMAC4 soap_get_ns5__ArrayOfStudyRootStudyIdentifier(struct soap*, ns5__ArrayOfStudyRootStudyIdentifier *, const char*, const char*);

#ifndef soap_read_ns5__ArrayOfStudyRootStudyIdentifier
#define soap_read_ns5__ArrayOfStudyRootStudyIdentifier(soap, data) ( soap_begin_recv(soap) || !soap_get_ns5__ArrayOfStudyRootStudyIdentifier(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns5__ArrayOfStudyRootStudyIdentifier * SOAP_FMAC2 soap_instantiate_ns5__ArrayOfStudyRootStudyIdentifier(struct soap*, int, const char*, const char*, size_t*);

inline ns5__ArrayOfStudyRootStudyIdentifier * soap_new_ns5__ArrayOfStudyRootStudyIdentifier(struct soap *soap, int n = -1) { return soap_instantiate_ns5__ArrayOfStudyRootStudyIdentifier(soap, n, NULL, NULL, NULL); }

inline ns5__ArrayOfStudyRootStudyIdentifier * soap_new_req_ns5__ArrayOfStudyRootStudyIdentifier(struct soap *soap) { ns5__ArrayOfStudyRootStudyIdentifier *_p = soap_instantiate_ns5__ArrayOfStudyRootStudyIdentifier(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns5__ArrayOfStudyRootStudyIdentifier * soap_new_set_ns5__ArrayOfStudyRootStudyIdentifier(struct soap *soap, std::vector<ns5__StudyRootStudyIdentifier * >& StudyRootStudyIdentifier, char *__item1) { ns5__ArrayOfStudyRootStudyIdentifier *_p = soap_instantiate_ns5__ArrayOfStudyRootStudyIdentifier(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns5__ArrayOfStudyRootStudyIdentifier::StudyRootStudyIdentifier = StudyRootStudyIdentifier; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_ns5__ArrayOfStudyRootStudyIdentifier(struct soap *soap, ns5__ArrayOfStudyRootStudyIdentifier *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns5__ArrayOfStudyRootStudyIdentifier(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns5__Identifier
#define SOAP_TYPE_ns5__Identifier (88)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns5__Identifier(struct soap*, const char*, int, const ns5__Identifier *, const char*);
SOAP_FMAC3 ns5__Identifier * SOAP_FMAC4 soap_in_ns5__Identifier(struct soap*, const char*, ns5__Identifier *, const char*);

#ifndef soap_write_ns5__Identifier
#define soap_write_ns5__Identifier(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns5:Identifier", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__Identifier * SOAP_FMAC4 soap_get_ns5__Identifier(struct soap*, ns5__Identifier *, const char*, const char*);

#ifndef soap_read_ns5__Identifier
#define soap_read_ns5__Identifier(soap, data) ( soap_begin_recv(soap) || !soap_get_ns5__Identifier(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns5__Identifier * SOAP_FMAC2 soap_instantiate_ns5__Identifier(struct soap*, int, const char*, const char*, size_t*);

inline ns5__Identifier * soap_new_ns5__Identifier(struct soap *soap, int n = -1) { return soap_instantiate_ns5__Identifier(soap, n, NULL, NULL, NULL); }

inline ns5__Identifier * soap_new_req_ns5__Identifier(struct soap *soap) { ns5__Identifier *_p = soap_instantiate_ns5__Identifier(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns5__Identifier * soap_new_set_ns5__Identifier(struct soap *soap, std::string *InstanceAvailability, std::string *RetrieveAeTitle, std::string *SpecificCharacterSet, char *__item1) { ns5__Identifier *_p = soap_instantiate_ns5__Identifier(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns5__Identifier::InstanceAvailability = InstanceAvailability; _p->ns5__Identifier::RetrieveAeTitle = RetrieveAeTitle; _p->ns5__Identifier::SpecificCharacterSet = SpecificCharacterSet; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_ns5__Identifier(struct soap *soap, ns5__Identifier *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns5__Identifier(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns5__StudyIdentifier
#define SOAP_TYPE_ns5__StudyIdentifier (87)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns5__StudyIdentifier(struct soap*, const char*, int, const ns5__StudyIdentifier *, const char*);
SOAP_FMAC3 ns5__StudyIdentifier * SOAP_FMAC4 soap_in_ns5__StudyIdentifier(struct soap*, const char*, ns5__StudyIdentifier *, const char*);

#ifndef soap_write_ns5__StudyIdentifier
#define soap_write_ns5__StudyIdentifier(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns5:StudyIdentifier", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__StudyIdentifier * SOAP_FMAC4 soap_get_ns5__StudyIdentifier(struct soap*, ns5__StudyIdentifier *, const char*, const char*);

#ifndef soap_read_ns5__StudyIdentifier
#define soap_read_ns5__StudyIdentifier(soap, data) ( soap_begin_recv(soap) || !soap_get_ns5__StudyIdentifier(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns5__StudyIdentifier * SOAP_FMAC2 soap_instantiate_ns5__StudyIdentifier(struct soap*, int, const char*, const char*, size_t*);

inline ns5__StudyIdentifier * soap_new_ns5__StudyIdentifier(struct soap *soap, int n = -1) { return soap_instantiate_ns5__StudyIdentifier(soap, n, NULL, NULL, NULL); }

inline ns5__StudyIdentifier * soap_new_req_ns5__StudyIdentifier(struct soap *soap) { ns5__StudyIdentifier *_p = soap_instantiate_ns5__StudyIdentifier(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns5__StudyIdentifier * soap_new_set_ns5__StudyIdentifier(struct soap *soap, std::string *AccessionNumber, ns4__ArrayOfstring *ModalitiesInStudy, int *NumberOfStudyRelatedInstances, int *NumberOfStudyRelatedSeries, std::string *ReferringPhysiciansName, ns4__ArrayOfstring *SopClassesInStudy, std::string *StudyDate, std::string *StudyDescription, std::string *StudyId, std::string *StudyInstanceUid, std::string *StudyTime, std::string *InstanceAvailability1, std::string *RetrieveAeTitle1, std::string *SpecificCharacterSet1, char *__item2) { ns5__StudyIdentifier *_p = soap_instantiate_ns5__StudyIdentifier(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns5__StudyIdentifier::AccessionNumber = AccessionNumber; _p->ns5__StudyIdentifier::ModalitiesInStudy = ModalitiesInStudy; _p->ns5__StudyIdentifier::NumberOfStudyRelatedInstances = NumberOfStudyRelatedInstances; _p->ns5__StudyIdentifier::NumberOfStudyRelatedSeries = NumberOfStudyRelatedSeries; _p->ns5__StudyIdentifier::ReferringPhysiciansName = ReferringPhysiciansName; _p->ns5__StudyIdentifier::SopClassesInStudy = SopClassesInStudy; _p->ns5__StudyIdentifier::StudyDate = StudyDate; _p->ns5__StudyIdentifier::StudyDescription = StudyDescription; _p->ns5__StudyIdentifier::StudyId = StudyId; _p->ns5__StudyIdentifier::StudyInstanceUid = StudyInstanceUid; _p->ns5__StudyIdentifier::StudyTime = StudyTime; _p->ns5__Identifier::InstanceAvailability = InstanceAvailability1; _p->ns5__Identifier::RetrieveAeTitle = RetrieveAeTitle1; _p->ns5__Identifier::SpecificCharacterSet = SpecificCharacterSet1; _p->xsd__anyType::__item = __item2; } return _p; }

inline void soap_delete_ns5__StudyIdentifier(struct soap *soap, ns5__StudyIdentifier *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns5__StudyIdentifier(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns5__StudyRootStudyIdentifier
#define SOAP_TYPE_ns5__StudyRootStudyIdentifier (86)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns5__StudyRootStudyIdentifier(struct soap*, const char*, int, const ns5__StudyRootStudyIdentifier *, const char*);
SOAP_FMAC3 ns5__StudyRootStudyIdentifier * SOAP_FMAC4 soap_in_ns5__StudyRootStudyIdentifier(struct soap*, const char*, ns5__StudyRootStudyIdentifier *, const char*);

#ifndef soap_write_ns5__StudyRootStudyIdentifier
#define soap_write_ns5__StudyRootStudyIdentifier(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns5:StudyRootStudyIdentifier", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__StudyRootStudyIdentifier * SOAP_FMAC4 soap_get_ns5__StudyRootStudyIdentifier(struct soap*, ns5__StudyRootStudyIdentifier *, const char*, const char*);

#ifndef soap_read_ns5__StudyRootStudyIdentifier
#define soap_read_ns5__StudyRootStudyIdentifier(soap, data) ( soap_begin_recv(soap) || !soap_get_ns5__StudyRootStudyIdentifier(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns5__StudyRootStudyIdentifier * SOAP_FMAC2 soap_instantiate_ns5__StudyRootStudyIdentifier(struct soap*, int, const char*, const char*, size_t*);

inline ns5__StudyRootStudyIdentifier * soap_new_ns5__StudyRootStudyIdentifier(struct soap *soap, int n = -1) { return soap_instantiate_ns5__StudyRootStudyIdentifier(soap, n, NULL, NULL, NULL); }

inline ns5__StudyRootStudyIdentifier * soap_new_req_ns5__StudyRootStudyIdentifier(struct soap *soap) { ns5__StudyRootStudyIdentifier *_p = soap_instantiate_ns5__StudyRootStudyIdentifier(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns5__StudyRootStudyIdentifier * soap_new_set_ns5__StudyRootStudyIdentifier(struct soap *soap, std::string *PatientBreedCodeSequenceCodeMeaning, std::string *PatientBreedCodeSequenceCodeValue, std::string *PatientBreedCodeSequenceCodingSchemeDesignator, std::string *PatientBreedDescription, std::string *PatientId, std::string *PatientSpeciesCodeSequenceCodeMeaning, std::string *PatientSpeciesCodeSequenceCodeValue, std::string *PatientSpeciesCodeSequenceCodingSchemeDesignator, std::string *PatientSpeciesDescription, std::string *PatientsBirthDate, std::string *PatientsBirthTime, std::string *PatientsName, std::string *PatientsSex, std::string *ResponsibleOrganization, std::string *ResponsiblePerson, std::string *ResponsiblePersonRole, std::string *AccessionNumber1, ns4__ArrayOfstring *ModalitiesInStudy1, int *NumberOfStudyRelatedInstances1, int *NumberOfStudyRelatedSeries1, std::string *ReferringPhysiciansName1, ns4__ArrayOfstring *SopClassesInStudy1, std::string *StudyDate1, std::string *StudyDescription1, std::string *StudyId1, std::string *StudyInstanceUid1, std::string *StudyTime1, std::string *InstanceAvailability2, std::string *RetrieveAeTitle2, std::string *SpecificCharacterSet2, char *__item3) { ns5__StudyRootStudyIdentifier *_p = soap_instantiate_ns5__StudyRootStudyIdentifier(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns5__StudyRootStudyIdentifier::PatientBreedCodeSequenceCodeMeaning = PatientBreedCodeSequenceCodeMeaning; _p->ns5__StudyRootStudyIdentifier::PatientBreedCodeSequenceCodeValue = PatientBreedCodeSequenceCodeValue; _p->ns5__StudyRootStudyIdentifier::PatientBreedCodeSequenceCodingSchemeDesignator = PatientBreedCodeSequenceCodingSchemeDesignator; _p->ns5__StudyRootStudyIdentifier::PatientBreedDescription = PatientBreedDescription; _p->ns5__StudyRootStudyIdentifier::PatientId = PatientId; _p->ns5__StudyRootStudyIdentifier::PatientSpeciesCodeSequenceCodeMeaning = PatientSpeciesCodeSequenceCodeMeaning; _p->ns5__StudyRootStudyIdentifier::PatientSpeciesCodeSequenceCodeValue = PatientSpeciesCodeSequenceCodeValue; _p->ns5__StudyRootStudyIdentifier::PatientSpeciesCodeSequenceCodingSchemeDesignator = PatientSpeciesCodeSequenceCodingSchemeDesignator; _p->ns5__StudyRootStudyIdentifier::PatientSpeciesDescription = PatientSpeciesDescription; _p->ns5__StudyRootStudyIdentifier::PatientsBirthDate = PatientsBirthDate; _p->ns5__StudyRootStudyIdentifier::PatientsBirthTime = PatientsBirthTime; _p->ns5__StudyRootStudyIdentifier::PatientsName = PatientsName; _p->ns5__StudyRootStudyIdentifier::PatientsSex = PatientsSex; _p->ns5__StudyRootStudyIdentifier::ResponsibleOrganization = ResponsibleOrganization; _p->ns5__StudyRootStudyIdentifier::ResponsiblePerson = ResponsiblePerson; _p->ns5__StudyRootStudyIdentifier::ResponsiblePersonRole = ResponsiblePersonRole; _p->ns5__StudyIdentifier::AccessionNumber = AccessionNumber1; _p->ns5__StudyIdentifier::ModalitiesInStudy = ModalitiesInStudy1; _p->ns5__StudyIdentifier::NumberOfStudyRelatedInstances = NumberOfStudyRelatedInstances1; _p->ns5__StudyIdentifier::NumberOfStudyRelatedSeries = NumberOfStudyRelatedSeries1; _p->ns5__StudyIdentifier::ReferringPhysiciansName = ReferringPhysiciansName1; _p->ns5__StudyIdentifier::SopClassesInStudy = SopClassesInStudy1; _p->ns5__StudyIdentifier::StudyDate = StudyDate1; _p->ns5__StudyIdentifier::StudyDescription = StudyDescription1; _p->ns5__StudyIdentifier::StudyId = StudyId1; _p->ns5__StudyIdentifier::StudyInstanceUid = StudyInstanceUid1; _p->ns5__StudyIdentifier::StudyTime = StudyTime1; _p->ns5__Identifier::InstanceAvailability = InstanceAvailability2; _p->ns5__Identifier::RetrieveAeTitle = RetrieveAeTitle2; _p->ns5__Identifier::SpecificCharacterSet = SpecificCharacterSet2; _p->xsd__anyType::__item = __item3; } return _p; }

inline void soap_delete_ns5__StudyRootStudyIdentifier(struct soap *soap, ns5__StudyRootStudyIdentifier *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns5__StudyRootStudyIdentifier(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns4__ArrayOfstring
#define SOAP_TYPE_ns4__ArrayOfstring (85)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns4__ArrayOfstring(struct soap*, const char*, int, const ns4__ArrayOfstring *, const char*);
SOAP_FMAC3 ns4__ArrayOfstring * SOAP_FMAC4 soap_in_ns4__ArrayOfstring(struct soap*, const char*, ns4__ArrayOfstring *, const char*);

#ifndef soap_write_ns4__ArrayOfstring
#define soap_write_ns4__ArrayOfstring(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns4:ArrayOfstring", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns4__ArrayOfstring * SOAP_FMAC4 soap_get_ns4__ArrayOfstring(struct soap*, ns4__ArrayOfstring *, const char*, const char*);

#ifndef soap_read_ns4__ArrayOfstring
#define soap_read_ns4__ArrayOfstring(soap, data) ( soap_begin_recv(soap) || !soap_get_ns4__ArrayOfstring(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns4__ArrayOfstring * SOAP_FMAC2 soap_instantiate_ns4__ArrayOfstring(struct soap*, int, const char*, const char*, size_t*);

inline ns4__ArrayOfstring * soap_new_ns4__ArrayOfstring(struct soap *soap, int n = -1) { return soap_instantiate_ns4__ArrayOfstring(soap, n, NULL, NULL, NULL); }

inline ns4__ArrayOfstring * soap_new_req_ns4__ArrayOfstring(struct soap *soap) { ns4__ArrayOfstring *_p = soap_instantiate_ns4__ArrayOfstring(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns4__ArrayOfstring * soap_new_set_ns4__ArrayOfstring(struct soap *soap, std::vector<std::string >& string, char *__item1) { ns4__ArrayOfstring *_p = soap_instantiate_ns4__ArrayOfstring(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns4__ArrayOfstring::string = string; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_ns4__ArrayOfstring(struct soap *soap, ns4__ArrayOfstring *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns4__ArrayOfstring(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns2__CloseViewerResponse
#define SOAP_TYPE__ns2__CloseViewerResponse (84)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns2__CloseViewerResponse(struct soap*, const char*, int, const _ns2__CloseViewerResponse *, const char*);
SOAP_FMAC3 _ns2__CloseViewerResponse * SOAP_FMAC4 soap_in__ns2__CloseViewerResponse(struct soap*, const char*, _ns2__CloseViewerResponse *, const char*);

#ifndef soap_write__ns2__CloseViewerResponse
#define soap_write__ns2__CloseViewerResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns2:CloseViewerResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns2__CloseViewerResponse * SOAP_FMAC4 soap_get__ns2__CloseViewerResponse(struct soap*, _ns2__CloseViewerResponse *, const char*, const char*);

#ifndef soap_read__ns2__CloseViewerResponse
#define soap_read__ns2__CloseViewerResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns2__CloseViewerResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns2__CloseViewerResponse * SOAP_FMAC2 soap_instantiate__ns2__CloseViewerResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns2__CloseViewerResponse * soap_new__ns2__CloseViewerResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns2__CloseViewerResponse(soap, n, NULL, NULL, NULL); }

inline _ns2__CloseViewerResponse * soap_new_req__ns2__CloseViewerResponse(struct soap *soap) { _ns2__CloseViewerResponse *_p = soap_instantiate__ns2__CloseViewerResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns2__CloseViewerResponse * soap_new_set__ns2__CloseViewerResponse(struct soap *soap) { _ns2__CloseViewerResponse *_p = soap_instantiate__ns2__CloseViewerResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__ns2__CloseViewerResponse(struct soap *soap, _ns2__CloseViewerResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns2__CloseViewerResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns2__CloseViewer
#define SOAP_TYPE__ns2__CloseViewer (83)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns2__CloseViewer(struct soap*, const char*, int, const _ns2__CloseViewer *, const char*);
SOAP_FMAC3 _ns2__CloseViewer * SOAP_FMAC4 soap_in__ns2__CloseViewer(struct soap*, const char*, _ns2__CloseViewer *, const char*);

#ifndef soap_write__ns2__CloseViewer
#define soap_write__ns2__CloseViewer(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns2:CloseViewer", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns2__CloseViewer * SOAP_FMAC4 soap_get__ns2__CloseViewer(struct soap*, _ns2__CloseViewer *, const char*, const char*);

#ifndef soap_read__ns2__CloseViewer
#define soap_read__ns2__CloseViewer(soap, data) ( soap_begin_recv(soap) || !soap_get__ns2__CloseViewer(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns2__CloseViewer * SOAP_FMAC2 soap_instantiate__ns2__CloseViewer(struct soap*, int, const char*, const char*, size_t*);

inline _ns2__CloseViewer * soap_new__ns2__CloseViewer(struct soap *soap, int n = -1) { return soap_instantiate__ns2__CloseViewer(soap, n, NULL, NULL, NULL); }

inline _ns2__CloseViewer * soap_new_req__ns2__CloseViewer(struct soap *soap) { _ns2__CloseViewer *_p = soap_instantiate__ns2__CloseViewer(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns2__CloseViewer * soap_new_set__ns2__CloseViewer(struct soap *soap, ns2__CloseViewerRequest *request) { _ns2__CloseViewer *_p = soap_instantiate__ns2__CloseViewer(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns2__CloseViewer::request = request; } return _p; }

inline void soap_delete__ns2__CloseViewer(struct soap *soap, _ns2__CloseViewer *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns2__CloseViewer(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns2__ActivateViewerResponse
#define SOAP_TYPE__ns2__ActivateViewerResponse (82)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns2__ActivateViewerResponse(struct soap*, const char*, int, const _ns2__ActivateViewerResponse *, const char*);
SOAP_FMAC3 _ns2__ActivateViewerResponse * SOAP_FMAC4 soap_in__ns2__ActivateViewerResponse(struct soap*, const char*, _ns2__ActivateViewerResponse *, const char*);

#ifndef soap_write__ns2__ActivateViewerResponse
#define soap_write__ns2__ActivateViewerResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns2:ActivateViewerResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns2__ActivateViewerResponse * SOAP_FMAC4 soap_get__ns2__ActivateViewerResponse(struct soap*, _ns2__ActivateViewerResponse *, const char*, const char*);

#ifndef soap_read__ns2__ActivateViewerResponse
#define soap_read__ns2__ActivateViewerResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns2__ActivateViewerResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns2__ActivateViewerResponse * SOAP_FMAC2 soap_instantiate__ns2__ActivateViewerResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns2__ActivateViewerResponse * soap_new__ns2__ActivateViewerResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns2__ActivateViewerResponse(soap, n, NULL, NULL, NULL); }

inline _ns2__ActivateViewerResponse * soap_new_req__ns2__ActivateViewerResponse(struct soap *soap) { _ns2__ActivateViewerResponse *_p = soap_instantiate__ns2__ActivateViewerResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns2__ActivateViewerResponse * soap_new_set__ns2__ActivateViewerResponse(struct soap *soap) { _ns2__ActivateViewerResponse *_p = soap_instantiate__ns2__ActivateViewerResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__ns2__ActivateViewerResponse(struct soap *soap, _ns2__ActivateViewerResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns2__ActivateViewerResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns2__ActivateViewer
#define SOAP_TYPE__ns2__ActivateViewer (81)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns2__ActivateViewer(struct soap*, const char*, int, const _ns2__ActivateViewer *, const char*);
SOAP_FMAC3 _ns2__ActivateViewer * SOAP_FMAC4 soap_in__ns2__ActivateViewer(struct soap*, const char*, _ns2__ActivateViewer *, const char*);

#ifndef soap_write__ns2__ActivateViewer
#define soap_write__ns2__ActivateViewer(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns2:ActivateViewer", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns2__ActivateViewer * SOAP_FMAC4 soap_get__ns2__ActivateViewer(struct soap*, _ns2__ActivateViewer *, const char*, const char*);

#ifndef soap_read__ns2__ActivateViewer
#define soap_read__ns2__ActivateViewer(soap, data) ( soap_begin_recv(soap) || !soap_get__ns2__ActivateViewer(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns2__ActivateViewer * SOAP_FMAC2 soap_instantiate__ns2__ActivateViewer(struct soap*, int, const char*, const char*, size_t*);

inline _ns2__ActivateViewer * soap_new__ns2__ActivateViewer(struct soap *soap, int n = -1) { return soap_instantiate__ns2__ActivateViewer(soap, n, NULL, NULL, NULL); }

inline _ns2__ActivateViewer * soap_new_req__ns2__ActivateViewer(struct soap *soap) { _ns2__ActivateViewer *_p = soap_instantiate__ns2__ActivateViewer(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns2__ActivateViewer * soap_new_set__ns2__ActivateViewer(struct soap *soap, ns2__ActivateViewerRequest *request) { _ns2__ActivateViewer *_p = soap_instantiate__ns2__ActivateViewer(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns2__ActivateViewer::request = request; } return _p; }

inline void soap_delete__ns2__ActivateViewer(struct soap *soap, _ns2__ActivateViewer *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns2__ActivateViewer(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns2__OpenStudiesResponse
#define SOAP_TYPE__ns2__OpenStudiesResponse (80)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns2__OpenStudiesResponse(struct soap*, const char*, int, const _ns2__OpenStudiesResponse *, const char*);
SOAP_FMAC3 _ns2__OpenStudiesResponse * SOAP_FMAC4 soap_in__ns2__OpenStudiesResponse(struct soap*, const char*, _ns2__OpenStudiesResponse *, const char*);

#ifndef soap_write__ns2__OpenStudiesResponse
#define soap_write__ns2__OpenStudiesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns2:OpenStudiesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns2__OpenStudiesResponse * SOAP_FMAC4 soap_get__ns2__OpenStudiesResponse(struct soap*, _ns2__OpenStudiesResponse *, const char*, const char*);

#ifndef soap_read__ns2__OpenStudiesResponse
#define soap_read__ns2__OpenStudiesResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns2__OpenStudiesResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns2__OpenStudiesResponse * SOAP_FMAC2 soap_instantiate__ns2__OpenStudiesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns2__OpenStudiesResponse * soap_new__ns2__OpenStudiesResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns2__OpenStudiesResponse(soap, n, NULL, NULL, NULL); }

inline _ns2__OpenStudiesResponse * soap_new_req__ns2__OpenStudiesResponse(struct soap *soap) { _ns2__OpenStudiesResponse *_p = soap_instantiate__ns2__OpenStudiesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns2__OpenStudiesResponse * soap_new_set__ns2__OpenStudiesResponse(struct soap *soap, ns2__OpenStudiesResult *OpenStudiesResult) { _ns2__OpenStudiesResponse *_p = soap_instantiate__ns2__OpenStudiesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns2__OpenStudiesResponse::OpenStudiesResult = OpenStudiesResult; } return _p; }

inline void soap_delete__ns2__OpenStudiesResponse(struct soap *soap, _ns2__OpenStudiesResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns2__OpenStudiesResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns2__OpenStudies
#define SOAP_TYPE__ns2__OpenStudies (79)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns2__OpenStudies(struct soap*, const char*, int, const _ns2__OpenStudies *, const char*);
SOAP_FMAC3 _ns2__OpenStudies * SOAP_FMAC4 soap_in__ns2__OpenStudies(struct soap*, const char*, _ns2__OpenStudies *, const char*);

#ifndef soap_write__ns2__OpenStudies
#define soap_write__ns2__OpenStudies(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns2:OpenStudies", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns2__OpenStudies * SOAP_FMAC4 soap_get__ns2__OpenStudies(struct soap*, _ns2__OpenStudies *, const char*, const char*);

#ifndef soap_read__ns2__OpenStudies
#define soap_read__ns2__OpenStudies(soap, data) ( soap_begin_recv(soap) || !soap_get__ns2__OpenStudies(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns2__OpenStudies * SOAP_FMAC2 soap_instantiate__ns2__OpenStudies(struct soap*, int, const char*, const char*, size_t*);

inline _ns2__OpenStudies * soap_new__ns2__OpenStudies(struct soap *soap, int n = -1) { return soap_instantiate__ns2__OpenStudies(soap, n, NULL, NULL, NULL); }

inline _ns2__OpenStudies * soap_new_req__ns2__OpenStudies(struct soap *soap) { _ns2__OpenStudies *_p = soap_instantiate__ns2__OpenStudies(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns2__OpenStudies * soap_new_set__ns2__OpenStudies(struct soap *soap, ns2__OpenStudiesRequest *request) { _ns2__OpenStudies *_p = soap_instantiate__ns2__OpenStudies(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns2__OpenStudies::request = request; } return _p; }

inline void soap_delete__ns2__OpenStudies(struct soap *soap, _ns2__OpenStudies *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns2__OpenStudies(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns2__GetViewerInfoResponse
#define SOAP_TYPE__ns2__GetViewerInfoResponse (78)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns2__GetViewerInfoResponse(struct soap*, const char*, int, const _ns2__GetViewerInfoResponse *, const char*);
SOAP_FMAC3 _ns2__GetViewerInfoResponse * SOAP_FMAC4 soap_in__ns2__GetViewerInfoResponse(struct soap*, const char*, _ns2__GetViewerInfoResponse *, const char*);

#ifndef soap_write__ns2__GetViewerInfoResponse
#define soap_write__ns2__GetViewerInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns2:GetViewerInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns2__GetViewerInfoResponse * SOAP_FMAC4 soap_get__ns2__GetViewerInfoResponse(struct soap*, _ns2__GetViewerInfoResponse *, const char*, const char*);

#ifndef soap_read__ns2__GetViewerInfoResponse
#define soap_read__ns2__GetViewerInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns2__GetViewerInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns2__GetViewerInfoResponse * SOAP_FMAC2 soap_instantiate__ns2__GetViewerInfoResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns2__GetViewerInfoResponse * soap_new__ns2__GetViewerInfoResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns2__GetViewerInfoResponse(soap, n, NULL, NULL, NULL); }

inline _ns2__GetViewerInfoResponse * soap_new_req__ns2__GetViewerInfoResponse(struct soap *soap) { _ns2__GetViewerInfoResponse *_p = soap_instantiate__ns2__GetViewerInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns2__GetViewerInfoResponse * soap_new_set__ns2__GetViewerInfoResponse(struct soap *soap, ns2__GetViewerInfoResult *GetViewerInfoResult) { _ns2__GetViewerInfoResponse *_p = soap_instantiate__ns2__GetViewerInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns2__GetViewerInfoResponse::GetViewerInfoResult = GetViewerInfoResult; } return _p; }

inline void soap_delete__ns2__GetViewerInfoResponse(struct soap *soap, _ns2__GetViewerInfoResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns2__GetViewerInfoResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns2__GetViewerInfo
#define SOAP_TYPE__ns2__GetViewerInfo (77)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns2__GetViewerInfo(struct soap*, const char*, int, const _ns2__GetViewerInfo *, const char*);
SOAP_FMAC3 _ns2__GetViewerInfo * SOAP_FMAC4 soap_in__ns2__GetViewerInfo(struct soap*, const char*, _ns2__GetViewerInfo *, const char*);

#ifndef soap_write__ns2__GetViewerInfo
#define soap_write__ns2__GetViewerInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns2:GetViewerInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns2__GetViewerInfo * SOAP_FMAC4 soap_get__ns2__GetViewerInfo(struct soap*, _ns2__GetViewerInfo *, const char*, const char*);

#ifndef soap_read__ns2__GetViewerInfo
#define soap_read__ns2__GetViewerInfo(soap, data) ( soap_begin_recv(soap) || !soap_get__ns2__GetViewerInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns2__GetViewerInfo * SOAP_FMAC2 soap_instantiate__ns2__GetViewerInfo(struct soap*, int, const char*, const char*, size_t*);

inline _ns2__GetViewerInfo * soap_new__ns2__GetViewerInfo(struct soap *soap, int n = -1) { return soap_instantiate__ns2__GetViewerInfo(soap, n, NULL, NULL, NULL); }

inline _ns2__GetViewerInfo * soap_new_req__ns2__GetViewerInfo(struct soap *soap) { _ns2__GetViewerInfo *_p = soap_instantiate__ns2__GetViewerInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns2__GetViewerInfo * soap_new_set__ns2__GetViewerInfo(struct soap *soap, ns2__GetViewerInfoRequest *request) { _ns2__GetViewerInfo *_p = soap_instantiate__ns2__GetViewerInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns2__GetViewerInfo::request = request; } return _p; }

inline void soap_delete__ns2__GetViewerInfo(struct soap *soap, _ns2__GetViewerInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns2__GetViewerInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns2__GetActiveViewersResponse
#define SOAP_TYPE__ns2__GetActiveViewersResponse (76)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns2__GetActiveViewersResponse(struct soap*, const char*, int, const _ns2__GetActiveViewersResponse *, const char*);
SOAP_FMAC3 _ns2__GetActiveViewersResponse * SOAP_FMAC4 soap_in__ns2__GetActiveViewersResponse(struct soap*, const char*, _ns2__GetActiveViewersResponse *, const char*);

#ifndef soap_write__ns2__GetActiveViewersResponse
#define soap_write__ns2__GetActiveViewersResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns2:GetActiveViewersResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns2__GetActiveViewersResponse * SOAP_FMAC4 soap_get__ns2__GetActiveViewersResponse(struct soap*, _ns2__GetActiveViewersResponse *, const char*, const char*);

#ifndef soap_read__ns2__GetActiveViewersResponse
#define soap_read__ns2__GetActiveViewersResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns2__GetActiveViewersResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns2__GetActiveViewersResponse * SOAP_FMAC2 soap_instantiate__ns2__GetActiveViewersResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns2__GetActiveViewersResponse * soap_new__ns2__GetActiveViewersResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns2__GetActiveViewersResponse(soap, n, NULL, NULL, NULL); }

inline _ns2__GetActiveViewersResponse * soap_new_req__ns2__GetActiveViewersResponse(struct soap *soap) { _ns2__GetActiveViewersResponse *_p = soap_instantiate__ns2__GetActiveViewersResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns2__GetActiveViewersResponse * soap_new_set__ns2__GetActiveViewersResponse(struct soap *soap, ns2__GetActiveViewersResult *GetActiveViewersResult) { _ns2__GetActiveViewersResponse *_p = soap_instantiate__ns2__GetActiveViewersResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns2__GetActiveViewersResponse::GetActiveViewersResult = GetActiveViewersResult; } return _p; }

inline void soap_delete__ns2__GetActiveViewersResponse(struct soap *soap, _ns2__GetActiveViewersResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns2__GetActiveViewersResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns2__GetActiveViewers
#define SOAP_TYPE__ns2__GetActiveViewers (75)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns2__GetActiveViewers(struct soap*, const char*, int, const _ns2__GetActiveViewers *, const char*);
SOAP_FMAC3 _ns2__GetActiveViewers * SOAP_FMAC4 soap_in__ns2__GetActiveViewers(struct soap*, const char*, _ns2__GetActiveViewers *, const char*);

#ifndef soap_write__ns2__GetActiveViewers
#define soap_write__ns2__GetActiveViewers(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns2:GetActiveViewers", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns2__GetActiveViewers * SOAP_FMAC4 soap_get__ns2__GetActiveViewers(struct soap*, _ns2__GetActiveViewers *, const char*, const char*);

#ifndef soap_read__ns2__GetActiveViewers
#define soap_read__ns2__GetActiveViewers(soap, data) ( soap_begin_recv(soap) || !soap_get__ns2__GetActiveViewers(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns2__GetActiveViewers * SOAP_FMAC2 soap_instantiate__ns2__GetActiveViewers(struct soap*, int, const char*, const char*, size_t*);

inline _ns2__GetActiveViewers * soap_new__ns2__GetActiveViewers(struct soap *soap, int n = -1) { return soap_instantiate__ns2__GetActiveViewers(soap, n, NULL, NULL, NULL); }

inline _ns2__GetActiveViewers * soap_new_req__ns2__GetActiveViewers(struct soap *soap) { _ns2__GetActiveViewers *_p = soap_instantiate__ns2__GetActiveViewers(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns2__GetActiveViewers * soap_new_set__ns2__GetActiveViewers(struct soap *soap) { _ns2__GetActiveViewers *_p = soap_instantiate__ns2__GetActiveViewers(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__ns2__GetActiveViewers(struct soap *soap, _ns2__GetActiveViewers *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns2__GetActiveViewers(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns2__GetViewersResponse
#define SOAP_TYPE__ns2__GetViewersResponse (74)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns2__GetViewersResponse(struct soap*, const char*, int, const _ns2__GetViewersResponse *, const char*);
SOAP_FMAC3 _ns2__GetViewersResponse * SOAP_FMAC4 soap_in__ns2__GetViewersResponse(struct soap*, const char*, _ns2__GetViewersResponse *, const char*);

#ifndef soap_write__ns2__GetViewersResponse
#define soap_write__ns2__GetViewersResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns2:GetViewersResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns2__GetViewersResponse * SOAP_FMAC4 soap_get__ns2__GetViewersResponse(struct soap*, _ns2__GetViewersResponse *, const char*, const char*);

#ifndef soap_read__ns2__GetViewersResponse
#define soap_read__ns2__GetViewersResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns2__GetViewersResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns2__GetViewersResponse * SOAP_FMAC2 soap_instantiate__ns2__GetViewersResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns2__GetViewersResponse * soap_new__ns2__GetViewersResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns2__GetViewersResponse(soap, n, NULL, NULL, NULL); }

inline _ns2__GetViewersResponse * soap_new_req__ns2__GetViewersResponse(struct soap *soap) { _ns2__GetViewersResponse *_p = soap_instantiate__ns2__GetViewersResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns2__GetViewersResponse * soap_new_set__ns2__GetViewersResponse(struct soap *soap, ns2__GetViewersResult *GetViewersResult) { _ns2__GetViewersResponse *_p = soap_instantiate__ns2__GetViewersResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns2__GetViewersResponse::GetViewersResult = GetViewersResult; } return _p; }

inline void soap_delete__ns2__GetViewersResponse(struct soap *soap, _ns2__GetViewersResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns2__GetViewersResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns2__GetViewers
#define SOAP_TYPE__ns2__GetViewers (73)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns2__GetViewers(struct soap*, const char*, int, const _ns2__GetViewers *, const char*);
SOAP_FMAC3 _ns2__GetViewers * SOAP_FMAC4 soap_in__ns2__GetViewers(struct soap*, const char*, _ns2__GetViewers *, const char*);

#ifndef soap_write__ns2__GetViewers
#define soap_write__ns2__GetViewers(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns2:GetViewers", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns2__GetViewers * SOAP_FMAC4 soap_get__ns2__GetViewers(struct soap*, _ns2__GetViewers *, const char*, const char*);

#ifndef soap_read__ns2__GetViewers
#define soap_read__ns2__GetViewers(soap, data) ( soap_begin_recv(soap) || !soap_get__ns2__GetViewers(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns2__GetViewers * SOAP_FMAC2 soap_instantiate__ns2__GetViewers(struct soap*, int, const char*, const char*, size_t*);

inline _ns2__GetViewers * soap_new__ns2__GetViewers(struct soap *soap, int n = -1) { return soap_instantiate__ns2__GetViewers(soap, n, NULL, NULL, NULL); }

inline _ns2__GetViewers * soap_new_req__ns2__GetViewers(struct soap *soap) { _ns2__GetViewers *_p = soap_instantiate__ns2__GetViewers(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns2__GetViewers * soap_new_set__ns2__GetViewers(struct soap *soap, ns2__GetViewersRequest *request) { _ns2__GetViewers *_p = soap_instantiate__ns2__GetViewers(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns2__GetViewers::request = request; } return _p; }

inline void soap_delete__ns2__GetViewers(struct soap *soap, _ns2__GetViewers *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns2__GetViewers(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns2__OpenFilesResponse
#define SOAP_TYPE__ns2__OpenFilesResponse (72)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns2__OpenFilesResponse(struct soap*, const char*, int, const _ns2__OpenFilesResponse *, const char*);
SOAP_FMAC3 _ns2__OpenFilesResponse * SOAP_FMAC4 soap_in__ns2__OpenFilesResponse(struct soap*, const char*, _ns2__OpenFilesResponse *, const char*);

#ifndef soap_write__ns2__OpenFilesResponse
#define soap_write__ns2__OpenFilesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns2:OpenFilesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns2__OpenFilesResponse * SOAP_FMAC4 soap_get__ns2__OpenFilesResponse(struct soap*, _ns2__OpenFilesResponse *, const char*, const char*);

#ifndef soap_read__ns2__OpenFilesResponse
#define soap_read__ns2__OpenFilesResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns2__OpenFilesResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns2__OpenFilesResponse * SOAP_FMAC2 soap_instantiate__ns2__OpenFilesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns2__OpenFilesResponse * soap_new__ns2__OpenFilesResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns2__OpenFilesResponse(soap, n, NULL, NULL, NULL); }

inline _ns2__OpenFilesResponse * soap_new_req__ns2__OpenFilesResponse(struct soap *soap) { _ns2__OpenFilesResponse *_p = soap_instantiate__ns2__OpenFilesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns2__OpenFilesResponse * soap_new_set__ns2__OpenFilesResponse(struct soap *soap, ns2__OpenFilesResult *OpenFilesResult) { _ns2__OpenFilesResponse *_p = soap_instantiate__ns2__OpenFilesResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns2__OpenFilesResponse::OpenFilesResult = OpenFilesResult; } return _p; }

inline void soap_delete__ns2__OpenFilesResponse(struct soap *soap, _ns2__OpenFilesResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns2__OpenFilesResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns2__OpenFiles
#define SOAP_TYPE__ns2__OpenFiles (71)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns2__OpenFiles(struct soap*, const char*, int, const _ns2__OpenFiles *, const char*);
SOAP_FMAC3 _ns2__OpenFiles * SOAP_FMAC4 soap_in__ns2__OpenFiles(struct soap*, const char*, _ns2__OpenFiles *, const char*);

#ifndef soap_write__ns2__OpenFiles
#define soap_write__ns2__OpenFiles(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns2:OpenFiles", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns2__OpenFiles * SOAP_FMAC4 soap_get__ns2__OpenFiles(struct soap*, _ns2__OpenFiles *, const char*, const char*);

#ifndef soap_read__ns2__OpenFiles
#define soap_read__ns2__OpenFiles(soap, data) ( soap_begin_recv(soap) || !soap_get__ns2__OpenFiles(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns2__OpenFiles * SOAP_FMAC2 soap_instantiate__ns2__OpenFiles(struct soap*, int, const char*, const char*, size_t*);

inline _ns2__OpenFiles * soap_new__ns2__OpenFiles(struct soap *soap, int n = -1) { return soap_instantiate__ns2__OpenFiles(soap, n, NULL, NULL, NULL); }

inline _ns2__OpenFiles * soap_new_req__ns2__OpenFiles(struct soap *soap) { _ns2__OpenFiles *_p = soap_instantiate__ns2__OpenFiles(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns2__OpenFiles * soap_new_set__ns2__OpenFiles(struct soap *soap, ns2__OpenFilesRequest *request) { _ns2__OpenFiles *_p = soap_instantiate__ns2__OpenFiles(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns2__OpenFiles::request = request; } return _p; }

inline void soap_delete__ns2__OpenFiles(struct soap *soap, _ns2__OpenFiles *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns2__OpenFiles(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__CloseViewerRequest
#define SOAP_TYPE_ns2__CloseViewerRequest (70)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__CloseViewerRequest(struct soap*, const char*, int, const ns2__CloseViewerRequest *, const char*);
SOAP_FMAC3 ns2__CloseViewerRequest * SOAP_FMAC4 soap_in_ns2__CloseViewerRequest(struct soap*, const char*, ns2__CloseViewerRequest *, const char*);

#ifndef soap_write_ns2__CloseViewerRequest
#define soap_write_ns2__CloseViewerRequest(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns2:CloseViewerRequest", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__CloseViewerRequest * SOAP_FMAC4 soap_get_ns2__CloseViewerRequest(struct soap*, ns2__CloseViewerRequest *, const char*, const char*);

#ifndef soap_read_ns2__CloseViewerRequest
#define soap_read_ns2__CloseViewerRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__CloseViewerRequest(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns2__CloseViewerRequest * SOAP_FMAC2 soap_instantiate_ns2__CloseViewerRequest(struct soap*, int, const char*, const char*, size_t*);

inline ns2__CloseViewerRequest * soap_new_ns2__CloseViewerRequest(struct soap *soap, int n = -1) { return soap_instantiate_ns2__CloseViewerRequest(soap, n, NULL, NULL, NULL); }

inline ns2__CloseViewerRequest * soap_new_req_ns2__CloseViewerRequest(struct soap *soap) { ns2__CloseViewerRequest *_p = soap_instantiate_ns2__CloseViewerRequest(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns2__CloseViewerRequest * soap_new_set_ns2__CloseViewerRequest(struct soap *soap, ns2__Viewer *Viewer, char *__item1) { ns2__CloseViewerRequest *_p = soap_instantiate_ns2__CloseViewerRequest(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__CloseViewerRequest::Viewer = Viewer; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_ns2__CloseViewerRequest(struct soap *soap, ns2__CloseViewerRequest *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__CloseViewerRequest(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__ActivateViewerRequest
#define SOAP_TYPE_ns2__ActivateViewerRequest (69)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__ActivateViewerRequest(struct soap*, const char*, int, const ns2__ActivateViewerRequest *, const char*);
SOAP_FMAC3 ns2__ActivateViewerRequest * SOAP_FMAC4 soap_in_ns2__ActivateViewerRequest(struct soap*, const char*, ns2__ActivateViewerRequest *, const char*);

#ifndef soap_write_ns2__ActivateViewerRequest
#define soap_write_ns2__ActivateViewerRequest(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns2:ActivateViewerRequest", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__ActivateViewerRequest * SOAP_FMAC4 soap_get_ns2__ActivateViewerRequest(struct soap*, ns2__ActivateViewerRequest *, const char*, const char*);

#ifndef soap_read_ns2__ActivateViewerRequest
#define soap_read_ns2__ActivateViewerRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__ActivateViewerRequest(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns2__ActivateViewerRequest * SOAP_FMAC2 soap_instantiate_ns2__ActivateViewerRequest(struct soap*, int, const char*, const char*, size_t*);

inline ns2__ActivateViewerRequest * soap_new_ns2__ActivateViewerRequest(struct soap *soap, int n = -1) { return soap_instantiate_ns2__ActivateViewerRequest(soap, n, NULL, NULL, NULL); }

inline ns2__ActivateViewerRequest * soap_new_req_ns2__ActivateViewerRequest(struct soap *soap) { ns2__ActivateViewerRequest *_p = soap_instantiate_ns2__ActivateViewerRequest(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns2__ActivateViewerRequest * soap_new_set_ns2__ActivateViewerRequest(struct soap *soap, ns2__Viewer *Viewer, char *__item1) { ns2__ActivateViewerRequest *_p = soap_instantiate_ns2__ActivateViewerRequest(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__ActivateViewerRequest::Viewer = Viewer; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_ns2__ActivateViewerRequest(struct soap *soap, ns2__ActivateViewerRequest *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__ActivateViewerRequest(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__OpenStudiesFault
#define SOAP_TYPE_ns2__OpenStudiesFault (68)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__OpenStudiesFault(struct soap*, const char*, int, const ns2__OpenStudiesFault *, const char*);
SOAP_FMAC3 ns2__OpenStudiesFault * SOAP_FMAC4 soap_in_ns2__OpenStudiesFault(struct soap*, const char*, ns2__OpenStudiesFault *, const char*);

#ifndef soap_write_ns2__OpenStudiesFault
#define soap_write_ns2__OpenStudiesFault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns2:OpenStudiesFault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__OpenStudiesFault * SOAP_FMAC4 soap_get_ns2__OpenStudiesFault(struct soap*, ns2__OpenStudiesFault *, const char*, const char*);

#ifndef soap_read_ns2__OpenStudiesFault
#define soap_read_ns2__OpenStudiesFault(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__OpenStudiesFault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns2__OpenStudiesFault * SOAP_FMAC2 soap_instantiate_ns2__OpenStudiesFault(struct soap*, int, const char*, const char*, size_t*);

inline ns2__OpenStudiesFault * soap_new_ns2__OpenStudiesFault(struct soap *soap, int n = -1) { return soap_instantiate_ns2__OpenStudiesFault(soap, n, NULL, NULL, NULL); }

inline ns2__OpenStudiesFault * soap_new_req_ns2__OpenStudiesFault(struct soap *soap) { ns2__OpenStudiesFault *_p = soap_instantiate_ns2__OpenStudiesFault(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns2__OpenStudiesFault * soap_new_set_ns2__OpenStudiesFault(struct soap *soap, std::string *FailureDescription, char *__item1) { ns2__OpenStudiesFault *_p = soap_instantiate_ns2__OpenStudiesFault(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__OpenStudiesFault::FailureDescription = FailureDescription; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_ns2__OpenStudiesFault(struct soap *soap, ns2__OpenStudiesFault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__OpenStudiesFault(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__OpenStudiesResult
#define SOAP_TYPE_ns2__OpenStudiesResult (67)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__OpenStudiesResult(struct soap*, const char*, int, const ns2__OpenStudiesResult *, const char*);
SOAP_FMAC3 ns2__OpenStudiesResult * SOAP_FMAC4 soap_in_ns2__OpenStudiesResult(struct soap*, const char*, ns2__OpenStudiesResult *, const char*);

#ifndef soap_write_ns2__OpenStudiesResult
#define soap_write_ns2__OpenStudiesResult(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns2:OpenStudiesResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__OpenStudiesResult * SOAP_FMAC4 soap_get_ns2__OpenStudiesResult(struct soap*, ns2__OpenStudiesResult *, const char*, const char*);

#ifndef soap_read_ns2__OpenStudiesResult
#define soap_read_ns2__OpenStudiesResult(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__OpenStudiesResult(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns2__OpenStudiesResult * SOAP_FMAC2 soap_instantiate_ns2__OpenStudiesResult(struct soap*, int, const char*, const char*, size_t*);

inline ns2__OpenStudiesResult * soap_new_ns2__OpenStudiesResult(struct soap *soap, int n = -1) { return soap_instantiate_ns2__OpenStudiesResult(soap, n, NULL, NULL, NULL); }

inline ns2__OpenStudiesResult * soap_new_req_ns2__OpenStudiesResult(struct soap *soap) { ns2__OpenStudiesResult *_p = soap_instantiate_ns2__OpenStudiesResult(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns2__OpenStudiesResult * soap_new_set_ns2__OpenStudiesResult(struct soap *soap, ns2__Viewer *Viewer, char *__item1) { ns2__OpenStudiesResult *_p = soap_instantiate_ns2__OpenStudiesResult(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__OpenStudiesResult::Viewer = Viewer; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_ns2__OpenStudiesResult(struct soap *soap, ns2__OpenStudiesResult *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__OpenStudiesResult(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__OpenStudyInfo
#define SOAP_TYPE_ns2__OpenStudyInfo (66)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__OpenStudyInfo(struct soap*, const char*, int, const ns2__OpenStudyInfo *, const char*);
SOAP_FMAC3 ns2__OpenStudyInfo * SOAP_FMAC4 soap_in_ns2__OpenStudyInfo(struct soap*, const char*, ns2__OpenStudyInfo *, const char*);

#ifndef soap_write_ns2__OpenStudyInfo
#define soap_write_ns2__OpenStudyInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns2:OpenStudyInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__OpenStudyInfo * SOAP_FMAC4 soap_get_ns2__OpenStudyInfo(struct soap*, ns2__OpenStudyInfo *, const char*, const char*);

#ifndef soap_read_ns2__OpenStudyInfo
#define soap_read_ns2__OpenStudyInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__OpenStudyInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns2__OpenStudyInfo * SOAP_FMAC2 soap_instantiate_ns2__OpenStudyInfo(struct soap*, int, const char*, const char*, size_t*);

inline ns2__OpenStudyInfo * soap_new_ns2__OpenStudyInfo(struct soap *soap, int n = -1) { return soap_instantiate_ns2__OpenStudyInfo(soap, n, NULL, NULL, NULL); }

inline ns2__OpenStudyInfo * soap_new_req_ns2__OpenStudyInfo(struct soap *soap) { ns2__OpenStudyInfo *_p = soap_instantiate_ns2__OpenStudyInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns2__OpenStudyInfo * soap_new_set_ns2__OpenStudyInfo(struct soap *soap, std::string *SourceAETitle, std::string *StudyInstanceUid, char *__item1) { ns2__OpenStudyInfo *_p = soap_instantiate_ns2__OpenStudyInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__OpenStudyInfo::SourceAETitle = SourceAETitle; _p->ns2__OpenStudyInfo::StudyInstanceUid = StudyInstanceUid; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_ns2__OpenStudyInfo(struct soap *soap, ns2__OpenStudyInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__OpenStudyInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__ArrayOfOpenStudyInfo
#define SOAP_TYPE_ns2__ArrayOfOpenStudyInfo (65)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__ArrayOfOpenStudyInfo(struct soap*, const char*, int, const ns2__ArrayOfOpenStudyInfo *, const char*);
SOAP_FMAC3 ns2__ArrayOfOpenStudyInfo * SOAP_FMAC4 soap_in_ns2__ArrayOfOpenStudyInfo(struct soap*, const char*, ns2__ArrayOfOpenStudyInfo *, const char*);

#ifndef soap_write_ns2__ArrayOfOpenStudyInfo
#define soap_write_ns2__ArrayOfOpenStudyInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns2:ArrayOfOpenStudyInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__ArrayOfOpenStudyInfo * SOAP_FMAC4 soap_get_ns2__ArrayOfOpenStudyInfo(struct soap*, ns2__ArrayOfOpenStudyInfo *, const char*, const char*);

#ifndef soap_read_ns2__ArrayOfOpenStudyInfo
#define soap_read_ns2__ArrayOfOpenStudyInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__ArrayOfOpenStudyInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns2__ArrayOfOpenStudyInfo * SOAP_FMAC2 soap_instantiate_ns2__ArrayOfOpenStudyInfo(struct soap*, int, const char*, const char*, size_t*);

inline ns2__ArrayOfOpenStudyInfo * soap_new_ns2__ArrayOfOpenStudyInfo(struct soap *soap, int n = -1) { return soap_instantiate_ns2__ArrayOfOpenStudyInfo(soap, n, NULL, NULL, NULL); }

inline ns2__ArrayOfOpenStudyInfo * soap_new_req_ns2__ArrayOfOpenStudyInfo(struct soap *soap) { ns2__ArrayOfOpenStudyInfo *_p = soap_instantiate_ns2__ArrayOfOpenStudyInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns2__ArrayOfOpenStudyInfo * soap_new_set_ns2__ArrayOfOpenStudyInfo(struct soap *soap, std::vector<ns2__OpenStudyInfo * >& OpenStudyInfo, char *__item1) { ns2__ArrayOfOpenStudyInfo *_p = soap_instantiate_ns2__ArrayOfOpenStudyInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__ArrayOfOpenStudyInfo::OpenStudyInfo = OpenStudyInfo; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_ns2__ArrayOfOpenStudyInfo(struct soap *soap, ns2__ArrayOfOpenStudyInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__ArrayOfOpenStudyInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__OpenStudiesRequest
#define SOAP_TYPE_ns2__OpenStudiesRequest (64)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__OpenStudiesRequest(struct soap*, const char*, int, const ns2__OpenStudiesRequest *, const char*);
SOAP_FMAC3 ns2__OpenStudiesRequest * SOAP_FMAC4 soap_in_ns2__OpenStudiesRequest(struct soap*, const char*, ns2__OpenStudiesRequest *, const char*);

#ifndef soap_write_ns2__OpenStudiesRequest
#define soap_write_ns2__OpenStudiesRequest(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns2:OpenStudiesRequest", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__OpenStudiesRequest * SOAP_FMAC4 soap_get_ns2__OpenStudiesRequest(struct soap*, ns2__OpenStudiesRequest *, const char*, const char*);

#ifndef soap_read_ns2__OpenStudiesRequest
#define soap_read_ns2__OpenStudiesRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__OpenStudiesRequest(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns2__OpenStudiesRequest * SOAP_FMAC2 soap_instantiate_ns2__OpenStudiesRequest(struct soap*, int, const char*, const char*, size_t*);

inline ns2__OpenStudiesRequest * soap_new_ns2__OpenStudiesRequest(struct soap *soap, int n = -1) { return soap_instantiate_ns2__OpenStudiesRequest(soap, n, NULL, NULL, NULL); }

inline ns2__OpenStudiesRequest * soap_new_req_ns2__OpenStudiesRequest(struct soap *soap) { ns2__OpenStudiesRequest *_p = soap_instantiate_ns2__OpenStudiesRequest(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns2__OpenStudiesRequest * soap_new_set_ns2__OpenStudiesRequest(struct soap *soap, bool *ActivateIfAlreadyOpen, bool *LoadPriors, bool *ReportFaultToUser, ns2__ArrayOfOpenStudyInfo *StudiesToOpen, char *__item1) { ns2__OpenStudiesRequest *_p = soap_instantiate_ns2__OpenStudiesRequest(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__OpenStudiesRequest::ActivateIfAlreadyOpen = ActivateIfAlreadyOpen; _p->ns2__OpenStudiesRequest::LoadPriors = LoadPriors; _p->ns2__OpenStudiesRequest::ReportFaultToUser = ReportFaultToUser; _p->ns2__OpenStudiesRequest::StudiesToOpen = StudiesToOpen; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_ns2__OpenStudiesRequest(struct soap *soap, ns2__OpenStudiesRequest *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__OpenStudiesRequest(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__ViewerNotFoundFault
#define SOAP_TYPE_ns2__ViewerNotFoundFault (63)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__ViewerNotFoundFault(struct soap*, const char*, int, const ns2__ViewerNotFoundFault *, const char*);
SOAP_FMAC3 ns2__ViewerNotFoundFault * SOAP_FMAC4 soap_in_ns2__ViewerNotFoundFault(struct soap*, const char*, ns2__ViewerNotFoundFault *, const char*);

#ifndef soap_write_ns2__ViewerNotFoundFault
#define soap_write_ns2__ViewerNotFoundFault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns2:ViewerNotFoundFault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__ViewerNotFoundFault * SOAP_FMAC4 soap_get_ns2__ViewerNotFoundFault(struct soap*, ns2__ViewerNotFoundFault *, const char*, const char*);

#ifndef soap_read_ns2__ViewerNotFoundFault
#define soap_read_ns2__ViewerNotFoundFault(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__ViewerNotFoundFault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns2__ViewerNotFoundFault * SOAP_FMAC2 soap_instantiate_ns2__ViewerNotFoundFault(struct soap*, int, const char*, const char*, size_t*);

inline ns2__ViewerNotFoundFault * soap_new_ns2__ViewerNotFoundFault(struct soap *soap, int n = -1) { return soap_instantiate_ns2__ViewerNotFoundFault(soap, n, NULL, NULL, NULL); }

inline ns2__ViewerNotFoundFault * soap_new_req_ns2__ViewerNotFoundFault(struct soap *soap) { ns2__ViewerNotFoundFault *_p = soap_instantiate_ns2__ViewerNotFoundFault(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns2__ViewerNotFoundFault * soap_new_set_ns2__ViewerNotFoundFault(struct soap *soap, std::string *FailureDescription, char *__item1) { ns2__ViewerNotFoundFault *_p = soap_instantiate_ns2__ViewerNotFoundFault(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__ViewerNotFoundFault::FailureDescription = FailureDescription; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_ns2__ViewerNotFoundFault(struct soap *soap, ns2__ViewerNotFoundFault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__ViewerNotFoundFault(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__GetViewerInfoResult
#define SOAP_TYPE_ns2__GetViewerInfoResult (62)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__GetViewerInfoResult(struct soap*, const char*, int, const ns2__GetViewerInfoResult *, const char*);
SOAP_FMAC3 ns2__GetViewerInfoResult * SOAP_FMAC4 soap_in_ns2__GetViewerInfoResult(struct soap*, const char*, ns2__GetViewerInfoResult *, const char*);

#ifndef soap_write_ns2__GetViewerInfoResult
#define soap_write_ns2__GetViewerInfoResult(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns2:GetViewerInfoResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__GetViewerInfoResult * SOAP_FMAC4 soap_get_ns2__GetViewerInfoResult(struct soap*, ns2__GetViewerInfoResult *, const char*, const char*);

#ifndef soap_read_ns2__GetViewerInfoResult
#define soap_read_ns2__GetViewerInfoResult(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__GetViewerInfoResult(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns2__GetViewerInfoResult * SOAP_FMAC2 soap_instantiate_ns2__GetViewerInfoResult(struct soap*, int, const char*, const char*, size_t*);

inline ns2__GetViewerInfoResult * soap_new_ns2__GetViewerInfoResult(struct soap *soap, int n = -1) { return soap_instantiate_ns2__GetViewerInfoResult(soap, n, NULL, NULL, NULL); }

inline ns2__GetViewerInfoResult * soap_new_req_ns2__GetViewerInfoResult(struct soap *soap) { ns2__GetViewerInfoResult *_p = soap_instantiate_ns2__GetViewerInfoResult(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns2__GetViewerInfoResult * soap_new_set_ns2__GetViewerInfoResult(struct soap *soap, ns4__ArrayOfstring *AdditionalStudyInstanceUids, char *__item1) { ns2__GetViewerInfoResult *_p = soap_instantiate_ns2__GetViewerInfoResult(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__GetViewerInfoResult::AdditionalStudyInstanceUids = AdditionalStudyInstanceUids; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_ns2__GetViewerInfoResult(struct soap *soap, ns2__GetViewerInfoResult *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__GetViewerInfoResult(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__GetViewerInfoRequest
#define SOAP_TYPE_ns2__GetViewerInfoRequest (61)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__GetViewerInfoRequest(struct soap*, const char*, int, const ns2__GetViewerInfoRequest *, const char*);
SOAP_FMAC3 ns2__GetViewerInfoRequest * SOAP_FMAC4 soap_in_ns2__GetViewerInfoRequest(struct soap*, const char*, ns2__GetViewerInfoRequest *, const char*);

#ifndef soap_write_ns2__GetViewerInfoRequest
#define soap_write_ns2__GetViewerInfoRequest(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns2:GetViewerInfoRequest", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__GetViewerInfoRequest * SOAP_FMAC4 soap_get_ns2__GetViewerInfoRequest(struct soap*, ns2__GetViewerInfoRequest *, const char*, const char*);

#ifndef soap_read_ns2__GetViewerInfoRequest
#define soap_read_ns2__GetViewerInfoRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__GetViewerInfoRequest(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns2__GetViewerInfoRequest * SOAP_FMAC2 soap_instantiate_ns2__GetViewerInfoRequest(struct soap*, int, const char*, const char*, size_t*);

inline ns2__GetViewerInfoRequest * soap_new_ns2__GetViewerInfoRequest(struct soap *soap, int n = -1) { return soap_instantiate_ns2__GetViewerInfoRequest(soap, n, NULL, NULL, NULL); }

inline ns2__GetViewerInfoRequest * soap_new_req_ns2__GetViewerInfoRequest(struct soap *soap) { ns2__GetViewerInfoRequest *_p = soap_instantiate_ns2__GetViewerInfoRequest(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns2__GetViewerInfoRequest * soap_new_set_ns2__GetViewerInfoRequest(struct soap *soap, ns2__Viewer *Viewer, char *__item1) { ns2__GetViewerInfoRequest *_p = soap_instantiate_ns2__GetViewerInfoRequest(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__GetViewerInfoRequest::Viewer = Viewer; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_ns2__GetViewerInfoRequest(struct soap *soap, ns2__GetViewerInfoRequest *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__GetViewerInfoRequest(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__NoActiveViewersFault
#define SOAP_TYPE_ns2__NoActiveViewersFault (60)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__NoActiveViewersFault(struct soap*, const char*, int, const ns2__NoActiveViewersFault *, const char*);
SOAP_FMAC3 ns2__NoActiveViewersFault * SOAP_FMAC4 soap_in_ns2__NoActiveViewersFault(struct soap*, const char*, ns2__NoActiveViewersFault *, const char*);

#ifndef soap_write_ns2__NoActiveViewersFault
#define soap_write_ns2__NoActiveViewersFault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns2:NoActiveViewersFault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__NoActiveViewersFault * SOAP_FMAC4 soap_get_ns2__NoActiveViewersFault(struct soap*, ns2__NoActiveViewersFault *, const char*, const char*);

#ifndef soap_read_ns2__NoActiveViewersFault
#define soap_read_ns2__NoActiveViewersFault(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__NoActiveViewersFault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns2__NoActiveViewersFault * SOAP_FMAC2 soap_instantiate_ns2__NoActiveViewersFault(struct soap*, int, const char*, const char*, size_t*);

inline ns2__NoActiveViewersFault * soap_new_ns2__NoActiveViewersFault(struct soap *soap, int n = -1) { return soap_instantiate_ns2__NoActiveViewersFault(soap, n, NULL, NULL, NULL); }

inline ns2__NoActiveViewersFault * soap_new_req_ns2__NoActiveViewersFault(struct soap *soap) { ns2__NoActiveViewersFault *_p = soap_instantiate_ns2__NoActiveViewersFault(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns2__NoActiveViewersFault * soap_new_set_ns2__NoActiveViewersFault(struct soap *soap, char *__item1) { ns2__NoActiveViewersFault *_p = soap_instantiate_ns2__NoActiveViewersFault(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_ns2__NoActiveViewersFault(struct soap *soap, ns2__NoActiveViewersFault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__NoActiveViewersFault(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__GetActiveViewersResult
#define SOAP_TYPE_ns2__GetActiveViewersResult (59)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__GetActiveViewersResult(struct soap*, const char*, int, const ns2__GetActiveViewersResult *, const char*);
SOAP_FMAC3 ns2__GetActiveViewersResult * SOAP_FMAC4 soap_in_ns2__GetActiveViewersResult(struct soap*, const char*, ns2__GetActiveViewersResult *, const char*);

#ifndef soap_write_ns2__GetActiveViewersResult
#define soap_write_ns2__GetActiveViewersResult(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns2:GetActiveViewersResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__GetActiveViewersResult * SOAP_FMAC4 soap_get_ns2__GetActiveViewersResult(struct soap*, ns2__GetActiveViewersResult *, const char*, const char*);

#ifndef soap_read_ns2__GetActiveViewersResult
#define soap_read_ns2__GetActiveViewersResult(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__GetActiveViewersResult(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns2__GetActiveViewersResult * SOAP_FMAC2 soap_instantiate_ns2__GetActiveViewersResult(struct soap*, int, const char*, const char*, size_t*);

inline ns2__GetActiveViewersResult * soap_new_ns2__GetActiveViewersResult(struct soap *soap, int n = -1) { return soap_instantiate_ns2__GetActiveViewersResult(soap, n, NULL, NULL, NULL); }

inline ns2__GetActiveViewersResult * soap_new_req_ns2__GetActiveViewersResult(struct soap *soap) { ns2__GetActiveViewersResult *_p = soap_instantiate_ns2__GetActiveViewersResult(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns2__GetActiveViewersResult * soap_new_set_ns2__GetActiveViewersResult(struct soap *soap, ns2__ArrayOfViewer *ActiveViewers, char *__item1) { ns2__GetActiveViewersResult *_p = soap_instantiate_ns2__GetActiveViewersResult(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__GetActiveViewersResult::ActiveViewers = ActiveViewers; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_ns2__GetActiveViewersResult(struct soap *soap, ns2__GetActiveViewersResult *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__GetActiveViewersResult(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__NoViewersFault
#define SOAP_TYPE_ns2__NoViewersFault (58)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__NoViewersFault(struct soap*, const char*, int, const ns2__NoViewersFault *, const char*);
SOAP_FMAC3 ns2__NoViewersFault * SOAP_FMAC4 soap_in_ns2__NoViewersFault(struct soap*, const char*, ns2__NoViewersFault *, const char*);

#ifndef soap_write_ns2__NoViewersFault
#define soap_write_ns2__NoViewersFault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns2:NoViewersFault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__NoViewersFault * SOAP_FMAC4 soap_get_ns2__NoViewersFault(struct soap*, ns2__NoViewersFault *, const char*, const char*);

#ifndef soap_read_ns2__NoViewersFault
#define soap_read_ns2__NoViewersFault(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__NoViewersFault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns2__NoViewersFault * SOAP_FMAC2 soap_instantiate_ns2__NoViewersFault(struct soap*, int, const char*, const char*, size_t*);

inline ns2__NoViewersFault * soap_new_ns2__NoViewersFault(struct soap *soap, int n = -1) { return soap_instantiate_ns2__NoViewersFault(soap, n, NULL, NULL, NULL); }

inline ns2__NoViewersFault * soap_new_req_ns2__NoViewersFault(struct soap *soap) { ns2__NoViewersFault *_p = soap_instantiate_ns2__NoViewersFault(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns2__NoViewersFault * soap_new_set_ns2__NoViewersFault(struct soap *soap, char *__item1) { ns2__NoViewersFault *_p = soap_instantiate_ns2__NoViewersFault(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_ns2__NoViewersFault(struct soap *soap, ns2__NoViewersFault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__NoViewersFault(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__ArrayOfViewer
#define SOAP_TYPE_ns2__ArrayOfViewer (57)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__ArrayOfViewer(struct soap*, const char*, int, const ns2__ArrayOfViewer *, const char*);
SOAP_FMAC3 ns2__ArrayOfViewer * SOAP_FMAC4 soap_in_ns2__ArrayOfViewer(struct soap*, const char*, ns2__ArrayOfViewer *, const char*);

#ifndef soap_write_ns2__ArrayOfViewer
#define soap_write_ns2__ArrayOfViewer(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns2:ArrayOfViewer", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__ArrayOfViewer * SOAP_FMAC4 soap_get_ns2__ArrayOfViewer(struct soap*, ns2__ArrayOfViewer *, const char*, const char*);

#ifndef soap_read_ns2__ArrayOfViewer
#define soap_read_ns2__ArrayOfViewer(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__ArrayOfViewer(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns2__ArrayOfViewer * SOAP_FMAC2 soap_instantiate_ns2__ArrayOfViewer(struct soap*, int, const char*, const char*, size_t*);

inline ns2__ArrayOfViewer * soap_new_ns2__ArrayOfViewer(struct soap *soap, int n = -1) { return soap_instantiate_ns2__ArrayOfViewer(soap, n, NULL, NULL, NULL); }

inline ns2__ArrayOfViewer * soap_new_req_ns2__ArrayOfViewer(struct soap *soap) { ns2__ArrayOfViewer *_p = soap_instantiate_ns2__ArrayOfViewer(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns2__ArrayOfViewer * soap_new_set_ns2__ArrayOfViewer(struct soap *soap, std::vector<ns2__Viewer * >& Viewer, char *__item1) { ns2__ArrayOfViewer *_p = soap_instantiate_ns2__ArrayOfViewer(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__ArrayOfViewer::Viewer = Viewer; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_ns2__ArrayOfViewer(struct soap *soap, ns2__ArrayOfViewer *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__ArrayOfViewer(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__GetViewersResult
#define SOAP_TYPE_ns2__GetViewersResult (56)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__GetViewersResult(struct soap*, const char*, int, const ns2__GetViewersResult *, const char*);
SOAP_FMAC3 ns2__GetViewersResult * SOAP_FMAC4 soap_in_ns2__GetViewersResult(struct soap*, const char*, ns2__GetViewersResult *, const char*);

#ifndef soap_write_ns2__GetViewersResult
#define soap_write_ns2__GetViewersResult(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns2:GetViewersResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__GetViewersResult * SOAP_FMAC4 soap_get_ns2__GetViewersResult(struct soap*, ns2__GetViewersResult *, const char*, const char*);

#ifndef soap_read_ns2__GetViewersResult
#define soap_read_ns2__GetViewersResult(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__GetViewersResult(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns2__GetViewersResult * SOAP_FMAC2 soap_instantiate_ns2__GetViewersResult(struct soap*, int, const char*, const char*, size_t*);

inline ns2__GetViewersResult * soap_new_ns2__GetViewersResult(struct soap *soap, int n = -1) { return soap_instantiate_ns2__GetViewersResult(soap, n, NULL, NULL, NULL); }

inline ns2__GetViewersResult * soap_new_req_ns2__GetViewersResult(struct soap *soap) { ns2__GetViewersResult *_p = soap_instantiate_ns2__GetViewersResult(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns2__GetViewersResult * soap_new_set_ns2__GetViewersResult(struct soap *soap, ns2__ArrayOfViewer *Viewers, char *__item1) { ns2__GetViewersResult *_p = soap_instantiate_ns2__GetViewersResult(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__GetViewersResult::Viewers = Viewers; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_ns2__GetViewersResult(struct soap *soap, ns2__GetViewersResult *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__GetViewersResult(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__GetViewersRequest
#define SOAP_TYPE_ns2__GetViewersRequest (55)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__GetViewersRequest(struct soap*, const char*, int, const ns2__GetViewersRequest *, const char*);
SOAP_FMAC3 ns2__GetViewersRequest * SOAP_FMAC4 soap_in_ns2__GetViewersRequest(struct soap*, const char*, ns2__GetViewersRequest *, const char*);

#ifndef soap_write_ns2__GetViewersRequest
#define soap_write_ns2__GetViewersRequest(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns2:GetViewersRequest", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__GetViewersRequest * SOAP_FMAC4 soap_get_ns2__GetViewersRequest(struct soap*, ns2__GetViewersRequest *, const char*, const char*);

#ifndef soap_read_ns2__GetViewersRequest
#define soap_read_ns2__GetViewersRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__GetViewersRequest(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns2__GetViewersRequest * SOAP_FMAC2 soap_instantiate_ns2__GetViewersRequest(struct soap*, int, const char*, const char*, size_t*);

inline ns2__GetViewersRequest * soap_new_ns2__GetViewersRequest(struct soap *soap, int n = -1) { return soap_instantiate_ns2__GetViewersRequest(soap, n, NULL, NULL, NULL); }

inline ns2__GetViewersRequest * soap_new_req_ns2__GetViewersRequest(struct soap *soap) { ns2__GetViewersRequest *_p = soap_instantiate_ns2__GetViewersRequest(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns2__GetViewersRequest * soap_new_set_ns2__GetViewersRequest(struct soap *soap, char *__item1) { ns2__GetViewersRequest *_p = soap_instantiate_ns2__GetViewersRequest(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_ns2__GetViewersRequest(struct soap *soap, ns2__GetViewersRequest *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__GetViewersRequest(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__OpenFilesFault
#define SOAP_TYPE_ns2__OpenFilesFault (54)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__OpenFilesFault(struct soap*, const char*, int, const ns2__OpenFilesFault *, const char*);
SOAP_FMAC3 ns2__OpenFilesFault * SOAP_FMAC4 soap_in_ns2__OpenFilesFault(struct soap*, const char*, ns2__OpenFilesFault *, const char*);

#ifndef soap_write_ns2__OpenFilesFault
#define soap_write_ns2__OpenFilesFault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns2:OpenFilesFault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__OpenFilesFault * SOAP_FMAC4 soap_get_ns2__OpenFilesFault(struct soap*, ns2__OpenFilesFault *, const char*, const char*);

#ifndef soap_read_ns2__OpenFilesFault
#define soap_read_ns2__OpenFilesFault(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__OpenFilesFault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns2__OpenFilesFault * SOAP_FMAC2 soap_instantiate_ns2__OpenFilesFault(struct soap*, int, const char*, const char*, size_t*);

inline ns2__OpenFilesFault * soap_new_ns2__OpenFilesFault(struct soap *soap, int n = -1) { return soap_instantiate_ns2__OpenFilesFault(soap, n, NULL, NULL, NULL); }

inline ns2__OpenFilesFault * soap_new_req_ns2__OpenFilesFault(struct soap *soap) { ns2__OpenFilesFault *_p = soap_instantiate_ns2__OpenFilesFault(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns2__OpenFilesFault * soap_new_set_ns2__OpenFilesFault(struct soap *soap, std::string *FailureDescription, char *__item1) { ns2__OpenFilesFault *_p = soap_instantiate_ns2__OpenFilesFault(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__OpenFilesFault::FailureDescription = FailureDescription; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_ns2__OpenFilesFault(struct soap *soap, ns2__OpenFilesFault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__OpenFilesFault(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__Viewer
#define SOAP_TYPE_ns2__Viewer (53)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__Viewer(struct soap*, const char*, int, const ns2__Viewer *, const char*);
SOAP_FMAC3 ns2__Viewer * SOAP_FMAC4 soap_in_ns2__Viewer(struct soap*, const char*, ns2__Viewer *, const char*);

#ifndef soap_write_ns2__Viewer
#define soap_write_ns2__Viewer(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns2:Viewer", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__Viewer * SOAP_FMAC4 soap_get_ns2__Viewer(struct soap*, ns2__Viewer *, const char*, const char*);

#ifndef soap_read_ns2__Viewer
#define soap_read_ns2__Viewer(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__Viewer(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns2__Viewer * SOAP_FMAC2 soap_instantiate_ns2__Viewer(struct soap*, int, const char*, const char*, size_t*);

inline ns2__Viewer * soap_new_ns2__Viewer(struct soap *soap, int n = -1) { return soap_instantiate_ns2__Viewer(soap, n, NULL, NULL, NULL); }

inline ns2__Viewer * soap_new_req_ns2__Viewer(struct soap *soap, std::string& Identifier) { ns2__Viewer *_p = soap_instantiate_ns2__Viewer(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__Viewer::Identifier = Identifier; } return _p; }

inline ns2__Viewer * soap_new_set_ns2__Viewer(struct soap *soap, std::string& Identifier, ns5__StudyRootStudyIdentifier *PrimaryStudyIdentifier, char *__item1) { ns2__Viewer *_p = soap_instantiate_ns2__Viewer(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__Viewer::Identifier = Identifier; _p->ns2__Viewer::PrimaryStudyIdentifier = PrimaryStudyIdentifier; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_ns2__Viewer(struct soap *soap, ns2__Viewer *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__Viewer(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__OpenFilesResult
#define SOAP_TYPE_ns2__OpenFilesResult (52)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__OpenFilesResult(struct soap*, const char*, int, const ns2__OpenFilesResult *, const char*);
SOAP_FMAC3 ns2__OpenFilesResult * SOAP_FMAC4 soap_in_ns2__OpenFilesResult(struct soap*, const char*, ns2__OpenFilesResult *, const char*);

#ifndef soap_write_ns2__OpenFilesResult
#define soap_write_ns2__OpenFilesResult(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns2:OpenFilesResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__OpenFilesResult * SOAP_FMAC4 soap_get_ns2__OpenFilesResult(struct soap*, ns2__OpenFilesResult *, const char*, const char*);

#ifndef soap_read_ns2__OpenFilesResult
#define soap_read_ns2__OpenFilesResult(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__OpenFilesResult(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns2__OpenFilesResult * SOAP_FMAC2 soap_instantiate_ns2__OpenFilesResult(struct soap*, int, const char*, const char*, size_t*);

inline ns2__OpenFilesResult * soap_new_ns2__OpenFilesResult(struct soap *soap, int n = -1) { return soap_instantiate_ns2__OpenFilesResult(soap, n, NULL, NULL, NULL); }

inline ns2__OpenFilesResult * soap_new_req_ns2__OpenFilesResult(struct soap *soap) { ns2__OpenFilesResult *_p = soap_instantiate_ns2__OpenFilesResult(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns2__OpenFilesResult * soap_new_set_ns2__OpenFilesResult(struct soap *soap, ns2__Viewer *Viewer, char *__item1) { ns2__OpenFilesResult *_p = soap_instantiate_ns2__OpenFilesResult(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__OpenFilesResult::Viewer = Viewer; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_ns2__OpenFilesResult(struct soap *soap, ns2__OpenFilesResult *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__OpenFilesResult(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__OpenFilesRequest
#define SOAP_TYPE_ns2__OpenFilesRequest (51)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__OpenFilesRequest(struct soap*, const char*, int, const ns2__OpenFilesRequest *, const char*);
SOAP_FMAC3 ns2__OpenFilesRequest * SOAP_FMAC4 soap_in_ns2__OpenFilesRequest(struct soap*, const char*, ns2__OpenFilesRequest *, const char*);

#ifndef soap_write_ns2__OpenFilesRequest
#define soap_write_ns2__OpenFilesRequest(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns2:OpenFilesRequest", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__OpenFilesRequest * SOAP_FMAC4 soap_get_ns2__OpenFilesRequest(struct soap*, ns2__OpenFilesRequest *, const char*, const char*);

#ifndef soap_read_ns2__OpenFilesRequest
#define soap_read_ns2__OpenFilesRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__OpenFilesRequest(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns2__OpenFilesRequest * SOAP_FMAC2 soap_instantiate_ns2__OpenFilesRequest(struct soap*, int, const char*, const char*, size_t*);

inline ns2__OpenFilesRequest * soap_new_ns2__OpenFilesRequest(struct soap *soap, int n = -1) { return soap_instantiate_ns2__OpenFilesRequest(soap, n, NULL, NULL, NULL); }

inline ns2__OpenFilesRequest * soap_new_req_ns2__OpenFilesRequest(struct soap *soap) { ns2__OpenFilesRequest *_p = soap_instantiate_ns2__OpenFilesRequest(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns2__OpenFilesRequest * soap_new_set_ns2__OpenFilesRequest(struct soap *soap, ns4__ArrayOfstring *Files, bool *ReportFaultToUser, bool *WaitForFilesToOpen, char *__item1) { ns2__OpenFilesRequest *_p = soap_instantiate_ns2__OpenFilesRequest(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__OpenFilesRequest::Files = Files; _p->ns2__OpenFilesRequest::ReportFaultToUser = ReportFaultToUser; _p->ns2__OpenFilesRequest::WaitForFilesToOpen = WaitForFilesToOpen; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_ns2__OpenFilesRequest(struct soap *soap, ns2__OpenFilesRequest *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__OpenFilesRequest(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__unsignedShort
#define SOAP_TYPE_xsd__unsignedShort (49)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__unsignedShort(struct soap*, const char*, int, const xsd__unsignedShort *, const char*);
SOAP_FMAC3 xsd__unsignedShort * SOAP_FMAC4 soap_in_xsd__unsignedShort(struct soap*, const char*, xsd__unsignedShort *, const char*);

#ifndef soap_write_xsd__unsignedShort
#define soap_write_xsd__unsignedShort(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "xsd:unsignedShort", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__unsignedShort * SOAP_FMAC4 soap_get_xsd__unsignedShort(struct soap*, xsd__unsignedShort *, const char*, const char*);

#ifndef soap_read_xsd__unsignedShort
#define soap_read_xsd__unsignedShort(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__unsignedShort(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 xsd__unsignedShort * SOAP_FMAC2 soap_instantiate_xsd__unsignedShort(struct soap*, int, const char*, const char*, size_t*);

inline xsd__unsignedShort * soap_new_xsd__unsignedShort(struct soap *soap, int n = -1) { return soap_instantiate_xsd__unsignedShort(soap, n, NULL, NULL, NULL); }

inline xsd__unsignedShort * soap_new_req_xsd__unsignedShort(struct soap *soap, unsigned short __item) { xsd__unsignedShort *_p = soap_instantiate_xsd__unsignedShort(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__unsignedShort::__item = __item; } return _p; }

inline xsd__unsignedShort * soap_new_set_xsd__unsignedShort(struct soap *soap, unsigned short __item, char *__item1) { xsd__unsignedShort *_p = soap_instantiate_xsd__unsignedShort(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__unsignedShort::__item = __item; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_xsd__unsignedShort(struct soap *soap, xsd__unsignedShort *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__unsignedShort(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__unsignedLong
#define SOAP_TYPE_xsd__unsignedLong (47)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__unsignedLong(struct soap*, const char*, int, const xsd__unsignedLong *, const char*);
SOAP_FMAC3 xsd__unsignedLong * SOAP_FMAC4 soap_in_xsd__unsignedLong(struct soap*, const char*, xsd__unsignedLong *, const char*);

#ifndef soap_write_xsd__unsignedLong
#define soap_write_xsd__unsignedLong(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "xsd:unsignedLong", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__unsignedLong * SOAP_FMAC4 soap_get_xsd__unsignedLong(struct soap*, xsd__unsignedLong *, const char*, const char*);

#ifndef soap_read_xsd__unsignedLong
#define soap_read_xsd__unsignedLong(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__unsignedLong(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 xsd__unsignedLong * SOAP_FMAC2 soap_instantiate_xsd__unsignedLong(struct soap*, int, const char*, const char*, size_t*);

inline xsd__unsignedLong * soap_new_xsd__unsignedLong(struct soap *soap, int n = -1) { return soap_instantiate_xsd__unsignedLong(soap, n, NULL, NULL, NULL); }

inline xsd__unsignedLong * soap_new_req_xsd__unsignedLong(struct soap *soap, ULONG64 __item) { xsd__unsignedLong *_p = soap_instantiate_xsd__unsignedLong(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__unsignedLong::__item = __item; } return _p; }

inline xsd__unsignedLong * soap_new_set_xsd__unsignedLong(struct soap *soap, ULONG64 __item, char *__item1) { xsd__unsignedLong *_p = soap_instantiate_xsd__unsignedLong(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__unsignedLong::__item = __item; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_xsd__unsignedLong(struct soap *soap, xsd__unsignedLong *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__unsignedLong(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__unsignedInt
#define SOAP_TYPE_xsd__unsignedInt (46)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__unsignedInt(struct soap*, const char*, int, const xsd__unsignedInt *, const char*);
SOAP_FMAC3 xsd__unsignedInt * SOAP_FMAC4 soap_in_xsd__unsignedInt(struct soap*, const char*, xsd__unsignedInt *, const char*);

#ifndef soap_write_xsd__unsignedInt
#define soap_write_xsd__unsignedInt(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "xsd:unsignedInt", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__unsignedInt * SOAP_FMAC4 soap_get_xsd__unsignedInt(struct soap*, xsd__unsignedInt *, const char*, const char*);

#ifndef soap_read_xsd__unsignedInt
#define soap_read_xsd__unsignedInt(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__unsignedInt(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 xsd__unsignedInt * SOAP_FMAC2 soap_instantiate_xsd__unsignedInt(struct soap*, int, const char*, const char*, size_t*);

inline xsd__unsignedInt * soap_new_xsd__unsignedInt(struct soap *soap, int n = -1) { return soap_instantiate_xsd__unsignedInt(soap, n, NULL, NULL, NULL); }

inline xsd__unsignedInt * soap_new_req_xsd__unsignedInt(struct soap *soap, unsigned int __item) { xsd__unsignedInt *_p = soap_instantiate_xsd__unsignedInt(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__unsignedInt::__item = __item; } return _p; }

inline xsd__unsignedInt * soap_new_set_xsd__unsignedInt(struct soap *soap, unsigned int __item, char *__item1) { xsd__unsignedInt *_p = soap_instantiate_xsd__unsignedInt(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__unsignedInt::__item = __item; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_xsd__unsignedInt(struct soap *soap, xsd__unsignedInt *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__unsignedInt(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__unsignedByte_
#define SOAP_TYPE_xsd__unsignedByte_ (45)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__unsignedByte_(struct soap*, const char*, int, const xsd__unsignedByte_ *, const char*);
SOAP_FMAC3 xsd__unsignedByte_ * SOAP_FMAC4 soap_in_xsd__unsignedByte_(struct soap*, const char*, xsd__unsignedByte_ *, const char*);

#ifndef soap_write_xsd__unsignedByte_
#define soap_write_xsd__unsignedByte_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "xsd:unsignedByte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__unsignedByte_ * SOAP_FMAC4 soap_get_xsd__unsignedByte_(struct soap*, xsd__unsignedByte_ *, const char*, const char*);

#ifndef soap_read_xsd__unsignedByte_
#define soap_read_xsd__unsignedByte_(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__unsignedByte_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 xsd__unsignedByte_ * SOAP_FMAC2 soap_instantiate_xsd__unsignedByte_(struct soap*, int, const char*, const char*, size_t*);

inline xsd__unsignedByte_ * soap_new_xsd__unsignedByte_(struct soap *soap, int n = -1) { return soap_instantiate_xsd__unsignedByte_(soap, n, NULL, NULL, NULL); }

inline xsd__unsignedByte_ * soap_new_req_xsd__unsignedByte_(struct soap *soap, unsigned char __item) { xsd__unsignedByte_ *_p = soap_instantiate_xsd__unsignedByte_(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__unsignedByte_::__item = __item; } return _p; }

inline xsd__unsignedByte_ * soap_new_set_xsd__unsignedByte_(struct soap *soap, unsigned char __item, char *__item1) { xsd__unsignedByte_ *_p = soap_instantiate_xsd__unsignedByte_(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__unsignedByte_::__item = __item; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_xsd__unsignedByte_(struct soap *soap, xsd__unsignedByte_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__unsignedByte_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__string
#define SOAP_TYPE_xsd__string (44)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__string(struct soap*, const char*, int, const xsd__string *, const char*);
SOAP_FMAC3 xsd__string * SOAP_FMAC4 soap_in_xsd__string(struct soap*, const char*, xsd__string *, const char*);

#ifndef soap_write_xsd__string
#define soap_write_xsd__string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "xsd:string", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__string * SOAP_FMAC4 soap_get_xsd__string(struct soap*, xsd__string *, const char*, const char*);

#ifndef soap_read_xsd__string
#define soap_read_xsd__string(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__string(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 xsd__string * SOAP_FMAC2 soap_instantiate_xsd__string(struct soap*, int, const char*, const char*, size_t*);

inline xsd__string * soap_new_xsd__string(struct soap *soap, int n = -1) { return soap_instantiate_xsd__string(soap, n, NULL, NULL, NULL); }

inline xsd__string * soap_new_req_xsd__string(struct soap *soap, std::string& __item) { xsd__string *_p = soap_instantiate_xsd__string(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__string::__item = __item; } return _p; }

inline xsd__string * soap_new_set_xsd__string(struct soap *soap, std::string& __item, char *__item1) { xsd__string *_p = soap_instantiate_xsd__string(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__string::__item = __item; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_xsd__string(struct soap *soap, xsd__string *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__short
#define SOAP_TYPE_xsd__short (42)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__short(struct soap*, const char*, int, const xsd__short *, const char*);
SOAP_FMAC3 xsd__short * SOAP_FMAC4 soap_in_xsd__short(struct soap*, const char*, xsd__short *, const char*);

#ifndef soap_write_xsd__short
#define soap_write_xsd__short(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "xsd:short", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__short * SOAP_FMAC4 soap_get_xsd__short(struct soap*, xsd__short *, const char*, const char*);

#ifndef soap_read_xsd__short
#define soap_read_xsd__short(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__short(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 xsd__short * SOAP_FMAC2 soap_instantiate_xsd__short(struct soap*, int, const char*, const char*, size_t*);

inline xsd__short * soap_new_xsd__short(struct soap *soap, int n = -1) { return soap_instantiate_xsd__short(soap, n, NULL, NULL, NULL); }

inline xsd__short * soap_new_req_xsd__short(struct soap *soap, short __item) { xsd__short *_p = soap_instantiate_xsd__short(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__short::__item = __item; } return _p; }

inline xsd__short * soap_new_set_xsd__short(struct soap *soap, short __item, char *__item1) { xsd__short *_p = soap_instantiate_xsd__short(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__short::__item = __item; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_xsd__short(struct soap *soap, xsd__short *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__short(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__long
#define SOAP_TYPE_xsd__long (40)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__long(struct soap*, const char*, int, const xsd__long *, const char*);
SOAP_FMAC3 xsd__long * SOAP_FMAC4 soap_in_xsd__long(struct soap*, const char*, xsd__long *, const char*);

#ifndef soap_write_xsd__long
#define soap_write_xsd__long(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "xsd:long", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__long * SOAP_FMAC4 soap_get_xsd__long(struct soap*, xsd__long *, const char*, const char*);

#ifndef soap_read_xsd__long
#define soap_read_xsd__long(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__long(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 xsd__long * SOAP_FMAC2 soap_instantiate_xsd__long(struct soap*, int, const char*, const char*, size_t*);

inline xsd__long * soap_new_xsd__long(struct soap *soap, int n = -1) { return soap_instantiate_xsd__long(soap, n, NULL, NULL, NULL); }

inline xsd__long * soap_new_req_xsd__long(struct soap *soap, LONG64 __item) { xsd__long *_p = soap_instantiate_xsd__long(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__long::__item = __item; } return _p; }

inline xsd__long * soap_new_set_xsd__long(struct soap *soap, LONG64 __item, char *__item1) { xsd__long *_p = soap_instantiate_xsd__long(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__long::__item = __item; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_xsd__long(struct soap *soap, xsd__long *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__long(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__int
#define SOAP_TYPE_xsd__int (39)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__int(struct soap*, const char*, int, const xsd__int *, const char*);
SOAP_FMAC3 xsd__int * SOAP_FMAC4 soap_in_xsd__int(struct soap*, const char*, xsd__int *, const char*);

#ifndef soap_write_xsd__int
#define soap_write_xsd__int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "xsd:int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__int * SOAP_FMAC4 soap_get_xsd__int(struct soap*, xsd__int *, const char*, const char*);

#ifndef soap_read_xsd__int
#define soap_read_xsd__int(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__int(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 xsd__int * SOAP_FMAC2 soap_instantiate_xsd__int(struct soap*, int, const char*, const char*, size_t*);

inline xsd__int * soap_new_xsd__int(struct soap *soap, int n = -1) { return soap_instantiate_xsd__int(soap, n, NULL, NULL, NULL); }

inline xsd__int * soap_new_req_xsd__int(struct soap *soap, int __item) { xsd__int *_p = soap_instantiate_xsd__int(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__int::__item = __item; } return _p; }

inline xsd__int * soap_new_set_xsd__int(struct soap *soap, int __item, char *__item1) { xsd__int *_p = soap_instantiate_xsd__int(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__int::__item = __item; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_xsd__int(struct soap *soap, xsd__int *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__int(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__float
#define SOAP_TYPE_xsd__float (37)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__float(struct soap*, const char*, int, const xsd__float *, const char*);
SOAP_FMAC3 xsd__float * SOAP_FMAC4 soap_in_xsd__float(struct soap*, const char*, xsd__float *, const char*);

#ifndef soap_write_xsd__float
#define soap_write_xsd__float(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "xsd:float", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__float * SOAP_FMAC4 soap_get_xsd__float(struct soap*, xsd__float *, const char*, const char*);

#ifndef soap_read_xsd__float
#define soap_read_xsd__float(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__float(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 xsd__float * SOAP_FMAC2 soap_instantiate_xsd__float(struct soap*, int, const char*, const char*, size_t*);

inline xsd__float * soap_new_xsd__float(struct soap *soap, int n = -1) { return soap_instantiate_xsd__float(soap, n, NULL, NULL, NULL); }

inline xsd__float * soap_new_req_xsd__float(struct soap *soap, float __item) { xsd__float *_p = soap_instantiate_xsd__float(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__float::__item = __item; } return _p; }

inline xsd__float * soap_new_set_xsd__float(struct soap *soap, float __item, char *__item1) { xsd__float *_p = soap_instantiate_xsd__float(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__float::__item = __item; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_xsd__float(struct soap *soap, xsd__float *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__float(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__duration_
#define SOAP_TYPE_xsd__duration_ (36)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__duration_(struct soap*, const char*, int, const xsd__duration_ *, const char*);
SOAP_FMAC3 xsd__duration_ * SOAP_FMAC4 soap_in_xsd__duration_(struct soap*, const char*, xsd__duration_ *, const char*);

#ifndef soap_write_xsd__duration_
#define soap_write_xsd__duration_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "xsd:duration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__duration_ * SOAP_FMAC4 soap_get_xsd__duration_(struct soap*, xsd__duration_ *, const char*, const char*);

#ifndef soap_read_xsd__duration_
#define soap_read_xsd__duration_(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__duration_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 xsd__duration_ * SOAP_FMAC2 soap_instantiate_xsd__duration_(struct soap*, int, const char*, const char*, size_t*);

inline xsd__duration_ * soap_new_xsd__duration_(struct soap *soap, int n = -1) { return soap_instantiate_xsd__duration_(soap, n, NULL, NULL, NULL); }

inline xsd__duration_ * soap_new_req_xsd__duration_(struct soap *soap, std::string& __item) { xsd__duration_ *_p = soap_instantiate_xsd__duration_(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__duration_::__item = __item; } return _p; }

inline xsd__duration_ * soap_new_set_xsd__duration_(struct soap *soap, std::string& __item, char *__item1) { xsd__duration_ *_p = soap_instantiate_xsd__duration_(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__duration_::__item = __item; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_xsd__duration_(struct soap *soap, xsd__duration_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__duration_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__duration
#define SOAP_TYPE_xsd__duration (35)
#endif

#define soap_default_xsd__duration(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__duration(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__duration(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__duration(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__duration(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_xsd__duration
#define soap_write_xsd__duration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__duration(soap, data),0) || soap_put_xsd__duration(soap, data, "xsd:duration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__duration(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_xsd__duration
#define soap_read_xsd__duration(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__duration(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_xsd__duration soap_instantiate_std__string


#define soap_copy_xsd__duration soap_copy_std__string

#ifndef SOAP_TYPE_xsd__double
#define SOAP_TYPE_xsd__double (33)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__double(struct soap*, const char*, int, const xsd__double *, const char*);
SOAP_FMAC3 xsd__double * SOAP_FMAC4 soap_in_xsd__double(struct soap*, const char*, xsd__double *, const char*);

#ifndef soap_write_xsd__double
#define soap_write_xsd__double(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "xsd:double", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__double * SOAP_FMAC4 soap_get_xsd__double(struct soap*, xsd__double *, const char*, const char*);

#ifndef soap_read_xsd__double
#define soap_read_xsd__double(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__double(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 xsd__double * SOAP_FMAC2 soap_instantiate_xsd__double(struct soap*, int, const char*, const char*, size_t*);

inline xsd__double * soap_new_xsd__double(struct soap *soap, int n = -1) { return soap_instantiate_xsd__double(soap, n, NULL, NULL, NULL); }

inline xsd__double * soap_new_req_xsd__double(struct soap *soap, double __item) { xsd__double *_p = soap_instantiate_xsd__double(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__double::__item = __item; } return _p; }

inline xsd__double * soap_new_set_xsd__double(struct soap *soap, double __item, char *__item1) { xsd__double *_p = soap_instantiate_xsd__double(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__double::__item = __item; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_xsd__double(struct soap *soap, xsd__double *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__double(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__decimal_
#define SOAP_TYPE_xsd__decimal_ (32)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__decimal_(struct soap*, const char*, int, const xsd__decimal_ *, const char*);
SOAP_FMAC3 xsd__decimal_ * SOAP_FMAC4 soap_in_xsd__decimal_(struct soap*, const char*, xsd__decimal_ *, const char*);

#ifndef soap_write_xsd__decimal_
#define soap_write_xsd__decimal_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "xsd:decimal", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__decimal_ * SOAP_FMAC4 soap_get_xsd__decimal_(struct soap*, xsd__decimal_ *, const char*, const char*);

#ifndef soap_read_xsd__decimal_
#define soap_read_xsd__decimal_(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__decimal_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 xsd__decimal_ * SOAP_FMAC2 soap_instantiate_xsd__decimal_(struct soap*, int, const char*, const char*, size_t*);

inline xsd__decimal_ * soap_new_xsd__decimal_(struct soap *soap, int n = -1) { return soap_instantiate_xsd__decimal_(soap, n, NULL, NULL, NULL); }

inline xsd__decimal_ * soap_new_req_xsd__decimal_(struct soap *soap, std::string& __item) { xsd__decimal_ *_p = soap_instantiate_xsd__decimal_(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__decimal_::__item = __item; } return _p; }

inline xsd__decimal_ * soap_new_set_xsd__decimal_(struct soap *soap, std::string& __item, char *__item1) { xsd__decimal_ *_p = soap_instantiate_xsd__decimal_(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__decimal_::__item = __item; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_xsd__decimal_(struct soap *soap, xsd__decimal_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__decimal_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__decimal
#define SOAP_TYPE_xsd__decimal (31)
#endif

#define soap_default_xsd__decimal(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__decimal(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__decimal(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__decimal(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__decimal(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_xsd__decimal
#define soap_write_xsd__decimal(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__decimal(soap, data),0) || soap_put_xsd__decimal(soap, data, "xsd:decimal", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__decimal(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_xsd__decimal
#define soap_read_xsd__decimal(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__decimal(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_xsd__decimal soap_instantiate_std__string


#define soap_copy_xsd__decimal soap_copy_std__string

#ifndef SOAP_TYPE_xsd__dateTime
#define SOAP_TYPE_xsd__dateTime (29)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__dateTime(struct soap*, const char*, int, const xsd__dateTime *, const char*);
SOAP_FMAC3 xsd__dateTime * SOAP_FMAC4 soap_in_xsd__dateTime(struct soap*, const char*, xsd__dateTime *, const char*);

#ifndef soap_write_xsd__dateTime
#define soap_write_xsd__dateTime(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "xsd:dateTime", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__dateTime * SOAP_FMAC4 soap_get_xsd__dateTime(struct soap*, xsd__dateTime *, const char*, const char*);

#ifndef soap_read_xsd__dateTime
#define soap_read_xsd__dateTime(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__dateTime(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 xsd__dateTime * SOAP_FMAC2 soap_instantiate_xsd__dateTime(struct soap*, int, const char*, const char*, size_t*);

inline xsd__dateTime * soap_new_xsd__dateTime(struct soap *soap, int n = -1) { return soap_instantiate_xsd__dateTime(soap, n, NULL, NULL, NULL); }

inline xsd__dateTime * soap_new_req_xsd__dateTime(struct soap *soap, time_t __item) { xsd__dateTime *_p = soap_instantiate_xsd__dateTime(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__dateTime::__item = __item; } return _p; }

inline xsd__dateTime * soap_new_set_xsd__dateTime(struct soap *soap, time_t __item, char *__item1) { xsd__dateTime *_p = soap_instantiate_xsd__dateTime(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__dateTime::__item = __item; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_xsd__dateTime(struct soap *soap, xsd__dateTime *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__dateTime(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__byte_
#define SOAP_TYPE_xsd__byte_ (28)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__byte_(struct soap*, const char*, int, const xsd__byte_ *, const char*);
SOAP_FMAC3 xsd__byte_ * SOAP_FMAC4 soap_in_xsd__byte_(struct soap*, const char*, xsd__byte_ *, const char*);

#ifndef soap_write_xsd__byte_
#define soap_write_xsd__byte_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "xsd:byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__byte_ * SOAP_FMAC4 soap_get_xsd__byte_(struct soap*, xsd__byte_ *, const char*, const char*);

#ifndef soap_read_xsd__byte_
#define soap_read_xsd__byte_(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__byte_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 xsd__byte_ * SOAP_FMAC2 soap_instantiate_xsd__byte_(struct soap*, int, const char*, const char*, size_t*);

inline xsd__byte_ * soap_new_xsd__byte_(struct soap *soap, int n = -1) { return soap_instantiate_xsd__byte_(soap, n, NULL, NULL, NULL); }

inline xsd__byte_ * soap_new_req_xsd__byte_(struct soap *soap, char __item) { xsd__byte_ *_p = soap_instantiate_xsd__byte_(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__byte_::__item = __item; } return _p; }

inline xsd__byte_ * soap_new_set_xsd__byte_(struct soap *soap, char __item, char *__item1) { xsd__byte_ *_p = soap_instantiate_xsd__byte_(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__byte_::__item = __item; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_xsd__byte_(struct soap *soap, xsd__byte_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__byte_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__boolean
#define SOAP_TYPE_xsd__boolean (26)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__boolean(struct soap*, const char*, int, const xsd__boolean *, const char*);
SOAP_FMAC3 xsd__boolean * SOAP_FMAC4 soap_in_xsd__boolean(struct soap*, const char*, xsd__boolean *, const char*);

#ifndef soap_write_xsd__boolean
#define soap_write_xsd__boolean(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "xsd:boolean", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__boolean * SOAP_FMAC4 soap_get_xsd__boolean(struct soap*, xsd__boolean *, const char*, const char*);

#ifndef soap_read_xsd__boolean
#define soap_read_xsd__boolean(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__boolean(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 xsd__boolean * SOAP_FMAC2 soap_instantiate_xsd__boolean(struct soap*, int, const char*, const char*, size_t*);

inline xsd__boolean * soap_new_xsd__boolean(struct soap *soap, int n = -1) { return soap_instantiate_xsd__boolean(soap, n, NULL, NULL, NULL); }

inline xsd__boolean * soap_new_req_xsd__boolean(struct soap *soap, bool __item) { xsd__boolean *_p = soap_instantiate_xsd__boolean(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__boolean::__item = __item; } return _p; }

inline xsd__boolean * soap_new_set_xsd__boolean(struct soap *soap, bool __item, char *__item1) { xsd__boolean *_p = soap_instantiate_xsd__boolean(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__boolean::__item = __item; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_xsd__boolean(struct soap *soap, xsd__boolean *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__boolean(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__base64Binary_
#define SOAP_TYPE_xsd__base64Binary_ (25)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__base64Binary_(struct soap*, const char*, int, const xsd__base64Binary_ *, const char*);
SOAP_FMAC3 xsd__base64Binary_ * SOAP_FMAC4 soap_in_xsd__base64Binary_(struct soap*, const char*, xsd__base64Binary_ *, const char*);

#ifndef soap_write_xsd__base64Binary_
#define soap_write_xsd__base64Binary_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "xsd:base64Binary", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__base64Binary_ * SOAP_FMAC4 soap_get_xsd__base64Binary_(struct soap*, xsd__base64Binary_ *, const char*, const char*);

#ifndef soap_read_xsd__base64Binary_
#define soap_read_xsd__base64Binary_(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__base64Binary_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 xsd__base64Binary_ * SOAP_FMAC2 soap_instantiate_xsd__base64Binary_(struct soap*, int, const char*, const char*, size_t*);

inline xsd__base64Binary_ * soap_new_xsd__base64Binary_(struct soap *soap, int n = -1) { return soap_instantiate_xsd__base64Binary_(soap, n, NULL, NULL, NULL); }

inline xsd__base64Binary_ * soap_new_req_xsd__base64Binary_(struct soap *soap, xsd__base64Binary& __item) { xsd__base64Binary_ *_p = soap_instantiate_xsd__base64Binary_(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__base64Binary_::__item = __item; } return _p; }

inline xsd__base64Binary_ * soap_new_set_xsd__base64Binary_(struct soap *soap, xsd__base64Binary& __item, char *__item1) { xsd__base64Binary_ *_p = soap_instantiate_xsd__base64Binary_(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__base64Binary_::__item = __item; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_xsd__base64Binary_(struct soap *soap, xsd__base64Binary_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__base64Binary_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__anyURI_
#define SOAP_TYPE_xsd__anyURI_ (24)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__anyURI_(struct soap*, const char*, int, const xsd__anyURI_ *, const char*);
SOAP_FMAC3 xsd__anyURI_ * SOAP_FMAC4 soap_in_xsd__anyURI_(struct soap*, const char*, xsd__anyURI_ *, const char*);

#ifndef soap_write_xsd__anyURI_
#define soap_write_xsd__anyURI_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "xsd:anyURI", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__anyURI_ * SOAP_FMAC4 soap_get_xsd__anyURI_(struct soap*, xsd__anyURI_ *, const char*, const char*);

#ifndef soap_read_xsd__anyURI_
#define soap_read_xsd__anyURI_(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__anyURI_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 xsd__anyURI_ * SOAP_FMAC2 soap_instantiate_xsd__anyURI_(struct soap*, int, const char*, const char*, size_t*);

inline xsd__anyURI_ * soap_new_xsd__anyURI_(struct soap *soap, int n = -1) { return soap_instantiate_xsd__anyURI_(soap, n, NULL, NULL, NULL); }

inline xsd__anyURI_ * soap_new_req_xsd__anyURI_(struct soap *soap, std::string& __item) { xsd__anyURI_ *_p = soap_instantiate_xsd__anyURI_(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__anyURI_::__item = __item; } return _p; }

inline xsd__anyURI_ * soap_new_set_xsd__anyURI_(struct soap *soap, std::string& __item, char *__item1) { xsd__anyURI_ *_p = soap_instantiate_xsd__anyURI_(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__anyURI_::__item = __item; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_xsd__anyURI_(struct soap *soap, xsd__anyURI_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__anyURI_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__anyURI
#define SOAP_TYPE_xsd__anyURI (23)
#endif

#define soap_default_xsd__anyURI(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__anyURI(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__anyURI(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__anyURI(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__anyURI(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_xsd__anyURI
#define soap_write_xsd__anyURI(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__anyURI(soap, data),0) || soap_put_xsd__anyURI(soap, data, "xsd:anyURI", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__anyURI(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_xsd__anyURI
#define soap_read_xsd__anyURI(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__anyURI(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_xsd__anyURI soap_instantiate_std__string


#define soap_copy_xsd__anyURI soap_copy_std__string

#ifndef SOAP_TYPE_xsd__QName_
#define SOAP_TYPE_xsd__QName_ (22)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__QName_(struct soap*, const char*, int, const xsd__QName_ *, const char*);
SOAP_FMAC3 xsd__QName_ * SOAP_FMAC4 soap_in_xsd__QName_(struct soap*, const char*, xsd__QName_ *, const char*);

#ifndef soap_write_xsd__QName_
#define soap_write_xsd__QName_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "xsd:QName", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__QName_ * SOAP_FMAC4 soap_get_xsd__QName_(struct soap*, xsd__QName_ *, const char*, const char*);

#ifndef soap_read_xsd__QName_
#define soap_read_xsd__QName_(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__QName_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 xsd__QName_ * SOAP_FMAC2 soap_instantiate_xsd__QName_(struct soap*, int, const char*, const char*, size_t*);

inline xsd__QName_ * soap_new_xsd__QName_(struct soap *soap, int n = -1) { return soap_instantiate_xsd__QName_(soap, n, NULL, NULL, NULL); }

inline xsd__QName_ * soap_new_req_xsd__QName_(struct soap *soap, std::string& __item) { xsd__QName_ *_p = soap_instantiate_xsd__QName_(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__QName_::__item = __item; } return _p; }

inline xsd__QName_ * soap_new_set_xsd__QName_(struct soap *soap, std::string& __item, char *__item1) { xsd__QName_ *_p = soap_instantiate_xsd__QName_(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__QName_::__item = __item; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_xsd__QName_(struct soap *soap, xsd__QName_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__QName_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__IDREF_
#define SOAP_TYPE_xsd__IDREF_ (21)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__IDREF_(struct soap*, const char*, int, const xsd__IDREF_ *, const char*);
SOAP_FMAC3 xsd__IDREF_ * SOAP_FMAC4 soap_in_xsd__IDREF_(struct soap*, const char*, xsd__IDREF_ *, const char*);

#ifndef soap_write_xsd__IDREF_
#define soap_write_xsd__IDREF_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "xsd:IDREF", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__IDREF_ * SOAP_FMAC4 soap_get_xsd__IDREF_(struct soap*, xsd__IDREF_ *, const char*, const char*);

#ifndef soap_read_xsd__IDREF_
#define soap_read_xsd__IDREF_(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__IDREF_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 xsd__IDREF_ * SOAP_FMAC2 soap_instantiate_xsd__IDREF_(struct soap*, int, const char*, const char*, size_t*);

inline xsd__IDREF_ * soap_new_xsd__IDREF_(struct soap *soap, int n = -1) { return soap_instantiate_xsd__IDREF_(soap, n, NULL, NULL, NULL); }

inline xsd__IDREF_ * soap_new_req_xsd__IDREF_(struct soap *soap, std::string& __item) { xsd__IDREF_ *_p = soap_instantiate_xsd__IDREF_(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__IDREF_::__item = __item; } return _p; }

inline xsd__IDREF_ * soap_new_set_xsd__IDREF_(struct soap *soap, std::string& __item, char *__item1) { xsd__IDREF_ *_p = soap_instantiate_xsd__IDREF_(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__IDREF_::__item = __item; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_xsd__IDREF_(struct soap *soap, xsd__IDREF_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__IDREF_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__IDREF
#define SOAP_TYPE_xsd__IDREF (20)
#endif

#define soap_default_xsd__IDREF(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__IDREF(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__IDREF(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__IDREF(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__IDREF(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_xsd__IDREF
#define soap_write_xsd__IDREF(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__IDREF(soap, data),0) || soap_put_xsd__IDREF(soap, data, "xsd:IDREF", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__IDREF(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_xsd__IDREF
#define soap_read_xsd__IDREF(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__IDREF(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_xsd__IDREF soap_instantiate_std__string


#define soap_copy_xsd__IDREF soap_copy_std__string

#ifndef SOAP_TYPE_xsd__ID_
#define SOAP_TYPE_xsd__ID_ (19)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__ID_(struct soap*, const char*, int, const xsd__ID_ *, const char*);
SOAP_FMAC3 xsd__ID_ * SOAP_FMAC4 soap_in_xsd__ID_(struct soap*, const char*, xsd__ID_ *, const char*);

#ifndef soap_write_xsd__ID_
#define soap_write_xsd__ID_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "xsd:ID", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__ID_ * SOAP_FMAC4 soap_get_xsd__ID_(struct soap*, xsd__ID_ *, const char*, const char*);

#ifndef soap_read_xsd__ID_
#define soap_read_xsd__ID_(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__ID_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 xsd__ID_ * SOAP_FMAC2 soap_instantiate_xsd__ID_(struct soap*, int, const char*, const char*, size_t*);

inline xsd__ID_ * soap_new_xsd__ID_(struct soap *soap, int n = -1) { return soap_instantiate_xsd__ID_(soap, n, NULL, NULL, NULL); }

inline xsd__ID_ * soap_new_req_xsd__ID_(struct soap *soap, std::string& __item) { xsd__ID_ *_p = soap_instantiate_xsd__ID_(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__ID_::__item = __item; } return _p; }

inline xsd__ID_ * soap_new_set_xsd__ID_(struct soap *soap, std::string& __item, char *__item1) { xsd__ID_ *_p = soap_instantiate_xsd__ID_(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__ID_::__item = __item; _p->xsd__anyType::__item = __item1; } return _p; }

inline void soap_delete_xsd__ID_(struct soap *soap, xsd__ID_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__ID_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__ID
#define SOAP_TYPE_xsd__ID (18)
#endif

#define soap_default_xsd__ID(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__ID(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__ID(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__ID(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__ID(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_xsd__ID
#define soap_write_xsd__ID(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__ID(soap, data),0) || soap_put_xsd__ID(soap, data, "xsd:ID", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__ID(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_xsd__ID
#define soap_read_xsd__ID(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__ID(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#define soap_instantiate_xsd__ID soap_instantiate_std__string


#define soap_copy_xsd__ID soap_copy_std__string

#ifndef SOAP_TYPE_xsd__base64Binary
#define SOAP_TYPE_xsd__base64Binary (12)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__base64Binary(struct soap*, const char*, int, const xsd__base64Binary *, const char*);
SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_in_xsd__base64Binary(struct soap*, const char*, xsd__base64Binary *, const char*);

#ifndef soap_write_xsd__base64Binary
#define soap_write_xsd__base64Binary(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "xsd:base64Binary", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_get_xsd__base64Binary(struct soap*, xsd__base64Binary *, const char*, const char*);

#ifndef soap_read_xsd__base64Binary
#define soap_read_xsd__base64Binary(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__base64Binary(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 xsd__base64Binary * SOAP_FMAC2 soap_instantiate_xsd__base64Binary(struct soap*, int, const char*, const char*, size_t*);

inline xsd__base64Binary * soap_new_xsd__base64Binary(struct soap *soap, int n = -1) { return soap_instantiate_xsd__base64Binary(soap, n, NULL, NULL, NULL); }

inline xsd__base64Binary * soap_new_req_xsd__base64Binary(struct soap *soap) { xsd__base64Binary *_p = soap_instantiate_xsd__base64Binary(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline xsd__base64Binary * soap_new_set_xsd__base64Binary(struct soap *soap, unsigned char *__ptr, int __size, char *id, char *type, char *options) { xsd__base64Binary *_p = soap_instantiate_xsd__base64Binary(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__base64Binary::__ptr = __ptr; _p->xsd__base64Binary::__size = __size; _p->xsd__base64Binary::id = id; _p->xsd__base64Binary::type = type; _p->xsd__base64Binary::options = options; } return _p; }

inline void soap_delete_xsd__base64Binary(struct soap *soap, xsd__base64Binary *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__base64Binary(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__QName
#define SOAP_TYPE_xsd__QName (11)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xsd__QName(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__QName(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__QName(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__QName(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__QName(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_xsd__QName
#define soap_write_xsd__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__QName(soap, data),0) || soap_put_xsd__QName(soap, data, "xsd:QName", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__QName(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_xsd__QName
#define soap_read_xsd__QName(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__QName(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_xsd__QName(struct soap*, int, const char*, const char*, size_t*);

inline std::string * soap_new_xsd__QName(struct soap *soap, int n = -1) { return soap_instantiate_xsd__QName(soap, n, NULL, NULL, NULL); }

inline std::string * soap_new_req_xsd__QName(struct soap *soap) { std::string *_p = soap_instantiate_xsd__QName(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_xsd__QName(soap, _p); } return _p; }

inline std::string * soap_new_set_xsd__QName(struct soap *soap) { std::string *_p = soap_instantiate_xsd__QName(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_xsd__QName(soap, _p); } return _p; }

inline void soap_delete_xsd__QName(struct soap *soap, std::string *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__QName(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (10)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_std__string
#define soap_write_std__string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_std__string(soap, data),0) || soap_put_std__string(soap, data, "string", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_std__string
#define soap_read_std__string(soap, data) ( soap_begin_recv(soap) || !soap_get_std__string(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);

inline std::string * soap_new_std__string(struct soap *soap, int n = -1) { return soap_instantiate_std__string(soap, n, NULL, NULL, NULL); }

inline std::string * soap_new_req_std__string(struct soap *soap) { std::string *_p = soap_instantiate_std__string(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_std__string(soap, _p); } return _p; }

inline std::string * soap_new_set_std__string(struct soap *soap) { std::string *_p = soap_instantiate_std__string(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_std__string(soap, _p); } return _p; }

inline void soap_delete_std__string(struct soap *soap, std::string *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__anyType
#define SOAP_TYPE_xsd__anyType (8)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__anyType(struct soap*, const char*, int, const xsd__anyType *, const char*);
SOAP_FMAC3 xsd__anyType * SOAP_FMAC4 soap_in_xsd__anyType(struct soap*, const char*, xsd__anyType *, const char*);

#ifndef soap_write_xsd__anyType
#define soap_write_xsd__anyType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "xsd:anyType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__anyType * SOAP_FMAC4 soap_get_xsd__anyType(struct soap*, xsd__anyType *, const char*, const char*);

#ifndef soap_read_xsd__anyType
#define soap_read_xsd__anyType(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__anyType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 xsd__anyType * SOAP_FMAC2 soap_instantiate_xsd__anyType(struct soap*, int, const char*, const char*, size_t*);

inline xsd__anyType * soap_new_xsd__anyType(struct soap *soap, int n = -1) { return soap_instantiate_xsd__anyType(soap, n, NULL, NULL, NULL); }

inline xsd__anyType * soap_new_req_xsd__anyType(struct soap *soap) { xsd__anyType *_p = soap_instantiate_xsd__anyType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline xsd__anyType * soap_new_set_xsd__anyType(struct soap *soap, char *__item) { xsd__anyType *_p = soap_instantiate_xsd__anyType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__anyType::__item = __item; } return _p; }

inline void soap_delete_xsd__anyType(struct soap *soap, xsd__anyType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__anyType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (300)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data),0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Fault * soap_new_SOAP_ENV__Fault(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Fault * soap_new_req_SOAP_ENV__Fault(struct soap *soap) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); } return _p; }

inline struct SOAP_ENV__Fault * soap_new_set_SOAP_ENV__Fault(struct soap *soap, char *faultcode, char *faultstring, char *faultactor, struct SOAP_ENV__Detail *detail, struct SOAP_ENV__Code *SOAP_ENV__Code, struct SOAP_ENV__Reason *SOAP_ENV__Reason, char *SOAP_ENV__Node, char *SOAP_ENV__Role, struct SOAP_ENV__Detail *SOAP_ENV__Detail) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); _p->faultcode = faultcode; _p->faultstring = faultstring; _p->faultactor = faultactor; _p->detail = detail; _p->SOAP_ENV__Code = SOAP_ENV__Code; _p->SOAP_ENV__Reason = SOAP_ENV__Reason; _p->SOAP_ENV__Node = SOAP_ENV__Node; _p->SOAP_ENV__Role = SOAP_ENV__Role; _p->SOAP_ENV__Detail = SOAP_ENV__Detail; } return _p; }

inline void soap_delete_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (299)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data),0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Reason * soap_new_SOAP_ENV__Reason(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Reason * soap_new_req_SOAP_ENV__Reason(struct soap *soap) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); } return _p; }

inline struct SOAP_ENV__Reason * soap_new_set_SOAP_ENV__Reason(struct soap *soap, char *SOAP_ENV__Text) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); _p->SOAP_ENV__Text = SOAP_ENV__Text; } return _p; }

inline void soap_delete_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (297)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data),0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Code * soap_new_SOAP_ENV__Code(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Code * soap_new_req_SOAP_ENV__Code(struct soap *soap) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); } return _p; }

inline struct SOAP_ENV__Code * soap_new_set_SOAP_ENV__Code(struct soap *soap, char *SOAP_ENV__Value, struct SOAP_ENV__Code *SOAP_ENV__Subcode) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); _p->SOAP_ENV__Value = SOAP_ENV__Value; _p->SOAP_ENV__Subcode = SOAP_ENV__Subcode; } return _p; }

inline void soap_delete_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (296)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data),0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Header * soap_new_SOAP_ENV__Header(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Header * soap_new_req_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline struct SOAP_ENV__Header * soap_new_set_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline void soap_delete_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE___ns5__ImageQuery__
#define SOAP_TYPE___ns5__ImageQuery__ (295)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns5__ImageQuery__(struct soap*, struct __ns5__ImageQuery__ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns5__ImageQuery__(struct soap*, const struct __ns5__ImageQuery__ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns5__ImageQuery__(struct soap*, const char*, int, const struct __ns5__ImageQuery__ *, const char*);
SOAP_FMAC3 struct __ns5__ImageQuery__ * SOAP_FMAC4 soap_in___ns5__ImageQuery__(struct soap*, const char*, struct __ns5__ImageQuery__ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns5__ImageQuery__(struct soap*, const struct __ns5__ImageQuery__ *, const char*, const char*);

#ifndef soap_write___ns5__ImageQuery__
#define soap_write___ns5__ImageQuery__(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns5__ImageQuery__(soap, data),0) || soap_put___ns5__ImageQuery__(soap, data, "-ns5:ImageQuery", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns5__ImageQuery__ * SOAP_FMAC4 soap_get___ns5__ImageQuery__(struct soap*, struct __ns5__ImageQuery__ *, const char*, const char*);

#ifndef soap_read___ns5__ImageQuery__
#define soap_read___ns5__ImageQuery__(soap, data) ( soap_begin_recv(soap) || !soap_get___ns5__ImageQuery__(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns5__ImageQuery__ * SOAP_FMAC2 soap_instantiate___ns5__ImageQuery__(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns5__ImageQuery__ * soap_new___ns5__ImageQuery__(struct soap *soap, int n = -1) { return soap_instantiate___ns5__ImageQuery__(soap, n, NULL, NULL, NULL); }

inline struct __ns5__ImageQuery__ * soap_new_req___ns5__ImageQuery__(struct soap *soap) { struct __ns5__ImageQuery__ *_p = soap_instantiate___ns5__ImageQuery__(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns5__ImageQuery__(soap, _p); } return _p; }

inline struct __ns5__ImageQuery__ * soap_new_set___ns5__ImageQuery__(struct soap *soap, _ns5__ImageQuery *ns5__ImageQuery) { struct __ns5__ImageQuery__ *_p = soap_instantiate___ns5__ImageQuery__(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns5__ImageQuery__(soap, _p); _p->ns5__ImageQuery = ns5__ImageQuery; } return _p; }

inline void soap_delete___ns5__ImageQuery__(struct soap *soap, struct __ns5__ImageQuery__ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns5__ImageQuery__(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns5__SeriesQuery__
#define SOAP_TYPE___ns5__SeriesQuery__ (293)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns5__SeriesQuery__(struct soap*, struct __ns5__SeriesQuery__ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns5__SeriesQuery__(struct soap*, const struct __ns5__SeriesQuery__ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns5__SeriesQuery__(struct soap*, const char*, int, const struct __ns5__SeriesQuery__ *, const char*);
SOAP_FMAC3 struct __ns5__SeriesQuery__ * SOAP_FMAC4 soap_in___ns5__SeriesQuery__(struct soap*, const char*, struct __ns5__SeriesQuery__ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns5__SeriesQuery__(struct soap*, const struct __ns5__SeriesQuery__ *, const char*, const char*);

#ifndef soap_write___ns5__SeriesQuery__
#define soap_write___ns5__SeriesQuery__(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns5__SeriesQuery__(soap, data),0) || soap_put___ns5__SeriesQuery__(soap, data, "-ns5:SeriesQuery", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns5__SeriesQuery__ * SOAP_FMAC4 soap_get___ns5__SeriesQuery__(struct soap*, struct __ns5__SeriesQuery__ *, const char*, const char*);

#ifndef soap_read___ns5__SeriesQuery__
#define soap_read___ns5__SeriesQuery__(soap, data) ( soap_begin_recv(soap) || !soap_get___ns5__SeriesQuery__(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns5__SeriesQuery__ * SOAP_FMAC2 soap_instantiate___ns5__SeriesQuery__(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns5__SeriesQuery__ * soap_new___ns5__SeriesQuery__(struct soap *soap, int n = -1) { return soap_instantiate___ns5__SeriesQuery__(soap, n, NULL, NULL, NULL); }

inline struct __ns5__SeriesQuery__ * soap_new_req___ns5__SeriesQuery__(struct soap *soap) { struct __ns5__SeriesQuery__ *_p = soap_instantiate___ns5__SeriesQuery__(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns5__SeriesQuery__(soap, _p); } return _p; }

inline struct __ns5__SeriesQuery__ * soap_new_set___ns5__SeriesQuery__(struct soap *soap, _ns5__SeriesQuery *ns5__SeriesQuery) { struct __ns5__SeriesQuery__ *_p = soap_instantiate___ns5__SeriesQuery__(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns5__SeriesQuery__(soap, _p); _p->ns5__SeriesQuery = ns5__SeriesQuery; } return _p; }

inline void soap_delete___ns5__SeriesQuery__(struct soap *soap, struct __ns5__SeriesQuery__ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns5__SeriesQuery__(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns5__StudyQuery__
#define SOAP_TYPE___ns5__StudyQuery__ (291)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns5__StudyQuery__(struct soap*, struct __ns5__StudyQuery__ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns5__StudyQuery__(struct soap*, const struct __ns5__StudyQuery__ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns5__StudyQuery__(struct soap*, const char*, int, const struct __ns5__StudyQuery__ *, const char*);
SOAP_FMAC3 struct __ns5__StudyQuery__ * SOAP_FMAC4 soap_in___ns5__StudyQuery__(struct soap*, const char*, struct __ns5__StudyQuery__ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns5__StudyQuery__(struct soap*, const struct __ns5__StudyQuery__ *, const char*, const char*);

#ifndef soap_write___ns5__StudyQuery__
#define soap_write___ns5__StudyQuery__(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns5__StudyQuery__(soap, data),0) || soap_put___ns5__StudyQuery__(soap, data, "-ns5:StudyQuery", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns5__StudyQuery__ * SOAP_FMAC4 soap_get___ns5__StudyQuery__(struct soap*, struct __ns5__StudyQuery__ *, const char*, const char*);

#ifndef soap_read___ns5__StudyQuery__
#define soap_read___ns5__StudyQuery__(soap, data) ( soap_begin_recv(soap) || !soap_get___ns5__StudyQuery__(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns5__StudyQuery__ * SOAP_FMAC2 soap_instantiate___ns5__StudyQuery__(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns5__StudyQuery__ * soap_new___ns5__StudyQuery__(struct soap *soap, int n = -1) { return soap_instantiate___ns5__StudyQuery__(soap, n, NULL, NULL, NULL); }

inline struct __ns5__StudyQuery__ * soap_new_req___ns5__StudyQuery__(struct soap *soap) { struct __ns5__StudyQuery__ *_p = soap_instantiate___ns5__StudyQuery__(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns5__StudyQuery__(soap, _p); } return _p; }

inline struct __ns5__StudyQuery__ * soap_new_set___ns5__StudyQuery__(struct soap *soap, _ns5__StudyQuery *ns5__StudyQuery) { struct __ns5__StudyQuery__ *_p = soap_instantiate___ns5__StudyQuery__(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns5__StudyQuery__(soap, _p); _p->ns5__StudyQuery = ns5__StudyQuery; } return _p; }

inline void soap_delete___ns5__StudyQuery__(struct soap *soap, struct __ns5__StudyQuery__ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns5__StudyQuery__(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns5__ImageQuery_
#define SOAP_TYPE___ns5__ImageQuery_ (289)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns5__ImageQuery_(struct soap*, struct __ns5__ImageQuery_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns5__ImageQuery_(struct soap*, const struct __ns5__ImageQuery_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns5__ImageQuery_(struct soap*, const char*, int, const struct __ns5__ImageQuery_ *, const char*);
SOAP_FMAC3 struct __ns5__ImageQuery_ * SOAP_FMAC4 soap_in___ns5__ImageQuery_(struct soap*, const char*, struct __ns5__ImageQuery_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns5__ImageQuery_(struct soap*, const struct __ns5__ImageQuery_ *, const char*, const char*);

#ifndef soap_write___ns5__ImageQuery_
#define soap_write___ns5__ImageQuery_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns5__ImageQuery_(soap, data),0) || soap_put___ns5__ImageQuery_(soap, data, "-ns5:ImageQuery", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns5__ImageQuery_ * SOAP_FMAC4 soap_get___ns5__ImageQuery_(struct soap*, struct __ns5__ImageQuery_ *, const char*, const char*);

#ifndef soap_read___ns5__ImageQuery_
#define soap_read___ns5__ImageQuery_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns5__ImageQuery_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns5__ImageQuery_ * SOAP_FMAC2 soap_instantiate___ns5__ImageQuery_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns5__ImageQuery_ * soap_new___ns5__ImageQuery_(struct soap *soap, int n = -1) { return soap_instantiate___ns5__ImageQuery_(soap, n, NULL, NULL, NULL); }

inline struct __ns5__ImageQuery_ * soap_new_req___ns5__ImageQuery_(struct soap *soap) { struct __ns5__ImageQuery_ *_p = soap_instantiate___ns5__ImageQuery_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns5__ImageQuery_(soap, _p); } return _p; }

inline struct __ns5__ImageQuery_ * soap_new_set___ns5__ImageQuery_(struct soap *soap, _ns5__ImageQuery *ns5__ImageQuery) { struct __ns5__ImageQuery_ *_p = soap_instantiate___ns5__ImageQuery_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns5__ImageQuery_(soap, _p); _p->ns5__ImageQuery = ns5__ImageQuery; } return _p; }

inline void soap_delete___ns5__ImageQuery_(struct soap *soap, struct __ns5__ImageQuery_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns5__ImageQuery_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns5__SeriesQuery_
#define SOAP_TYPE___ns5__SeriesQuery_ (287)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns5__SeriesQuery_(struct soap*, struct __ns5__SeriesQuery_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns5__SeriesQuery_(struct soap*, const struct __ns5__SeriesQuery_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns5__SeriesQuery_(struct soap*, const char*, int, const struct __ns5__SeriesQuery_ *, const char*);
SOAP_FMAC3 struct __ns5__SeriesQuery_ * SOAP_FMAC4 soap_in___ns5__SeriesQuery_(struct soap*, const char*, struct __ns5__SeriesQuery_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns5__SeriesQuery_(struct soap*, const struct __ns5__SeriesQuery_ *, const char*, const char*);

#ifndef soap_write___ns5__SeriesQuery_
#define soap_write___ns5__SeriesQuery_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns5__SeriesQuery_(soap, data),0) || soap_put___ns5__SeriesQuery_(soap, data, "-ns5:SeriesQuery", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns5__SeriesQuery_ * SOAP_FMAC4 soap_get___ns5__SeriesQuery_(struct soap*, struct __ns5__SeriesQuery_ *, const char*, const char*);

#ifndef soap_read___ns5__SeriesQuery_
#define soap_read___ns5__SeriesQuery_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns5__SeriesQuery_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns5__SeriesQuery_ * SOAP_FMAC2 soap_instantiate___ns5__SeriesQuery_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns5__SeriesQuery_ * soap_new___ns5__SeriesQuery_(struct soap *soap, int n = -1) { return soap_instantiate___ns5__SeriesQuery_(soap, n, NULL, NULL, NULL); }

inline struct __ns5__SeriesQuery_ * soap_new_req___ns5__SeriesQuery_(struct soap *soap) { struct __ns5__SeriesQuery_ *_p = soap_instantiate___ns5__SeriesQuery_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns5__SeriesQuery_(soap, _p); } return _p; }

inline struct __ns5__SeriesQuery_ * soap_new_set___ns5__SeriesQuery_(struct soap *soap, _ns5__SeriesQuery *ns5__SeriesQuery) { struct __ns5__SeriesQuery_ *_p = soap_instantiate___ns5__SeriesQuery_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns5__SeriesQuery_(soap, _p); _p->ns5__SeriesQuery = ns5__SeriesQuery; } return _p; }

inline void soap_delete___ns5__SeriesQuery_(struct soap *soap, struct __ns5__SeriesQuery_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns5__SeriesQuery_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns5__StudyQuery_
#define SOAP_TYPE___ns5__StudyQuery_ (285)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns5__StudyQuery_(struct soap*, struct __ns5__StudyQuery_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns5__StudyQuery_(struct soap*, const struct __ns5__StudyQuery_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns5__StudyQuery_(struct soap*, const char*, int, const struct __ns5__StudyQuery_ *, const char*);
SOAP_FMAC3 struct __ns5__StudyQuery_ * SOAP_FMAC4 soap_in___ns5__StudyQuery_(struct soap*, const char*, struct __ns5__StudyQuery_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns5__StudyQuery_(struct soap*, const struct __ns5__StudyQuery_ *, const char*, const char*);

#ifndef soap_write___ns5__StudyQuery_
#define soap_write___ns5__StudyQuery_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns5__StudyQuery_(soap, data),0) || soap_put___ns5__StudyQuery_(soap, data, "-ns5:StudyQuery", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns5__StudyQuery_ * SOAP_FMAC4 soap_get___ns5__StudyQuery_(struct soap*, struct __ns5__StudyQuery_ *, const char*, const char*);

#ifndef soap_read___ns5__StudyQuery_
#define soap_read___ns5__StudyQuery_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns5__StudyQuery_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns5__StudyQuery_ * SOAP_FMAC2 soap_instantiate___ns5__StudyQuery_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns5__StudyQuery_ * soap_new___ns5__StudyQuery_(struct soap *soap, int n = -1) { return soap_instantiate___ns5__StudyQuery_(soap, n, NULL, NULL, NULL); }

inline struct __ns5__StudyQuery_ * soap_new_req___ns5__StudyQuery_(struct soap *soap) { struct __ns5__StudyQuery_ *_p = soap_instantiate___ns5__StudyQuery_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns5__StudyQuery_(soap, _p); } return _p; }

inline struct __ns5__StudyQuery_ * soap_new_set___ns5__StudyQuery_(struct soap *soap, _ns5__StudyQuery *ns5__StudyQuery) { struct __ns5__StudyQuery_ *_p = soap_instantiate___ns5__StudyQuery_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns5__StudyQuery_(soap, _p); _p->ns5__StudyQuery = ns5__StudyQuery; } return _p; }

inline void soap_delete___ns5__StudyQuery_(struct soap *soap, struct __ns5__StudyQuery_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns5__StudyQuery_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns5__ImageQuery
#define SOAP_TYPE___ns5__ImageQuery (283)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns5__ImageQuery(struct soap*, struct __ns5__ImageQuery *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns5__ImageQuery(struct soap*, const struct __ns5__ImageQuery *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns5__ImageQuery(struct soap*, const char*, int, const struct __ns5__ImageQuery *, const char*);
SOAP_FMAC3 struct __ns5__ImageQuery * SOAP_FMAC4 soap_in___ns5__ImageQuery(struct soap*, const char*, struct __ns5__ImageQuery *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns5__ImageQuery(struct soap*, const struct __ns5__ImageQuery *, const char*, const char*);

#ifndef soap_write___ns5__ImageQuery
#define soap_write___ns5__ImageQuery(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns5__ImageQuery(soap, data),0) || soap_put___ns5__ImageQuery(soap, data, "-ns5:ImageQuery", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns5__ImageQuery * SOAP_FMAC4 soap_get___ns5__ImageQuery(struct soap*, struct __ns5__ImageQuery *, const char*, const char*);

#ifndef soap_read___ns5__ImageQuery
#define soap_read___ns5__ImageQuery(soap, data) ( soap_begin_recv(soap) || !soap_get___ns5__ImageQuery(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns5__ImageQuery * SOAP_FMAC2 soap_instantiate___ns5__ImageQuery(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns5__ImageQuery * soap_new___ns5__ImageQuery(struct soap *soap, int n = -1) { return soap_instantiate___ns5__ImageQuery(soap, n, NULL, NULL, NULL); }

inline struct __ns5__ImageQuery * soap_new_req___ns5__ImageQuery(struct soap *soap) { struct __ns5__ImageQuery *_p = soap_instantiate___ns5__ImageQuery(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns5__ImageQuery(soap, _p); } return _p; }

inline struct __ns5__ImageQuery * soap_new_set___ns5__ImageQuery(struct soap *soap, _ns5__ImageQuery *ns5__ImageQuery) { struct __ns5__ImageQuery *_p = soap_instantiate___ns5__ImageQuery(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns5__ImageQuery(soap, _p); _p->ns5__ImageQuery = ns5__ImageQuery; } return _p; }

inline void soap_delete___ns5__ImageQuery(struct soap *soap, struct __ns5__ImageQuery *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns5__ImageQuery(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns5__SeriesQuery
#define SOAP_TYPE___ns5__SeriesQuery (279)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns5__SeriesQuery(struct soap*, struct __ns5__SeriesQuery *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns5__SeriesQuery(struct soap*, const struct __ns5__SeriesQuery *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns5__SeriesQuery(struct soap*, const char*, int, const struct __ns5__SeriesQuery *, const char*);
SOAP_FMAC3 struct __ns5__SeriesQuery * SOAP_FMAC4 soap_in___ns5__SeriesQuery(struct soap*, const char*, struct __ns5__SeriesQuery *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns5__SeriesQuery(struct soap*, const struct __ns5__SeriesQuery *, const char*, const char*);

#ifndef soap_write___ns5__SeriesQuery
#define soap_write___ns5__SeriesQuery(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns5__SeriesQuery(soap, data),0) || soap_put___ns5__SeriesQuery(soap, data, "-ns5:SeriesQuery", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns5__SeriesQuery * SOAP_FMAC4 soap_get___ns5__SeriesQuery(struct soap*, struct __ns5__SeriesQuery *, const char*, const char*);

#ifndef soap_read___ns5__SeriesQuery
#define soap_read___ns5__SeriesQuery(soap, data) ( soap_begin_recv(soap) || !soap_get___ns5__SeriesQuery(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns5__SeriesQuery * SOAP_FMAC2 soap_instantiate___ns5__SeriesQuery(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns5__SeriesQuery * soap_new___ns5__SeriesQuery(struct soap *soap, int n = -1) { return soap_instantiate___ns5__SeriesQuery(soap, n, NULL, NULL, NULL); }

inline struct __ns5__SeriesQuery * soap_new_req___ns5__SeriesQuery(struct soap *soap) { struct __ns5__SeriesQuery *_p = soap_instantiate___ns5__SeriesQuery(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns5__SeriesQuery(soap, _p); } return _p; }

inline struct __ns5__SeriesQuery * soap_new_set___ns5__SeriesQuery(struct soap *soap, _ns5__SeriesQuery *ns5__SeriesQuery) { struct __ns5__SeriesQuery *_p = soap_instantiate___ns5__SeriesQuery(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns5__SeriesQuery(soap, _p); _p->ns5__SeriesQuery = ns5__SeriesQuery; } return _p; }

inline void soap_delete___ns5__SeriesQuery(struct soap *soap, struct __ns5__SeriesQuery *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns5__SeriesQuery(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns5__StudyQuery
#define SOAP_TYPE___ns5__StudyQuery (275)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns5__StudyQuery(struct soap*, struct __ns5__StudyQuery *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns5__StudyQuery(struct soap*, const struct __ns5__StudyQuery *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns5__StudyQuery(struct soap*, const char*, int, const struct __ns5__StudyQuery *, const char*);
SOAP_FMAC3 struct __ns5__StudyQuery * SOAP_FMAC4 soap_in___ns5__StudyQuery(struct soap*, const char*, struct __ns5__StudyQuery *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns5__StudyQuery(struct soap*, const struct __ns5__StudyQuery *, const char*, const char*);

#ifndef soap_write___ns5__StudyQuery
#define soap_write___ns5__StudyQuery(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns5__StudyQuery(soap, data),0) || soap_put___ns5__StudyQuery(soap, data, "-ns5:StudyQuery", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns5__StudyQuery * SOAP_FMAC4 soap_get___ns5__StudyQuery(struct soap*, struct __ns5__StudyQuery *, const char*, const char*);

#ifndef soap_read___ns5__StudyQuery
#define soap_read___ns5__StudyQuery(soap, data) ( soap_begin_recv(soap) || !soap_get___ns5__StudyQuery(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns5__StudyQuery * SOAP_FMAC2 soap_instantiate___ns5__StudyQuery(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns5__StudyQuery * soap_new___ns5__StudyQuery(struct soap *soap, int n = -1) { return soap_instantiate___ns5__StudyQuery(soap, n, NULL, NULL, NULL); }

inline struct __ns5__StudyQuery * soap_new_req___ns5__StudyQuery(struct soap *soap) { struct __ns5__StudyQuery *_p = soap_instantiate___ns5__StudyQuery(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns5__StudyQuery(soap, _p); } return _p; }

inline struct __ns5__StudyQuery * soap_new_set___ns5__StudyQuery(struct soap *soap, _ns5__StudyQuery *ns5__StudyQuery) { struct __ns5__StudyQuery *_p = soap_instantiate___ns5__StudyQuery(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns5__StudyQuery(soap, _p); _p->ns5__StudyQuery = ns5__StudyQuery; } return _p; }

inline void soap_delete___ns5__StudyQuery(struct soap *soap, struct __ns5__StudyQuery *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns5__StudyQuery(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns2__CloseViewer__
#define SOAP_TYPE___ns2__CloseViewer__ (271)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns2__CloseViewer__(struct soap*, struct __ns2__CloseViewer__ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns2__CloseViewer__(struct soap*, const struct __ns2__CloseViewer__ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns2__CloseViewer__(struct soap*, const char*, int, const struct __ns2__CloseViewer__ *, const char*);
SOAP_FMAC3 struct __ns2__CloseViewer__ * SOAP_FMAC4 soap_in___ns2__CloseViewer__(struct soap*, const char*, struct __ns2__CloseViewer__ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns2__CloseViewer__(struct soap*, const struct __ns2__CloseViewer__ *, const char*, const char*);

#ifndef soap_write___ns2__CloseViewer__
#define soap_write___ns2__CloseViewer__(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns2__CloseViewer__(soap, data),0) || soap_put___ns2__CloseViewer__(soap, data, "-ns2:CloseViewer", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns2__CloseViewer__ * SOAP_FMAC4 soap_get___ns2__CloseViewer__(struct soap*, struct __ns2__CloseViewer__ *, const char*, const char*);

#ifndef soap_read___ns2__CloseViewer__
#define soap_read___ns2__CloseViewer__(soap, data) ( soap_begin_recv(soap) || !soap_get___ns2__CloseViewer__(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns2__CloseViewer__ * SOAP_FMAC2 soap_instantiate___ns2__CloseViewer__(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns2__CloseViewer__ * soap_new___ns2__CloseViewer__(struct soap *soap, int n = -1) { return soap_instantiate___ns2__CloseViewer__(soap, n, NULL, NULL, NULL); }

inline struct __ns2__CloseViewer__ * soap_new_req___ns2__CloseViewer__(struct soap *soap) { struct __ns2__CloseViewer__ *_p = soap_instantiate___ns2__CloseViewer__(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns2__CloseViewer__(soap, _p); } return _p; }

inline struct __ns2__CloseViewer__ * soap_new_set___ns2__CloseViewer__(struct soap *soap, _ns2__CloseViewer *ns2__CloseViewer) { struct __ns2__CloseViewer__ *_p = soap_instantiate___ns2__CloseViewer__(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns2__CloseViewer__(soap, _p); _p->ns2__CloseViewer = ns2__CloseViewer; } return _p; }

inline void soap_delete___ns2__CloseViewer__(struct soap *soap, struct __ns2__CloseViewer__ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns2__CloseViewer__(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns2__ActivateViewer__
#define SOAP_TYPE___ns2__ActivateViewer__ (269)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns2__ActivateViewer__(struct soap*, struct __ns2__ActivateViewer__ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns2__ActivateViewer__(struct soap*, const struct __ns2__ActivateViewer__ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns2__ActivateViewer__(struct soap*, const char*, int, const struct __ns2__ActivateViewer__ *, const char*);
SOAP_FMAC3 struct __ns2__ActivateViewer__ * SOAP_FMAC4 soap_in___ns2__ActivateViewer__(struct soap*, const char*, struct __ns2__ActivateViewer__ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns2__ActivateViewer__(struct soap*, const struct __ns2__ActivateViewer__ *, const char*, const char*);

#ifndef soap_write___ns2__ActivateViewer__
#define soap_write___ns2__ActivateViewer__(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns2__ActivateViewer__(soap, data),0) || soap_put___ns2__ActivateViewer__(soap, data, "-ns2:ActivateViewer", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns2__ActivateViewer__ * SOAP_FMAC4 soap_get___ns2__ActivateViewer__(struct soap*, struct __ns2__ActivateViewer__ *, const char*, const char*);

#ifndef soap_read___ns2__ActivateViewer__
#define soap_read___ns2__ActivateViewer__(soap, data) ( soap_begin_recv(soap) || !soap_get___ns2__ActivateViewer__(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns2__ActivateViewer__ * SOAP_FMAC2 soap_instantiate___ns2__ActivateViewer__(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns2__ActivateViewer__ * soap_new___ns2__ActivateViewer__(struct soap *soap, int n = -1) { return soap_instantiate___ns2__ActivateViewer__(soap, n, NULL, NULL, NULL); }

inline struct __ns2__ActivateViewer__ * soap_new_req___ns2__ActivateViewer__(struct soap *soap) { struct __ns2__ActivateViewer__ *_p = soap_instantiate___ns2__ActivateViewer__(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns2__ActivateViewer__(soap, _p); } return _p; }

inline struct __ns2__ActivateViewer__ * soap_new_set___ns2__ActivateViewer__(struct soap *soap, _ns2__ActivateViewer *ns2__ActivateViewer) { struct __ns2__ActivateViewer__ *_p = soap_instantiate___ns2__ActivateViewer__(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns2__ActivateViewer__(soap, _p); _p->ns2__ActivateViewer = ns2__ActivateViewer; } return _p; }

inline void soap_delete___ns2__ActivateViewer__(struct soap *soap, struct __ns2__ActivateViewer__ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns2__ActivateViewer__(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns2__OpenStudies__
#define SOAP_TYPE___ns2__OpenStudies__ (267)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns2__OpenStudies__(struct soap*, struct __ns2__OpenStudies__ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns2__OpenStudies__(struct soap*, const struct __ns2__OpenStudies__ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns2__OpenStudies__(struct soap*, const char*, int, const struct __ns2__OpenStudies__ *, const char*);
SOAP_FMAC3 struct __ns2__OpenStudies__ * SOAP_FMAC4 soap_in___ns2__OpenStudies__(struct soap*, const char*, struct __ns2__OpenStudies__ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns2__OpenStudies__(struct soap*, const struct __ns2__OpenStudies__ *, const char*, const char*);

#ifndef soap_write___ns2__OpenStudies__
#define soap_write___ns2__OpenStudies__(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns2__OpenStudies__(soap, data),0) || soap_put___ns2__OpenStudies__(soap, data, "-ns2:OpenStudies", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns2__OpenStudies__ * SOAP_FMAC4 soap_get___ns2__OpenStudies__(struct soap*, struct __ns2__OpenStudies__ *, const char*, const char*);

#ifndef soap_read___ns2__OpenStudies__
#define soap_read___ns2__OpenStudies__(soap, data) ( soap_begin_recv(soap) || !soap_get___ns2__OpenStudies__(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns2__OpenStudies__ * SOAP_FMAC2 soap_instantiate___ns2__OpenStudies__(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns2__OpenStudies__ * soap_new___ns2__OpenStudies__(struct soap *soap, int n = -1) { return soap_instantiate___ns2__OpenStudies__(soap, n, NULL, NULL, NULL); }

inline struct __ns2__OpenStudies__ * soap_new_req___ns2__OpenStudies__(struct soap *soap) { struct __ns2__OpenStudies__ *_p = soap_instantiate___ns2__OpenStudies__(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns2__OpenStudies__(soap, _p); } return _p; }

inline struct __ns2__OpenStudies__ * soap_new_set___ns2__OpenStudies__(struct soap *soap, _ns2__OpenStudies *ns2__OpenStudies) { struct __ns2__OpenStudies__ *_p = soap_instantiate___ns2__OpenStudies__(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns2__OpenStudies__(soap, _p); _p->ns2__OpenStudies = ns2__OpenStudies; } return _p; }

inline void soap_delete___ns2__OpenStudies__(struct soap *soap, struct __ns2__OpenStudies__ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns2__OpenStudies__(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns2__GetViewerInfo__
#define SOAP_TYPE___ns2__GetViewerInfo__ (265)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns2__GetViewerInfo__(struct soap*, struct __ns2__GetViewerInfo__ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns2__GetViewerInfo__(struct soap*, const struct __ns2__GetViewerInfo__ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns2__GetViewerInfo__(struct soap*, const char*, int, const struct __ns2__GetViewerInfo__ *, const char*);
SOAP_FMAC3 struct __ns2__GetViewerInfo__ * SOAP_FMAC4 soap_in___ns2__GetViewerInfo__(struct soap*, const char*, struct __ns2__GetViewerInfo__ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns2__GetViewerInfo__(struct soap*, const struct __ns2__GetViewerInfo__ *, const char*, const char*);

#ifndef soap_write___ns2__GetViewerInfo__
#define soap_write___ns2__GetViewerInfo__(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns2__GetViewerInfo__(soap, data),0) || soap_put___ns2__GetViewerInfo__(soap, data, "-ns2:GetViewerInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns2__GetViewerInfo__ * SOAP_FMAC4 soap_get___ns2__GetViewerInfo__(struct soap*, struct __ns2__GetViewerInfo__ *, const char*, const char*);

#ifndef soap_read___ns2__GetViewerInfo__
#define soap_read___ns2__GetViewerInfo__(soap, data) ( soap_begin_recv(soap) || !soap_get___ns2__GetViewerInfo__(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns2__GetViewerInfo__ * SOAP_FMAC2 soap_instantiate___ns2__GetViewerInfo__(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns2__GetViewerInfo__ * soap_new___ns2__GetViewerInfo__(struct soap *soap, int n = -1) { return soap_instantiate___ns2__GetViewerInfo__(soap, n, NULL, NULL, NULL); }

inline struct __ns2__GetViewerInfo__ * soap_new_req___ns2__GetViewerInfo__(struct soap *soap) { struct __ns2__GetViewerInfo__ *_p = soap_instantiate___ns2__GetViewerInfo__(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns2__GetViewerInfo__(soap, _p); } return _p; }

inline struct __ns2__GetViewerInfo__ * soap_new_set___ns2__GetViewerInfo__(struct soap *soap, _ns2__GetViewerInfo *ns2__GetViewerInfo) { struct __ns2__GetViewerInfo__ *_p = soap_instantiate___ns2__GetViewerInfo__(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns2__GetViewerInfo__(soap, _p); _p->ns2__GetViewerInfo = ns2__GetViewerInfo; } return _p; }

inline void soap_delete___ns2__GetViewerInfo__(struct soap *soap, struct __ns2__GetViewerInfo__ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns2__GetViewerInfo__(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns2__GetActiveViewers__
#define SOAP_TYPE___ns2__GetActiveViewers__ (263)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns2__GetActiveViewers__(struct soap*, struct __ns2__GetActiveViewers__ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns2__GetActiveViewers__(struct soap*, const struct __ns2__GetActiveViewers__ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns2__GetActiveViewers__(struct soap*, const char*, int, const struct __ns2__GetActiveViewers__ *, const char*);
SOAP_FMAC3 struct __ns2__GetActiveViewers__ * SOAP_FMAC4 soap_in___ns2__GetActiveViewers__(struct soap*, const char*, struct __ns2__GetActiveViewers__ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns2__GetActiveViewers__(struct soap*, const struct __ns2__GetActiveViewers__ *, const char*, const char*);

#ifndef soap_write___ns2__GetActiveViewers__
#define soap_write___ns2__GetActiveViewers__(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns2__GetActiveViewers__(soap, data),0) || soap_put___ns2__GetActiveViewers__(soap, data, "-ns2:GetActiveViewers", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns2__GetActiveViewers__ * SOAP_FMAC4 soap_get___ns2__GetActiveViewers__(struct soap*, struct __ns2__GetActiveViewers__ *, const char*, const char*);

#ifndef soap_read___ns2__GetActiveViewers__
#define soap_read___ns2__GetActiveViewers__(soap, data) ( soap_begin_recv(soap) || !soap_get___ns2__GetActiveViewers__(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns2__GetActiveViewers__ * SOAP_FMAC2 soap_instantiate___ns2__GetActiveViewers__(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns2__GetActiveViewers__ * soap_new___ns2__GetActiveViewers__(struct soap *soap, int n = -1) { return soap_instantiate___ns2__GetActiveViewers__(soap, n, NULL, NULL, NULL); }

inline struct __ns2__GetActiveViewers__ * soap_new_req___ns2__GetActiveViewers__(struct soap *soap) { struct __ns2__GetActiveViewers__ *_p = soap_instantiate___ns2__GetActiveViewers__(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns2__GetActiveViewers__(soap, _p); } return _p; }

inline struct __ns2__GetActiveViewers__ * soap_new_set___ns2__GetActiveViewers__(struct soap *soap, _ns2__GetActiveViewers *ns2__GetActiveViewers) { struct __ns2__GetActiveViewers__ *_p = soap_instantiate___ns2__GetActiveViewers__(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns2__GetActiveViewers__(soap, _p); _p->ns2__GetActiveViewers = ns2__GetActiveViewers; } return _p; }

inline void soap_delete___ns2__GetActiveViewers__(struct soap *soap, struct __ns2__GetActiveViewers__ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns2__GetActiveViewers__(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns2__GetViewers__
#define SOAP_TYPE___ns2__GetViewers__ (261)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns2__GetViewers__(struct soap*, struct __ns2__GetViewers__ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns2__GetViewers__(struct soap*, const struct __ns2__GetViewers__ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns2__GetViewers__(struct soap*, const char*, int, const struct __ns2__GetViewers__ *, const char*);
SOAP_FMAC3 struct __ns2__GetViewers__ * SOAP_FMAC4 soap_in___ns2__GetViewers__(struct soap*, const char*, struct __ns2__GetViewers__ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns2__GetViewers__(struct soap*, const struct __ns2__GetViewers__ *, const char*, const char*);

#ifndef soap_write___ns2__GetViewers__
#define soap_write___ns2__GetViewers__(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns2__GetViewers__(soap, data),0) || soap_put___ns2__GetViewers__(soap, data, "-ns2:GetViewers", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns2__GetViewers__ * SOAP_FMAC4 soap_get___ns2__GetViewers__(struct soap*, struct __ns2__GetViewers__ *, const char*, const char*);

#ifndef soap_read___ns2__GetViewers__
#define soap_read___ns2__GetViewers__(soap, data) ( soap_begin_recv(soap) || !soap_get___ns2__GetViewers__(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns2__GetViewers__ * SOAP_FMAC2 soap_instantiate___ns2__GetViewers__(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns2__GetViewers__ * soap_new___ns2__GetViewers__(struct soap *soap, int n = -1) { return soap_instantiate___ns2__GetViewers__(soap, n, NULL, NULL, NULL); }

inline struct __ns2__GetViewers__ * soap_new_req___ns2__GetViewers__(struct soap *soap) { struct __ns2__GetViewers__ *_p = soap_instantiate___ns2__GetViewers__(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns2__GetViewers__(soap, _p); } return _p; }

inline struct __ns2__GetViewers__ * soap_new_set___ns2__GetViewers__(struct soap *soap, _ns2__GetViewers *ns2__GetViewers) { struct __ns2__GetViewers__ *_p = soap_instantiate___ns2__GetViewers__(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns2__GetViewers__(soap, _p); _p->ns2__GetViewers = ns2__GetViewers; } return _p; }

inline void soap_delete___ns2__GetViewers__(struct soap *soap, struct __ns2__GetViewers__ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns2__GetViewers__(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns2__OpenFiles__
#define SOAP_TYPE___ns2__OpenFiles__ (259)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns2__OpenFiles__(struct soap*, struct __ns2__OpenFiles__ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns2__OpenFiles__(struct soap*, const struct __ns2__OpenFiles__ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns2__OpenFiles__(struct soap*, const char*, int, const struct __ns2__OpenFiles__ *, const char*);
SOAP_FMAC3 struct __ns2__OpenFiles__ * SOAP_FMAC4 soap_in___ns2__OpenFiles__(struct soap*, const char*, struct __ns2__OpenFiles__ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns2__OpenFiles__(struct soap*, const struct __ns2__OpenFiles__ *, const char*, const char*);

#ifndef soap_write___ns2__OpenFiles__
#define soap_write___ns2__OpenFiles__(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns2__OpenFiles__(soap, data),0) || soap_put___ns2__OpenFiles__(soap, data, "-ns2:OpenFiles", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns2__OpenFiles__ * SOAP_FMAC4 soap_get___ns2__OpenFiles__(struct soap*, struct __ns2__OpenFiles__ *, const char*, const char*);

#ifndef soap_read___ns2__OpenFiles__
#define soap_read___ns2__OpenFiles__(soap, data) ( soap_begin_recv(soap) || !soap_get___ns2__OpenFiles__(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns2__OpenFiles__ * SOAP_FMAC2 soap_instantiate___ns2__OpenFiles__(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns2__OpenFiles__ * soap_new___ns2__OpenFiles__(struct soap *soap, int n = -1) { return soap_instantiate___ns2__OpenFiles__(soap, n, NULL, NULL, NULL); }

inline struct __ns2__OpenFiles__ * soap_new_req___ns2__OpenFiles__(struct soap *soap) { struct __ns2__OpenFiles__ *_p = soap_instantiate___ns2__OpenFiles__(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns2__OpenFiles__(soap, _p); } return _p; }

inline struct __ns2__OpenFiles__ * soap_new_set___ns2__OpenFiles__(struct soap *soap, _ns2__OpenFiles *ns2__OpenFiles) { struct __ns2__OpenFiles__ *_p = soap_instantiate___ns2__OpenFiles__(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns2__OpenFiles__(soap, _p); _p->ns2__OpenFiles = ns2__OpenFiles; } return _p; }

inline void soap_delete___ns2__OpenFiles__(struct soap *soap, struct __ns2__OpenFiles__ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns2__OpenFiles__(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns2__CloseViewer_
#define SOAP_TYPE___ns2__CloseViewer_ (257)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns2__CloseViewer_(struct soap*, struct __ns2__CloseViewer_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns2__CloseViewer_(struct soap*, const struct __ns2__CloseViewer_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns2__CloseViewer_(struct soap*, const char*, int, const struct __ns2__CloseViewer_ *, const char*);
SOAP_FMAC3 struct __ns2__CloseViewer_ * SOAP_FMAC4 soap_in___ns2__CloseViewer_(struct soap*, const char*, struct __ns2__CloseViewer_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns2__CloseViewer_(struct soap*, const struct __ns2__CloseViewer_ *, const char*, const char*);

#ifndef soap_write___ns2__CloseViewer_
#define soap_write___ns2__CloseViewer_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns2__CloseViewer_(soap, data),0) || soap_put___ns2__CloseViewer_(soap, data, "-ns2:CloseViewer", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns2__CloseViewer_ * SOAP_FMAC4 soap_get___ns2__CloseViewer_(struct soap*, struct __ns2__CloseViewer_ *, const char*, const char*);

#ifndef soap_read___ns2__CloseViewer_
#define soap_read___ns2__CloseViewer_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns2__CloseViewer_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns2__CloseViewer_ * SOAP_FMAC2 soap_instantiate___ns2__CloseViewer_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns2__CloseViewer_ * soap_new___ns2__CloseViewer_(struct soap *soap, int n = -1) { return soap_instantiate___ns2__CloseViewer_(soap, n, NULL, NULL, NULL); }

inline struct __ns2__CloseViewer_ * soap_new_req___ns2__CloseViewer_(struct soap *soap) { struct __ns2__CloseViewer_ *_p = soap_instantiate___ns2__CloseViewer_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns2__CloseViewer_(soap, _p); } return _p; }

inline struct __ns2__CloseViewer_ * soap_new_set___ns2__CloseViewer_(struct soap *soap, _ns2__CloseViewer *ns2__CloseViewer) { struct __ns2__CloseViewer_ *_p = soap_instantiate___ns2__CloseViewer_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns2__CloseViewer_(soap, _p); _p->ns2__CloseViewer = ns2__CloseViewer; } return _p; }

inline void soap_delete___ns2__CloseViewer_(struct soap *soap, struct __ns2__CloseViewer_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns2__CloseViewer_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns2__ActivateViewer_
#define SOAP_TYPE___ns2__ActivateViewer_ (255)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns2__ActivateViewer_(struct soap*, struct __ns2__ActivateViewer_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns2__ActivateViewer_(struct soap*, const struct __ns2__ActivateViewer_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns2__ActivateViewer_(struct soap*, const char*, int, const struct __ns2__ActivateViewer_ *, const char*);
SOAP_FMAC3 struct __ns2__ActivateViewer_ * SOAP_FMAC4 soap_in___ns2__ActivateViewer_(struct soap*, const char*, struct __ns2__ActivateViewer_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns2__ActivateViewer_(struct soap*, const struct __ns2__ActivateViewer_ *, const char*, const char*);

#ifndef soap_write___ns2__ActivateViewer_
#define soap_write___ns2__ActivateViewer_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns2__ActivateViewer_(soap, data),0) || soap_put___ns2__ActivateViewer_(soap, data, "-ns2:ActivateViewer", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns2__ActivateViewer_ * SOAP_FMAC4 soap_get___ns2__ActivateViewer_(struct soap*, struct __ns2__ActivateViewer_ *, const char*, const char*);

#ifndef soap_read___ns2__ActivateViewer_
#define soap_read___ns2__ActivateViewer_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns2__ActivateViewer_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns2__ActivateViewer_ * SOAP_FMAC2 soap_instantiate___ns2__ActivateViewer_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns2__ActivateViewer_ * soap_new___ns2__ActivateViewer_(struct soap *soap, int n = -1) { return soap_instantiate___ns2__ActivateViewer_(soap, n, NULL, NULL, NULL); }

inline struct __ns2__ActivateViewer_ * soap_new_req___ns2__ActivateViewer_(struct soap *soap) { struct __ns2__ActivateViewer_ *_p = soap_instantiate___ns2__ActivateViewer_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns2__ActivateViewer_(soap, _p); } return _p; }

inline struct __ns2__ActivateViewer_ * soap_new_set___ns2__ActivateViewer_(struct soap *soap, _ns2__ActivateViewer *ns2__ActivateViewer) { struct __ns2__ActivateViewer_ *_p = soap_instantiate___ns2__ActivateViewer_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns2__ActivateViewer_(soap, _p); _p->ns2__ActivateViewer = ns2__ActivateViewer; } return _p; }

inline void soap_delete___ns2__ActivateViewer_(struct soap *soap, struct __ns2__ActivateViewer_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns2__ActivateViewer_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns2__OpenStudies_
#define SOAP_TYPE___ns2__OpenStudies_ (253)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns2__OpenStudies_(struct soap*, struct __ns2__OpenStudies_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns2__OpenStudies_(struct soap*, const struct __ns2__OpenStudies_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns2__OpenStudies_(struct soap*, const char*, int, const struct __ns2__OpenStudies_ *, const char*);
SOAP_FMAC3 struct __ns2__OpenStudies_ * SOAP_FMAC4 soap_in___ns2__OpenStudies_(struct soap*, const char*, struct __ns2__OpenStudies_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns2__OpenStudies_(struct soap*, const struct __ns2__OpenStudies_ *, const char*, const char*);

#ifndef soap_write___ns2__OpenStudies_
#define soap_write___ns2__OpenStudies_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns2__OpenStudies_(soap, data),0) || soap_put___ns2__OpenStudies_(soap, data, "-ns2:OpenStudies", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns2__OpenStudies_ * SOAP_FMAC4 soap_get___ns2__OpenStudies_(struct soap*, struct __ns2__OpenStudies_ *, const char*, const char*);

#ifndef soap_read___ns2__OpenStudies_
#define soap_read___ns2__OpenStudies_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns2__OpenStudies_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns2__OpenStudies_ * SOAP_FMAC2 soap_instantiate___ns2__OpenStudies_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns2__OpenStudies_ * soap_new___ns2__OpenStudies_(struct soap *soap, int n = -1) { return soap_instantiate___ns2__OpenStudies_(soap, n, NULL, NULL, NULL); }

inline struct __ns2__OpenStudies_ * soap_new_req___ns2__OpenStudies_(struct soap *soap) { struct __ns2__OpenStudies_ *_p = soap_instantiate___ns2__OpenStudies_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns2__OpenStudies_(soap, _p); } return _p; }

inline struct __ns2__OpenStudies_ * soap_new_set___ns2__OpenStudies_(struct soap *soap, _ns2__OpenStudies *ns2__OpenStudies) { struct __ns2__OpenStudies_ *_p = soap_instantiate___ns2__OpenStudies_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns2__OpenStudies_(soap, _p); _p->ns2__OpenStudies = ns2__OpenStudies; } return _p; }

inline void soap_delete___ns2__OpenStudies_(struct soap *soap, struct __ns2__OpenStudies_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns2__OpenStudies_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns2__GetViewerInfo_
#define SOAP_TYPE___ns2__GetViewerInfo_ (251)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns2__GetViewerInfo_(struct soap*, struct __ns2__GetViewerInfo_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns2__GetViewerInfo_(struct soap*, const struct __ns2__GetViewerInfo_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns2__GetViewerInfo_(struct soap*, const char*, int, const struct __ns2__GetViewerInfo_ *, const char*);
SOAP_FMAC3 struct __ns2__GetViewerInfo_ * SOAP_FMAC4 soap_in___ns2__GetViewerInfo_(struct soap*, const char*, struct __ns2__GetViewerInfo_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns2__GetViewerInfo_(struct soap*, const struct __ns2__GetViewerInfo_ *, const char*, const char*);

#ifndef soap_write___ns2__GetViewerInfo_
#define soap_write___ns2__GetViewerInfo_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns2__GetViewerInfo_(soap, data),0) || soap_put___ns2__GetViewerInfo_(soap, data, "-ns2:GetViewerInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns2__GetViewerInfo_ * SOAP_FMAC4 soap_get___ns2__GetViewerInfo_(struct soap*, struct __ns2__GetViewerInfo_ *, const char*, const char*);

#ifndef soap_read___ns2__GetViewerInfo_
#define soap_read___ns2__GetViewerInfo_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns2__GetViewerInfo_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns2__GetViewerInfo_ * SOAP_FMAC2 soap_instantiate___ns2__GetViewerInfo_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns2__GetViewerInfo_ * soap_new___ns2__GetViewerInfo_(struct soap *soap, int n = -1) { return soap_instantiate___ns2__GetViewerInfo_(soap, n, NULL, NULL, NULL); }

inline struct __ns2__GetViewerInfo_ * soap_new_req___ns2__GetViewerInfo_(struct soap *soap) { struct __ns2__GetViewerInfo_ *_p = soap_instantiate___ns2__GetViewerInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns2__GetViewerInfo_(soap, _p); } return _p; }

inline struct __ns2__GetViewerInfo_ * soap_new_set___ns2__GetViewerInfo_(struct soap *soap, _ns2__GetViewerInfo *ns2__GetViewerInfo) { struct __ns2__GetViewerInfo_ *_p = soap_instantiate___ns2__GetViewerInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns2__GetViewerInfo_(soap, _p); _p->ns2__GetViewerInfo = ns2__GetViewerInfo; } return _p; }

inline void soap_delete___ns2__GetViewerInfo_(struct soap *soap, struct __ns2__GetViewerInfo_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns2__GetViewerInfo_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns2__GetActiveViewers_
#define SOAP_TYPE___ns2__GetActiveViewers_ (249)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns2__GetActiveViewers_(struct soap*, struct __ns2__GetActiveViewers_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns2__GetActiveViewers_(struct soap*, const struct __ns2__GetActiveViewers_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns2__GetActiveViewers_(struct soap*, const char*, int, const struct __ns2__GetActiveViewers_ *, const char*);
SOAP_FMAC3 struct __ns2__GetActiveViewers_ * SOAP_FMAC4 soap_in___ns2__GetActiveViewers_(struct soap*, const char*, struct __ns2__GetActiveViewers_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns2__GetActiveViewers_(struct soap*, const struct __ns2__GetActiveViewers_ *, const char*, const char*);

#ifndef soap_write___ns2__GetActiveViewers_
#define soap_write___ns2__GetActiveViewers_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns2__GetActiveViewers_(soap, data),0) || soap_put___ns2__GetActiveViewers_(soap, data, "-ns2:GetActiveViewers", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns2__GetActiveViewers_ * SOAP_FMAC4 soap_get___ns2__GetActiveViewers_(struct soap*, struct __ns2__GetActiveViewers_ *, const char*, const char*);

#ifndef soap_read___ns2__GetActiveViewers_
#define soap_read___ns2__GetActiveViewers_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns2__GetActiveViewers_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns2__GetActiveViewers_ * SOAP_FMAC2 soap_instantiate___ns2__GetActiveViewers_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns2__GetActiveViewers_ * soap_new___ns2__GetActiveViewers_(struct soap *soap, int n = -1) { return soap_instantiate___ns2__GetActiveViewers_(soap, n, NULL, NULL, NULL); }

inline struct __ns2__GetActiveViewers_ * soap_new_req___ns2__GetActiveViewers_(struct soap *soap) { struct __ns2__GetActiveViewers_ *_p = soap_instantiate___ns2__GetActiveViewers_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns2__GetActiveViewers_(soap, _p); } return _p; }

inline struct __ns2__GetActiveViewers_ * soap_new_set___ns2__GetActiveViewers_(struct soap *soap, _ns2__GetActiveViewers *ns2__GetActiveViewers) { struct __ns2__GetActiveViewers_ *_p = soap_instantiate___ns2__GetActiveViewers_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns2__GetActiveViewers_(soap, _p); _p->ns2__GetActiveViewers = ns2__GetActiveViewers; } return _p; }

inline void soap_delete___ns2__GetActiveViewers_(struct soap *soap, struct __ns2__GetActiveViewers_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns2__GetActiveViewers_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns2__GetViewers_
#define SOAP_TYPE___ns2__GetViewers_ (247)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns2__GetViewers_(struct soap*, struct __ns2__GetViewers_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns2__GetViewers_(struct soap*, const struct __ns2__GetViewers_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns2__GetViewers_(struct soap*, const char*, int, const struct __ns2__GetViewers_ *, const char*);
SOAP_FMAC3 struct __ns2__GetViewers_ * SOAP_FMAC4 soap_in___ns2__GetViewers_(struct soap*, const char*, struct __ns2__GetViewers_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns2__GetViewers_(struct soap*, const struct __ns2__GetViewers_ *, const char*, const char*);

#ifndef soap_write___ns2__GetViewers_
#define soap_write___ns2__GetViewers_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns2__GetViewers_(soap, data),0) || soap_put___ns2__GetViewers_(soap, data, "-ns2:GetViewers", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns2__GetViewers_ * SOAP_FMAC4 soap_get___ns2__GetViewers_(struct soap*, struct __ns2__GetViewers_ *, const char*, const char*);

#ifndef soap_read___ns2__GetViewers_
#define soap_read___ns2__GetViewers_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns2__GetViewers_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns2__GetViewers_ * SOAP_FMAC2 soap_instantiate___ns2__GetViewers_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns2__GetViewers_ * soap_new___ns2__GetViewers_(struct soap *soap, int n = -1) { return soap_instantiate___ns2__GetViewers_(soap, n, NULL, NULL, NULL); }

inline struct __ns2__GetViewers_ * soap_new_req___ns2__GetViewers_(struct soap *soap) { struct __ns2__GetViewers_ *_p = soap_instantiate___ns2__GetViewers_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns2__GetViewers_(soap, _p); } return _p; }

inline struct __ns2__GetViewers_ * soap_new_set___ns2__GetViewers_(struct soap *soap, _ns2__GetViewers *ns2__GetViewers) { struct __ns2__GetViewers_ *_p = soap_instantiate___ns2__GetViewers_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns2__GetViewers_(soap, _p); _p->ns2__GetViewers = ns2__GetViewers; } return _p; }

inline void soap_delete___ns2__GetViewers_(struct soap *soap, struct __ns2__GetViewers_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns2__GetViewers_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns2__OpenFiles_
#define SOAP_TYPE___ns2__OpenFiles_ (245)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns2__OpenFiles_(struct soap*, struct __ns2__OpenFiles_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns2__OpenFiles_(struct soap*, const struct __ns2__OpenFiles_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns2__OpenFiles_(struct soap*, const char*, int, const struct __ns2__OpenFiles_ *, const char*);
SOAP_FMAC3 struct __ns2__OpenFiles_ * SOAP_FMAC4 soap_in___ns2__OpenFiles_(struct soap*, const char*, struct __ns2__OpenFiles_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns2__OpenFiles_(struct soap*, const struct __ns2__OpenFiles_ *, const char*, const char*);

#ifndef soap_write___ns2__OpenFiles_
#define soap_write___ns2__OpenFiles_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns2__OpenFiles_(soap, data),0) || soap_put___ns2__OpenFiles_(soap, data, "-ns2:OpenFiles", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns2__OpenFiles_ * SOAP_FMAC4 soap_get___ns2__OpenFiles_(struct soap*, struct __ns2__OpenFiles_ *, const char*, const char*);

#ifndef soap_read___ns2__OpenFiles_
#define soap_read___ns2__OpenFiles_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns2__OpenFiles_(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns2__OpenFiles_ * SOAP_FMAC2 soap_instantiate___ns2__OpenFiles_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns2__OpenFiles_ * soap_new___ns2__OpenFiles_(struct soap *soap, int n = -1) { return soap_instantiate___ns2__OpenFiles_(soap, n, NULL, NULL, NULL); }

inline struct __ns2__OpenFiles_ * soap_new_req___ns2__OpenFiles_(struct soap *soap) { struct __ns2__OpenFiles_ *_p = soap_instantiate___ns2__OpenFiles_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns2__OpenFiles_(soap, _p); } return _p; }

inline struct __ns2__OpenFiles_ * soap_new_set___ns2__OpenFiles_(struct soap *soap, _ns2__OpenFiles *ns2__OpenFiles) { struct __ns2__OpenFiles_ *_p = soap_instantiate___ns2__OpenFiles_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns2__OpenFiles_(soap, _p); _p->ns2__OpenFiles = ns2__OpenFiles; } return _p; }

inline void soap_delete___ns2__OpenFiles_(struct soap *soap, struct __ns2__OpenFiles_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns2__OpenFiles_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns2__CloseViewer
#define SOAP_TYPE___ns2__CloseViewer (243)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns2__CloseViewer(struct soap*, struct __ns2__CloseViewer *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns2__CloseViewer(struct soap*, const struct __ns2__CloseViewer *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns2__CloseViewer(struct soap*, const char*, int, const struct __ns2__CloseViewer *, const char*);
SOAP_FMAC3 struct __ns2__CloseViewer * SOAP_FMAC4 soap_in___ns2__CloseViewer(struct soap*, const char*, struct __ns2__CloseViewer *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns2__CloseViewer(struct soap*, const struct __ns2__CloseViewer *, const char*, const char*);

#ifndef soap_write___ns2__CloseViewer
#define soap_write___ns2__CloseViewer(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns2__CloseViewer(soap, data),0) || soap_put___ns2__CloseViewer(soap, data, "-ns2:CloseViewer", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns2__CloseViewer * SOAP_FMAC4 soap_get___ns2__CloseViewer(struct soap*, struct __ns2__CloseViewer *, const char*, const char*);

#ifndef soap_read___ns2__CloseViewer
#define soap_read___ns2__CloseViewer(soap, data) ( soap_begin_recv(soap) || !soap_get___ns2__CloseViewer(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns2__CloseViewer * SOAP_FMAC2 soap_instantiate___ns2__CloseViewer(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns2__CloseViewer * soap_new___ns2__CloseViewer(struct soap *soap, int n = -1) { return soap_instantiate___ns2__CloseViewer(soap, n, NULL, NULL, NULL); }

inline struct __ns2__CloseViewer * soap_new_req___ns2__CloseViewer(struct soap *soap) { struct __ns2__CloseViewer *_p = soap_instantiate___ns2__CloseViewer(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns2__CloseViewer(soap, _p); } return _p; }

inline struct __ns2__CloseViewer * soap_new_set___ns2__CloseViewer(struct soap *soap, _ns2__CloseViewer *ns2__CloseViewer) { struct __ns2__CloseViewer *_p = soap_instantiate___ns2__CloseViewer(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns2__CloseViewer(soap, _p); _p->ns2__CloseViewer = ns2__CloseViewer; } return _p; }

inline void soap_delete___ns2__CloseViewer(struct soap *soap, struct __ns2__CloseViewer *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns2__CloseViewer(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns2__ActivateViewer
#define SOAP_TYPE___ns2__ActivateViewer (239)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns2__ActivateViewer(struct soap*, struct __ns2__ActivateViewer *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns2__ActivateViewer(struct soap*, const struct __ns2__ActivateViewer *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns2__ActivateViewer(struct soap*, const char*, int, const struct __ns2__ActivateViewer *, const char*);
SOAP_FMAC3 struct __ns2__ActivateViewer * SOAP_FMAC4 soap_in___ns2__ActivateViewer(struct soap*, const char*, struct __ns2__ActivateViewer *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns2__ActivateViewer(struct soap*, const struct __ns2__ActivateViewer *, const char*, const char*);

#ifndef soap_write___ns2__ActivateViewer
#define soap_write___ns2__ActivateViewer(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns2__ActivateViewer(soap, data),0) || soap_put___ns2__ActivateViewer(soap, data, "-ns2:ActivateViewer", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns2__ActivateViewer * SOAP_FMAC4 soap_get___ns2__ActivateViewer(struct soap*, struct __ns2__ActivateViewer *, const char*, const char*);

#ifndef soap_read___ns2__ActivateViewer
#define soap_read___ns2__ActivateViewer(soap, data) ( soap_begin_recv(soap) || !soap_get___ns2__ActivateViewer(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns2__ActivateViewer * SOAP_FMAC2 soap_instantiate___ns2__ActivateViewer(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns2__ActivateViewer * soap_new___ns2__ActivateViewer(struct soap *soap, int n = -1) { return soap_instantiate___ns2__ActivateViewer(soap, n, NULL, NULL, NULL); }

inline struct __ns2__ActivateViewer * soap_new_req___ns2__ActivateViewer(struct soap *soap) { struct __ns2__ActivateViewer *_p = soap_instantiate___ns2__ActivateViewer(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns2__ActivateViewer(soap, _p); } return _p; }

inline struct __ns2__ActivateViewer * soap_new_set___ns2__ActivateViewer(struct soap *soap, _ns2__ActivateViewer *ns2__ActivateViewer) { struct __ns2__ActivateViewer *_p = soap_instantiate___ns2__ActivateViewer(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns2__ActivateViewer(soap, _p); _p->ns2__ActivateViewer = ns2__ActivateViewer; } return _p; }

inline void soap_delete___ns2__ActivateViewer(struct soap *soap, struct __ns2__ActivateViewer *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns2__ActivateViewer(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns2__OpenStudies
#define SOAP_TYPE___ns2__OpenStudies (235)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns2__OpenStudies(struct soap*, struct __ns2__OpenStudies *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns2__OpenStudies(struct soap*, const struct __ns2__OpenStudies *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns2__OpenStudies(struct soap*, const char*, int, const struct __ns2__OpenStudies *, const char*);
SOAP_FMAC3 struct __ns2__OpenStudies * SOAP_FMAC4 soap_in___ns2__OpenStudies(struct soap*, const char*, struct __ns2__OpenStudies *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns2__OpenStudies(struct soap*, const struct __ns2__OpenStudies *, const char*, const char*);

#ifndef soap_write___ns2__OpenStudies
#define soap_write___ns2__OpenStudies(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns2__OpenStudies(soap, data),0) || soap_put___ns2__OpenStudies(soap, data, "-ns2:OpenStudies", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns2__OpenStudies * SOAP_FMAC4 soap_get___ns2__OpenStudies(struct soap*, struct __ns2__OpenStudies *, const char*, const char*);

#ifndef soap_read___ns2__OpenStudies
#define soap_read___ns2__OpenStudies(soap, data) ( soap_begin_recv(soap) || !soap_get___ns2__OpenStudies(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns2__OpenStudies * SOAP_FMAC2 soap_instantiate___ns2__OpenStudies(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns2__OpenStudies * soap_new___ns2__OpenStudies(struct soap *soap, int n = -1) { return soap_instantiate___ns2__OpenStudies(soap, n, NULL, NULL, NULL); }

inline struct __ns2__OpenStudies * soap_new_req___ns2__OpenStudies(struct soap *soap) { struct __ns2__OpenStudies *_p = soap_instantiate___ns2__OpenStudies(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns2__OpenStudies(soap, _p); } return _p; }

inline struct __ns2__OpenStudies * soap_new_set___ns2__OpenStudies(struct soap *soap, _ns2__OpenStudies *ns2__OpenStudies) { struct __ns2__OpenStudies *_p = soap_instantiate___ns2__OpenStudies(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns2__OpenStudies(soap, _p); _p->ns2__OpenStudies = ns2__OpenStudies; } return _p; }

inline void soap_delete___ns2__OpenStudies(struct soap *soap, struct __ns2__OpenStudies *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns2__OpenStudies(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns2__GetViewerInfo
#define SOAP_TYPE___ns2__GetViewerInfo (231)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns2__GetViewerInfo(struct soap*, struct __ns2__GetViewerInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns2__GetViewerInfo(struct soap*, const struct __ns2__GetViewerInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns2__GetViewerInfo(struct soap*, const char*, int, const struct __ns2__GetViewerInfo *, const char*);
SOAP_FMAC3 struct __ns2__GetViewerInfo * SOAP_FMAC4 soap_in___ns2__GetViewerInfo(struct soap*, const char*, struct __ns2__GetViewerInfo *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns2__GetViewerInfo(struct soap*, const struct __ns2__GetViewerInfo *, const char*, const char*);

#ifndef soap_write___ns2__GetViewerInfo
#define soap_write___ns2__GetViewerInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns2__GetViewerInfo(soap, data),0) || soap_put___ns2__GetViewerInfo(soap, data, "-ns2:GetViewerInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns2__GetViewerInfo * SOAP_FMAC4 soap_get___ns2__GetViewerInfo(struct soap*, struct __ns2__GetViewerInfo *, const char*, const char*);

#ifndef soap_read___ns2__GetViewerInfo
#define soap_read___ns2__GetViewerInfo(soap, data) ( soap_begin_recv(soap) || !soap_get___ns2__GetViewerInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns2__GetViewerInfo * SOAP_FMAC2 soap_instantiate___ns2__GetViewerInfo(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns2__GetViewerInfo * soap_new___ns2__GetViewerInfo(struct soap *soap, int n = -1) { return soap_instantiate___ns2__GetViewerInfo(soap, n, NULL, NULL, NULL); }

inline struct __ns2__GetViewerInfo * soap_new_req___ns2__GetViewerInfo(struct soap *soap) { struct __ns2__GetViewerInfo *_p = soap_instantiate___ns2__GetViewerInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns2__GetViewerInfo(soap, _p); } return _p; }

inline struct __ns2__GetViewerInfo * soap_new_set___ns2__GetViewerInfo(struct soap *soap, _ns2__GetViewerInfo *ns2__GetViewerInfo) { struct __ns2__GetViewerInfo *_p = soap_instantiate___ns2__GetViewerInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns2__GetViewerInfo(soap, _p); _p->ns2__GetViewerInfo = ns2__GetViewerInfo; } return _p; }

inline void soap_delete___ns2__GetViewerInfo(struct soap *soap, struct __ns2__GetViewerInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns2__GetViewerInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns2__GetActiveViewers
#define SOAP_TYPE___ns2__GetActiveViewers (227)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns2__GetActiveViewers(struct soap*, struct __ns2__GetActiveViewers *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns2__GetActiveViewers(struct soap*, const struct __ns2__GetActiveViewers *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns2__GetActiveViewers(struct soap*, const char*, int, const struct __ns2__GetActiveViewers *, const char*);
SOAP_FMAC3 struct __ns2__GetActiveViewers * SOAP_FMAC4 soap_in___ns2__GetActiveViewers(struct soap*, const char*, struct __ns2__GetActiveViewers *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns2__GetActiveViewers(struct soap*, const struct __ns2__GetActiveViewers *, const char*, const char*);

#ifndef soap_write___ns2__GetActiveViewers
#define soap_write___ns2__GetActiveViewers(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns2__GetActiveViewers(soap, data),0) || soap_put___ns2__GetActiveViewers(soap, data, "-ns2:GetActiveViewers", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns2__GetActiveViewers * SOAP_FMAC4 soap_get___ns2__GetActiveViewers(struct soap*, struct __ns2__GetActiveViewers *, const char*, const char*);

#ifndef soap_read___ns2__GetActiveViewers
#define soap_read___ns2__GetActiveViewers(soap, data) ( soap_begin_recv(soap) || !soap_get___ns2__GetActiveViewers(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns2__GetActiveViewers * SOAP_FMAC2 soap_instantiate___ns2__GetActiveViewers(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns2__GetActiveViewers * soap_new___ns2__GetActiveViewers(struct soap *soap, int n = -1) { return soap_instantiate___ns2__GetActiveViewers(soap, n, NULL, NULL, NULL); }

inline struct __ns2__GetActiveViewers * soap_new_req___ns2__GetActiveViewers(struct soap *soap) { struct __ns2__GetActiveViewers *_p = soap_instantiate___ns2__GetActiveViewers(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns2__GetActiveViewers(soap, _p); } return _p; }

inline struct __ns2__GetActiveViewers * soap_new_set___ns2__GetActiveViewers(struct soap *soap, _ns2__GetActiveViewers *ns2__GetActiveViewers) { struct __ns2__GetActiveViewers *_p = soap_instantiate___ns2__GetActiveViewers(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns2__GetActiveViewers(soap, _p); _p->ns2__GetActiveViewers = ns2__GetActiveViewers; } return _p; }

inline void soap_delete___ns2__GetActiveViewers(struct soap *soap, struct __ns2__GetActiveViewers *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns2__GetActiveViewers(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns2__GetViewers
#define SOAP_TYPE___ns2__GetViewers (223)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns2__GetViewers(struct soap*, struct __ns2__GetViewers *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns2__GetViewers(struct soap*, const struct __ns2__GetViewers *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns2__GetViewers(struct soap*, const char*, int, const struct __ns2__GetViewers *, const char*);
SOAP_FMAC3 struct __ns2__GetViewers * SOAP_FMAC4 soap_in___ns2__GetViewers(struct soap*, const char*, struct __ns2__GetViewers *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns2__GetViewers(struct soap*, const struct __ns2__GetViewers *, const char*, const char*);

#ifndef soap_write___ns2__GetViewers
#define soap_write___ns2__GetViewers(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns2__GetViewers(soap, data),0) || soap_put___ns2__GetViewers(soap, data, "-ns2:GetViewers", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns2__GetViewers * SOAP_FMAC4 soap_get___ns2__GetViewers(struct soap*, struct __ns2__GetViewers *, const char*, const char*);

#ifndef soap_read___ns2__GetViewers
#define soap_read___ns2__GetViewers(soap, data) ( soap_begin_recv(soap) || !soap_get___ns2__GetViewers(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns2__GetViewers * SOAP_FMAC2 soap_instantiate___ns2__GetViewers(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns2__GetViewers * soap_new___ns2__GetViewers(struct soap *soap, int n = -1) { return soap_instantiate___ns2__GetViewers(soap, n, NULL, NULL, NULL); }

inline struct __ns2__GetViewers * soap_new_req___ns2__GetViewers(struct soap *soap) { struct __ns2__GetViewers *_p = soap_instantiate___ns2__GetViewers(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns2__GetViewers(soap, _p); } return _p; }

inline struct __ns2__GetViewers * soap_new_set___ns2__GetViewers(struct soap *soap, _ns2__GetViewers *ns2__GetViewers) { struct __ns2__GetViewers *_p = soap_instantiate___ns2__GetViewers(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns2__GetViewers(soap, _p); _p->ns2__GetViewers = ns2__GetViewers; } return _p; }

inline void soap_delete___ns2__GetViewers(struct soap *soap, struct __ns2__GetViewers *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns2__GetViewers(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns2__OpenFiles
#define SOAP_TYPE___ns2__OpenFiles (219)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns2__OpenFiles(struct soap*, struct __ns2__OpenFiles *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns2__OpenFiles(struct soap*, const struct __ns2__OpenFiles *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns2__OpenFiles(struct soap*, const char*, int, const struct __ns2__OpenFiles *, const char*);
SOAP_FMAC3 struct __ns2__OpenFiles * SOAP_FMAC4 soap_in___ns2__OpenFiles(struct soap*, const char*, struct __ns2__OpenFiles *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns2__OpenFiles(struct soap*, const struct __ns2__OpenFiles *, const char*, const char*);

#ifndef soap_write___ns2__OpenFiles
#define soap_write___ns2__OpenFiles(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns2__OpenFiles(soap, data),0) || soap_put___ns2__OpenFiles(soap, data, "-ns2:OpenFiles", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns2__OpenFiles * SOAP_FMAC4 soap_get___ns2__OpenFiles(struct soap*, struct __ns2__OpenFiles *, const char*, const char*);

#ifndef soap_read___ns2__OpenFiles
#define soap_read___ns2__OpenFiles(soap, data) ( soap_begin_recv(soap) || !soap_get___ns2__OpenFiles(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns2__OpenFiles * SOAP_FMAC2 soap_instantiate___ns2__OpenFiles(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns2__OpenFiles * soap_new___ns2__OpenFiles(struct soap *soap, int n = -1) { return soap_instantiate___ns2__OpenFiles(soap, n, NULL, NULL, NULL); }

inline struct __ns2__OpenFiles * soap_new_req___ns2__OpenFiles(struct soap *soap) { struct __ns2__OpenFiles *_p = soap_instantiate___ns2__OpenFiles(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns2__OpenFiles(soap, _p); } return _p; }

inline struct __ns2__OpenFiles * soap_new_set___ns2__OpenFiles(struct soap *soap, _ns2__OpenFiles *ns2__OpenFiles) { struct __ns2__OpenFiles *_p = soap_instantiate___ns2__OpenFiles(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns2__OpenFiles(soap, _p); _p->ns2__OpenFiles = ns2__OpenFiles; } return _p; }

inline void soap_delete___ns2__OpenFiles(struct soap *soap, struct __ns2__OpenFiles *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns2__OpenFiles(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (202)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data),0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Detail * soap_new_SOAP_ENV__Detail(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Detail * soap_new_req_SOAP_ENV__Detail(struct soap *soap, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__type = __type; _p->fault = fault; } return _p; }

inline struct SOAP_ENV__Detail * soap_new_set_SOAP_ENV__Detail(struct soap *soap, char *__any, ns5__DataValidationFault *ns5__DataValidationFault_, ns5__QueryFailedFault *ns5__QueryFailedFault_, ns2__ViewerNotFoundFault *ns2__ViewerNotFoundFault_, ns2__NoActiveViewersFault *ns2__NoActiveViewersFault_, ns2__NoViewersFault *ns2__NoViewersFault_, ns2__OpenFilesFault *ns2__OpenFilesFault_, ns2__OpenStudiesFault *ns2__OpenStudiesFault_, ns6__StudyInUseFault *ns6__StudyInUseFault_, ns6__StudyNearlineFault *ns6__StudyNearlineFault_, ns6__StudyNotFoundFault *ns6__StudyNotFoundFault_, ns6__StudyOfflineFault *ns6__StudyOfflineFault_, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__any = __any; _p->ns5__DataValidationFault_ = ns5__DataValidationFault_; _p->ns5__QueryFailedFault_ = ns5__QueryFailedFault_; _p->ns2__ViewerNotFoundFault_ = ns2__ViewerNotFoundFault_; _p->ns2__NoActiveViewersFault_ = ns2__NoActiveViewersFault_; _p->ns2__NoViewersFault_ = ns2__NoViewersFault_; _p->ns2__OpenFilesFault_ = ns2__OpenFilesFault_; _p->ns2__OpenStudiesFault_ = ns2__OpenStudiesFault_; _p->ns6__StudyInUseFault_ = ns6__StudyInUseFault_; _p->ns6__StudyNearlineFault_ = ns6__StudyNearlineFault_; _p->ns6__StudyNotFoundFault_ = ns6__StudyNotFoundFault_; _p->ns6__StudyOfflineFault_ = ns6__StudyOfflineFault_; _p->__type = __type; _p->fault = fault; } return _p; }

inline void soap_delete_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (302)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data),0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (301)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data),0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (298)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data),0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef SOAP_TYPE_PointerTo_ns5__ImageQueryResponse
#define SOAP_TYPE_PointerTo_ns5__ImageQueryResponse (281)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns5__ImageQueryResponse(struct soap*, _ns5__ImageQueryResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns5__ImageQueryResponse(struct soap*, const char *, int, _ns5__ImageQueryResponse *const*, const char *);
SOAP_FMAC3 _ns5__ImageQueryResponse ** SOAP_FMAC4 soap_in_PointerTo_ns5__ImageQueryResponse(struct soap*, const char*, _ns5__ImageQueryResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns5__ImageQueryResponse(struct soap*, _ns5__ImageQueryResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns5__ImageQueryResponse
#define soap_write_PointerTo_ns5__ImageQueryResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns5__ImageQueryResponse(soap, data),0) || soap_put_PointerTo_ns5__ImageQueryResponse(soap, data, "ns5:ImageQueryResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns5__ImageQueryResponse ** SOAP_FMAC4 soap_get_PointerTo_ns5__ImageQueryResponse(struct soap*, _ns5__ImageQueryResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns5__ImageQueryResponse
#define soap_read_PointerTo_ns5__ImageQueryResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns5__ImageQueryResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns5__ImageQuery
#define SOAP_TYPE_PointerTo_ns5__ImageQuery (280)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns5__ImageQuery(struct soap*, _ns5__ImageQuery *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns5__ImageQuery(struct soap*, const char *, int, _ns5__ImageQuery *const*, const char *);
SOAP_FMAC3 _ns5__ImageQuery ** SOAP_FMAC4 soap_in_PointerTo_ns5__ImageQuery(struct soap*, const char*, _ns5__ImageQuery **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns5__ImageQuery(struct soap*, _ns5__ImageQuery *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns5__ImageQuery
#define soap_write_PointerTo_ns5__ImageQuery(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns5__ImageQuery(soap, data),0) || soap_put_PointerTo_ns5__ImageQuery(soap, data, "ns5:ImageQuery", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns5__ImageQuery ** SOAP_FMAC4 soap_get_PointerTo_ns5__ImageQuery(struct soap*, _ns5__ImageQuery **, const char*, const char*);

#ifndef soap_read_PointerTo_ns5__ImageQuery
#define soap_read_PointerTo_ns5__ImageQuery(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns5__ImageQuery(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns5__SeriesQueryResponse
#define SOAP_TYPE_PointerTo_ns5__SeriesQueryResponse (277)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns5__SeriesQueryResponse(struct soap*, _ns5__SeriesQueryResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns5__SeriesQueryResponse(struct soap*, const char *, int, _ns5__SeriesQueryResponse *const*, const char *);
SOAP_FMAC3 _ns5__SeriesQueryResponse ** SOAP_FMAC4 soap_in_PointerTo_ns5__SeriesQueryResponse(struct soap*, const char*, _ns5__SeriesQueryResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns5__SeriesQueryResponse(struct soap*, _ns5__SeriesQueryResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns5__SeriesQueryResponse
#define soap_write_PointerTo_ns5__SeriesQueryResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns5__SeriesQueryResponse(soap, data),0) || soap_put_PointerTo_ns5__SeriesQueryResponse(soap, data, "ns5:SeriesQueryResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns5__SeriesQueryResponse ** SOAP_FMAC4 soap_get_PointerTo_ns5__SeriesQueryResponse(struct soap*, _ns5__SeriesQueryResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns5__SeriesQueryResponse
#define soap_read_PointerTo_ns5__SeriesQueryResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns5__SeriesQueryResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns5__SeriesQuery
#define SOAP_TYPE_PointerTo_ns5__SeriesQuery (276)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns5__SeriesQuery(struct soap*, _ns5__SeriesQuery *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns5__SeriesQuery(struct soap*, const char *, int, _ns5__SeriesQuery *const*, const char *);
SOAP_FMAC3 _ns5__SeriesQuery ** SOAP_FMAC4 soap_in_PointerTo_ns5__SeriesQuery(struct soap*, const char*, _ns5__SeriesQuery **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns5__SeriesQuery(struct soap*, _ns5__SeriesQuery *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns5__SeriesQuery
#define soap_write_PointerTo_ns5__SeriesQuery(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns5__SeriesQuery(soap, data),0) || soap_put_PointerTo_ns5__SeriesQuery(soap, data, "ns5:SeriesQuery", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns5__SeriesQuery ** SOAP_FMAC4 soap_get_PointerTo_ns5__SeriesQuery(struct soap*, _ns5__SeriesQuery **, const char*, const char*);

#ifndef soap_read_PointerTo_ns5__SeriesQuery
#define soap_read_PointerTo_ns5__SeriesQuery(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns5__SeriesQuery(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns5__StudyQueryResponse
#define SOAP_TYPE_PointerTo_ns5__StudyQueryResponse (273)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns5__StudyQueryResponse(struct soap*, _ns5__StudyQueryResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns5__StudyQueryResponse(struct soap*, const char *, int, _ns5__StudyQueryResponse *const*, const char *);
SOAP_FMAC3 _ns5__StudyQueryResponse ** SOAP_FMAC4 soap_in_PointerTo_ns5__StudyQueryResponse(struct soap*, const char*, _ns5__StudyQueryResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns5__StudyQueryResponse(struct soap*, _ns5__StudyQueryResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns5__StudyQueryResponse
#define soap_write_PointerTo_ns5__StudyQueryResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns5__StudyQueryResponse(soap, data),0) || soap_put_PointerTo_ns5__StudyQueryResponse(soap, data, "ns5:StudyQueryResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns5__StudyQueryResponse ** SOAP_FMAC4 soap_get_PointerTo_ns5__StudyQueryResponse(struct soap*, _ns5__StudyQueryResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns5__StudyQueryResponse
#define soap_read_PointerTo_ns5__StudyQueryResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns5__StudyQueryResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns5__StudyQuery
#define SOAP_TYPE_PointerTo_ns5__StudyQuery (272)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns5__StudyQuery(struct soap*, _ns5__StudyQuery *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns5__StudyQuery(struct soap*, const char *, int, _ns5__StudyQuery *const*, const char *);
SOAP_FMAC3 _ns5__StudyQuery ** SOAP_FMAC4 soap_in_PointerTo_ns5__StudyQuery(struct soap*, const char*, _ns5__StudyQuery **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns5__StudyQuery(struct soap*, _ns5__StudyQuery *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns5__StudyQuery
#define soap_write_PointerTo_ns5__StudyQuery(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns5__StudyQuery(soap, data),0) || soap_put_PointerTo_ns5__StudyQuery(soap, data, "ns5:StudyQuery", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns5__StudyQuery ** SOAP_FMAC4 soap_get_PointerTo_ns5__StudyQuery(struct soap*, _ns5__StudyQuery **, const char*, const char*);

#ifndef soap_read_PointerTo_ns5__StudyQuery
#define soap_read_PointerTo_ns5__StudyQuery(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns5__StudyQuery(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns2__CloseViewerResponse
#define SOAP_TYPE_PointerTo_ns2__CloseViewerResponse (241)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns2__CloseViewerResponse(struct soap*, _ns2__CloseViewerResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns2__CloseViewerResponse(struct soap*, const char *, int, _ns2__CloseViewerResponse *const*, const char *);
SOAP_FMAC3 _ns2__CloseViewerResponse ** SOAP_FMAC4 soap_in_PointerTo_ns2__CloseViewerResponse(struct soap*, const char*, _ns2__CloseViewerResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns2__CloseViewerResponse(struct soap*, _ns2__CloseViewerResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns2__CloseViewerResponse
#define soap_write_PointerTo_ns2__CloseViewerResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns2__CloseViewerResponse(soap, data),0) || soap_put_PointerTo_ns2__CloseViewerResponse(soap, data, "ns2:CloseViewerResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns2__CloseViewerResponse ** SOAP_FMAC4 soap_get_PointerTo_ns2__CloseViewerResponse(struct soap*, _ns2__CloseViewerResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns2__CloseViewerResponse
#define soap_read_PointerTo_ns2__CloseViewerResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns2__CloseViewerResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns2__CloseViewer
#define SOAP_TYPE_PointerTo_ns2__CloseViewer (240)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns2__CloseViewer(struct soap*, _ns2__CloseViewer *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns2__CloseViewer(struct soap*, const char *, int, _ns2__CloseViewer *const*, const char *);
SOAP_FMAC3 _ns2__CloseViewer ** SOAP_FMAC4 soap_in_PointerTo_ns2__CloseViewer(struct soap*, const char*, _ns2__CloseViewer **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns2__CloseViewer(struct soap*, _ns2__CloseViewer *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns2__CloseViewer
#define soap_write_PointerTo_ns2__CloseViewer(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns2__CloseViewer(soap, data),0) || soap_put_PointerTo_ns2__CloseViewer(soap, data, "ns2:CloseViewer", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns2__CloseViewer ** SOAP_FMAC4 soap_get_PointerTo_ns2__CloseViewer(struct soap*, _ns2__CloseViewer **, const char*, const char*);

#ifndef soap_read_PointerTo_ns2__CloseViewer
#define soap_read_PointerTo_ns2__CloseViewer(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns2__CloseViewer(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns2__ActivateViewerResponse
#define SOAP_TYPE_PointerTo_ns2__ActivateViewerResponse (237)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns2__ActivateViewerResponse(struct soap*, _ns2__ActivateViewerResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns2__ActivateViewerResponse(struct soap*, const char *, int, _ns2__ActivateViewerResponse *const*, const char *);
SOAP_FMAC3 _ns2__ActivateViewerResponse ** SOAP_FMAC4 soap_in_PointerTo_ns2__ActivateViewerResponse(struct soap*, const char*, _ns2__ActivateViewerResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns2__ActivateViewerResponse(struct soap*, _ns2__ActivateViewerResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns2__ActivateViewerResponse
#define soap_write_PointerTo_ns2__ActivateViewerResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns2__ActivateViewerResponse(soap, data),0) || soap_put_PointerTo_ns2__ActivateViewerResponse(soap, data, "ns2:ActivateViewerResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns2__ActivateViewerResponse ** SOAP_FMAC4 soap_get_PointerTo_ns2__ActivateViewerResponse(struct soap*, _ns2__ActivateViewerResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns2__ActivateViewerResponse
#define soap_read_PointerTo_ns2__ActivateViewerResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns2__ActivateViewerResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns2__ActivateViewer
#define SOAP_TYPE_PointerTo_ns2__ActivateViewer (236)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns2__ActivateViewer(struct soap*, _ns2__ActivateViewer *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns2__ActivateViewer(struct soap*, const char *, int, _ns2__ActivateViewer *const*, const char *);
SOAP_FMAC3 _ns2__ActivateViewer ** SOAP_FMAC4 soap_in_PointerTo_ns2__ActivateViewer(struct soap*, const char*, _ns2__ActivateViewer **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns2__ActivateViewer(struct soap*, _ns2__ActivateViewer *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns2__ActivateViewer
#define soap_write_PointerTo_ns2__ActivateViewer(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns2__ActivateViewer(soap, data),0) || soap_put_PointerTo_ns2__ActivateViewer(soap, data, "ns2:ActivateViewer", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns2__ActivateViewer ** SOAP_FMAC4 soap_get_PointerTo_ns2__ActivateViewer(struct soap*, _ns2__ActivateViewer **, const char*, const char*);

#ifndef soap_read_PointerTo_ns2__ActivateViewer
#define soap_read_PointerTo_ns2__ActivateViewer(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns2__ActivateViewer(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns2__OpenStudiesResponse
#define SOAP_TYPE_PointerTo_ns2__OpenStudiesResponse (233)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns2__OpenStudiesResponse(struct soap*, _ns2__OpenStudiesResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns2__OpenStudiesResponse(struct soap*, const char *, int, _ns2__OpenStudiesResponse *const*, const char *);
SOAP_FMAC3 _ns2__OpenStudiesResponse ** SOAP_FMAC4 soap_in_PointerTo_ns2__OpenStudiesResponse(struct soap*, const char*, _ns2__OpenStudiesResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns2__OpenStudiesResponse(struct soap*, _ns2__OpenStudiesResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns2__OpenStudiesResponse
#define soap_write_PointerTo_ns2__OpenStudiesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns2__OpenStudiesResponse(soap, data),0) || soap_put_PointerTo_ns2__OpenStudiesResponse(soap, data, "ns2:OpenStudiesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns2__OpenStudiesResponse ** SOAP_FMAC4 soap_get_PointerTo_ns2__OpenStudiesResponse(struct soap*, _ns2__OpenStudiesResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns2__OpenStudiesResponse
#define soap_read_PointerTo_ns2__OpenStudiesResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns2__OpenStudiesResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns2__OpenStudies
#define SOAP_TYPE_PointerTo_ns2__OpenStudies (232)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns2__OpenStudies(struct soap*, _ns2__OpenStudies *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns2__OpenStudies(struct soap*, const char *, int, _ns2__OpenStudies *const*, const char *);
SOAP_FMAC3 _ns2__OpenStudies ** SOAP_FMAC4 soap_in_PointerTo_ns2__OpenStudies(struct soap*, const char*, _ns2__OpenStudies **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns2__OpenStudies(struct soap*, _ns2__OpenStudies *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns2__OpenStudies
#define soap_write_PointerTo_ns2__OpenStudies(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns2__OpenStudies(soap, data),0) || soap_put_PointerTo_ns2__OpenStudies(soap, data, "ns2:OpenStudies", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns2__OpenStudies ** SOAP_FMAC4 soap_get_PointerTo_ns2__OpenStudies(struct soap*, _ns2__OpenStudies **, const char*, const char*);

#ifndef soap_read_PointerTo_ns2__OpenStudies
#define soap_read_PointerTo_ns2__OpenStudies(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns2__OpenStudies(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns2__GetViewerInfoResponse
#define SOAP_TYPE_PointerTo_ns2__GetViewerInfoResponse (229)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns2__GetViewerInfoResponse(struct soap*, _ns2__GetViewerInfoResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns2__GetViewerInfoResponse(struct soap*, const char *, int, _ns2__GetViewerInfoResponse *const*, const char *);
SOAP_FMAC3 _ns2__GetViewerInfoResponse ** SOAP_FMAC4 soap_in_PointerTo_ns2__GetViewerInfoResponse(struct soap*, const char*, _ns2__GetViewerInfoResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns2__GetViewerInfoResponse(struct soap*, _ns2__GetViewerInfoResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns2__GetViewerInfoResponse
#define soap_write_PointerTo_ns2__GetViewerInfoResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns2__GetViewerInfoResponse(soap, data),0) || soap_put_PointerTo_ns2__GetViewerInfoResponse(soap, data, "ns2:GetViewerInfoResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns2__GetViewerInfoResponse ** SOAP_FMAC4 soap_get_PointerTo_ns2__GetViewerInfoResponse(struct soap*, _ns2__GetViewerInfoResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns2__GetViewerInfoResponse
#define soap_read_PointerTo_ns2__GetViewerInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns2__GetViewerInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns2__GetViewerInfo
#define SOAP_TYPE_PointerTo_ns2__GetViewerInfo (228)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns2__GetViewerInfo(struct soap*, _ns2__GetViewerInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns2__GetViewerInfo(struct soap*, const char *, int, _ns2__GetViewerInfo *const*, const char *);
SOAP_FMAC3 _ns2__GetViewerInfo ** SOAP_FMAC4 soap_in_PointerTo_ns2__GetViewerInfo(struct soap*, const char*, _ns2__GetViewerInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns2__GetViewerInfo(struct soap*, _ns2__GetViewerInfo *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns2__GetViewerInfo
#define soap_write_PointerTo_ns2__GetViewerInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns2__GetViewerInfo(soap, data),0) || soap_put_PointerTo_ns2__GetViewerInfo(soap, data, "ns2:GetViewerInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns2__GetViewerInfo ** SOAP_FMAC4 soap_get_PointerTo_ns2__GetViewerInfo(struct soap*, _ns2__GetViewerInfo **, const char*, const char*);

#ifndef soap_read_PointerTo_ns2__GetViewerInfo
#define soap_read_PointerTo_ns2__GetViewerInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns2__GetViewerInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns2__GetActiveViewersResponse
#define SOAP_TYPE_PointerTo_ns2__GetActiveViewersResponse (225)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns2__GetActiveViewersResponse(struct soap*, _ns2__GetActiveViewersResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns2__GetActiveViewersResponse(struct soap*, const char *, int, _ns2__GetActiveViewersResponse *const*, const char *);
SOAP_FMAC3 _ns2__GetActiveViewersResponse ** SOAP_FMAC4 soap_in_PointerTo_ns2__GetActiveViewersResponse(struct soap*, const char*, _ns2__GetActiveViewersResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns2__GetActiveViewersResponse(struct soap*, _ns2__GetActiveViewersResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns2__GetActiveViewersResponse
#define soap_write_PointerTo_ns2__GetActiveViewersResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns2__GetActiveViewersResponse(soap, data),0) || soap_put_PointerTo_ns2__GetActiveViewersResponse(soap, data, "ns2:GetActiveViewersResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns2__GetActiveViewersResponse ** SOAP_FMAC4 soap_get_PointerTo_ns2__GetActiveViewersResponse(struct soap*, _ns2__GetActiveViewersResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns2__GetActiveViewersResponse
#define soap_read_PointerTo_ns2__GetActiveViewersResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns2__GetActiveViewersResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns2__GetActiveViewers
#define SOAP_TYPE_PointerTo_ns2__GetActiveViewers (224)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns2__GetActiveViewers(struct soap*, _ns2__GetActiveViewers *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns2__GetActiveViewers(struct soap*, const char *, int, _ns2__GetActiveViewers *const*, const char *);
SOAP_FMAC3 _ns2__GetActiveViewers ** SOAP_FMAC4 soap_in_PointerTo_ns2__GetActiveViewers(struct soap*, const char*, _ns2__GetActiveViewers **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns2__GetActiveViewers(struct soap*, _ns2__GetActiveViewers *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns2__GetActiveViewers
#define soap_write_PointerTo_ns2__GetActiveViewers(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns2__GetActiveViewers(soap, data),0) || soap_put_PointerTo_ns2__GetActiveViewers(soap, data, "ns2:GetActiveViewers", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns2__GetActiveViewers ** SOAP_FMAC4 soap_get_PointerTo_ns2__GetActiveViewers(struct soap*, _ns2__GetActiveViewers **, const char*, const char*);

#ifndef soap_read_PointerTo_ns2__GetActiveViewers
#define soap_read_PointerTo_ns2__GetActiveViewers(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns2__GetActiveViewers(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns2__GetViewersResponse
#define SOAP_TYPE_PointerTo_ns2__GetViewersResponse (221)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns2__GetViewersResponse(struct soap*, _ns2__GetViewersResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns2__GetViewersResponse(struct soap*, const char *, int, _ns2__GetViewersResponse *const*, const char *);
SOAP_FMAC3 _ns2__GetViewersResponse ** SOAP_FMAC4 soap_in_PointerTo_ns2__GetViewersResponse(struct soap*, const char*, _ns2__GetViewersResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns2__GetViewersResponse(struct soap*, _ns2__GetViewersResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns2__GetViewersResponse
#define soap_write_PointerTo_ns2__GetViewersResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns2__GetViewersResponse(soap, data),0) || soap_put_PointerTo_ns2__GetViewersResponse(soap, data, "ns2:GetViewersResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns2__GetViewersResponse ** SOAP_FMAC4 soap_get_PointerTo_ns2__GetViewersResponse(struct soap*, _ns2__GetViewersResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns2__GetViewersResponse
#define soap_read_PointerTo_ns2__GetViewersResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns2__GetViewersResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns2__GetViewers
#define SOAP_TYPE_PointerTo_ns2__GetViewers (220)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns2__GetViewers(struct soap*, _ns2__GetViewers *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns2__GetViewers(struct soap*, const char *, int, _ns2__GetViewers *const*, const char *);
SOAP_FMAC3 _ns2__GetViewers ** SOAP_FMAC4 soap_in_PointerTo_ns2__GetViewers(struct soap*, const char*, _ns2__GetViewers **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns2__GetViewers(struct soap*, _ns2__GetViewers *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns2__GetViewers
#define soap_write_PointerTo_ns2__GetViewers(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns2__GetViewers(soap, data),0) || soap_put_PointerTo_ns2__GetViewers(soap, data, "ns2:GetViewers", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns2__GetViewers ** SOAP_FMAC4 soap_get_PointerTo_ns2__GetViewers(struct soap*, _ns2__GetViewers **, const char*, const char*);

#ifndef soap_read_PointerTo_ns2__GetViewers
#define soap_read_PointerTo_ns2__GetViewers(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns2__GetViewers(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns2__OpenFilesResponse
#define SOAP_TYPE_PointerTo_ns2__OpenFilesResponse (217)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns2__OpenFilesResponse(struct soap*, _ns2__OpenFilesResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns2__OpenFilesResponse(struct soap*, const char *, int, _ns2__OpenFilesResponse *const*, const char *);
SOAP_FMAC3 _ns2__OpenFilesResponse ** SOAP_FMAC4 soap_in_PointerTo_ns2__OpenFilesResponse(struct soap*, const char*, _ns2__OpenFilesResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns2__OpenFilesResponse(struct soap*, _ns2__OpenFilesResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns2__OpenFilesResponse
#define soap_write_PointerTo_ns2__OpenFilesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns2__OpenFilesResponse(soap, data),0) || soap_put_PointerTo_ns2__OpenFilesResponse(soap, data, "ns2:OpenFilesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns2__OpenFilesResponse ** SOAP_FMAC4 soap_get_PointerTo_ns2__OpenFilesResponse(struct soap*, _ns2__OpenFilesResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns2__OpenFilesResponse
#define soap_read_PointerTo_ns2__OpenFilesResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns2__OpenFilesResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns2__OpenFiles
#define SOAP_TYPE_PointerTo_ns2__OpenFiles (216)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns2__OpenFiles(struct soap*, _ns2__OpenFiles *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns2__OpenFiles(struct soap*, const char *, int, _ns2__OpenFiles *const*, const char *);
SOAP_FMAC3 _ns2__OpenFiles ** SOAP_FMAC4 soap_in_PointerTo_ns2__OpenFiles(struct soap*, const char*, _ns2__OpenFiles **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns2__OpenFiles(struct soap*, _ns2__OpenFiles *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns2__OpenFiles
#define soap_write_PointerTo_ns2__OpenFiles(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns2__OpenFiles(soap, data),0) || soap_put_PointerTo_ns2__OpenFiles(soap, data, "ns2:OpenFiles", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns2__OpenFiles ** SOAP_FMAC4 soap_get_PointerTo_ns2__OpenFiles(struct soap*, _ns2__OpenFiles **, const char*, const char*);

#ifndef soap_read_PointerTo_ns2__OpenFiles
#define soap_read_PointerTo_ns2__OpenFiles(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns2__OpenFiles(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons6__StudyOfflineFault
#define SOAP_TYPE_PointerTons6__StudyOfflineFault (213)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons6__StudyOfflineFault(struct soap*, ns6__StudyOfflineFault *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons6__StudyOfflineFault(struct soap*, const char *, int, ns6__StudyOfflineFault *const*, const char *);
SOAP_FMAC3 ns6__StudyOfflineFault ** SOAP_FMAC4 soap_in_PointerTons6__StudyOfflineFault(struct soap*, const char*, ns6__StudyOfflineFault **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons6__StudyOfflineFault(struct soap*, ns6__StudyOfflineFault *const*, const char*, const char*);

#ifndef soap_write_PointerTons6__StudyOfflineFault
#define soap_write_PointerTons6__StudyOfflineFault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons6__StudyOfflineFault(soap, data),0) || soap_put_PointerTons6__StudyOfflineFault(soap, data, "ns6:StudyOfflineFault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__StudyOfflineFault ** SOAP_FMAC4 soap_get_PointerTons6__StudyOfflineFault(struct soap*, ns6__StudyOfflineFault **, const char*, const char*);

#ifndef soap_read_PointerTons6__StudyOfflineFault
#define soap_read_PointerTons6__StudyOfflineFault(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons6__StudyOfflineFault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons6__StudyNotFoundFault
#define SOAP_TYPE_PointerTons6__StudyNotFoundFault (212)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons6__StudyNotFoundFault(struct soap*, ns6__StudyNotFoundFault *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons6__StudyNotFoundFault(struct soap*, const char *, int, ns6__StudyNotFoundFault *const*, const char *);
SOAP_FMAC3 ns6__StudyNotFoundFault ** SOAP_FMAC4 soap_in_PointerTons6__StudyNotFoundFault(struct soap*, const char*, ns6__StudyNotFoundFault **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons6__StudyNotFoundFault(struct soap*, ns6__StudyNotFoundFault *const*, const char*, const char*);

#ifndef soap_write_PointerTons6__StudyNotFoundFault
#define soap_write_PointerTons6__StudyNotFoundFault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons6__StudyNotFoundFault(soap, data),0) || soap_put_PointerTons6__StudyNotFoundFault(soap, data, "ns6:StudyNotFoundFault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__StudyNotFoundFault ** SOAP_FMAC4 soap_get_PointerTons6__StudyNotFoundFault(struct soap*, ns6__StudyNotFoundFault **, const char*, const char*);

#ifndef soap_read_PointerTons6__StudyNotFoundFault
#define soap_read_PointerTons6__StudyNotFoundFault(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons6__StudyNotFoundFault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons6__StudyNearlineFault
#define SOAP_TYPE_PointerTons6__StudyNearlineFault (211)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons6__StudyNearlineFault(struct soap*, ns6__StudyNearlineFault *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons6__StudyNearlineFault(struct soap*, const char *, int, ns6__StudyNearlineFault *const*, const char *);
SOAP_FMAC3 ns6__StudyNearlineFault ** SOAP_FMAC4 soap_in_PointerTons6__StudyNearlineFault(struct soap*, const char*, ns6__StudyNearlineFault **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons6__StudyNearlineFault(struct soap*, ns6__StudyNearlineFault *const*, const char*, const char*);

#ifndef soap_write_PointerTons6__StudyNearlineFault
#define soap_write_PointerTons6__StudyNearlineFault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons6__StudyNearlineFault(soap, data),0) || soap_put_PointerTons6__StudyNearlineFault(soap, data, "ns6:StudyNearlineFault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__StudyNearlineFault ** SOAP_FMAC4 soap_get_PointerTons6__StudyNearlineFault(struct soap*, ns6__StudyNearlineFault **, const char*, const char*);

#ifndef soap_read_PointerTons6__StudyNearlineFault
#define soap_read_PointerTons6__StudyNearlineFault(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons6__StudyNearlineFault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons6__StudyInUseFault
#define SOAP_TYPE_PointerTons6__StudyInUseFault (210)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons6__StudyInUseFault(struct soap*, ns6__StudyInUseFault *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons6__StudyInUseFault(struct soap*, const char *, int, ns6__StudyInUseFault *const*, const char *);
SOAP_FMAC3 ns6__StudyInUseFault ** SOAP_FMAC4 soap_in_PointerTons6__StudyInUseFault(struct soap*, const char*, ns6__StudyInUseFault **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons6__StudyInUseFault(struct soap*, ns6__StudyInUseFault *const*, const char*, const char*);

#ifndef soap_write_PointerTons6__StudyInUseFault
#define soap_write_PointerTons6__StudyInUseFault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons6__StudyInUseFault(soap, data),0) || soap_put_PointerTons6__StudyInUseFault(soap, data, "ns6:StudyInUseFault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns6__StudyInUseFault ** SOAP_FMAC4 soap_get_PointerTons6__StudyInUseFault(struct soap*, ns6__StudyInUseFault **, const char*, const char*);

#ifndef soap_read_PointerTons6__StudyInUseFault
#define soap_read_PointerTons6__StudyInUseFault(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons6__StudyInUseFault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons2__OpenStudiesFault
#define SOAP_TYPE_PointerTons2__OpenStudiesFault (209)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__OpenStudiesFault(struct soap*, ns2__OpenStudiesFault *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__OpenStudiesFault(struct soap*, const char *, int, ns2__OpenStudiesFault *const*, const char *);
SOAP_FMAC3 ns2__OpenStudiesFault ** SOAP_FMAC4 soap_in_PointerTons2__OpenStudiesFault(struct soap*, const char*, ns2__OpenStudiesFault **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__OpenStudiesFault(struct soap*, ns2__OpenStudiesFault *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__OpenStudiesFault
#define soap_write_PointerTons2__OpenStudiesFault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons2__OpenStudiesFault(soap, data),0) || soap_put_PointerTons2__OpenStudiesFault(soap, data, "ns2:OpenStudiesFault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__OpenStudiesFault ** SOAP_FMAC4 soap_get_PointerTons2__OpenStudiesFault(struct soap*, ns2__OpenStudiesFault **, const char*, const char*);

#ifndef soap_read_PointerTons2__OpenStudiesFault
#define soap_read_PointerTons2__OpenStudiesFault(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__OpenStudiesFault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons2__OpenFilesFault
#define SOAP_TYPE_PointerTons2__OpenFilesFault (208)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__OpenFilesFault(struct soap*, ns2__OpenFilesFault *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__OpenFilesFault(struct soap*, const char *, int, ns2__OpenFilesFault *const*, const char *);
SOAP_FMAC3 ns2__OpenFilesFault ** SOAP_FMAC4 soap_in_PointerTons2__OpenFilesFault(struct soap*, const char*, ns2__OpenFilesFault **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__OpenFilesFault(struct soap*, ns2__OpenFilesFault *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__OpenFilesFault
#define soap_write_PointerTons2__OpenFilesFault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons2__OpenFilesFault(soap, data),0) || soap_put_PointerTons2__OpenFilesFault(soap, data, "ns2:OpenFilesFault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__OpenFilesFault ** SOAP_FMAC4 soap_get_PointerTons2__OpenFilesFault(struct soap*, ns2__OpenFilesFault **, const char*, const char*);

#ifndef soap_read_PointerTons2__OpenFilesFault
#define soap_read_PointerTons2__OpenFilesFault(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__OpenFilesFault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons2__NoViewersFault
#define SOAP_TYPE_PointerTons2__NoViewersFault (207)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__NoViewersFault(struct soap*, ns2__NoViewersFault *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__NoViewersFault(struct soap*, const char *, int, ns2__NoViewersFault *const*, const char *);
SOAP_FMAC3 ns2__NoViewersFault ** SOAP_FMAC4 soap_in_PointerTons2__NoViewersFault(struct soap*, const char*, ns2__NoViewersFault **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__NoViewersFault(struct soap*, ns2__NoViewersFault *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__NoViewersFault
#define soap_write_PointerTons2__NoViewersFault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons2__NoViewersFault(soap, data),0) || soap_put_PointerTons2__NoViewersFault(soap, data, "ns2:NoViewersFault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__NoViewersFault ** SOAP_FMAC4 soap_get_PointerTons2__NoViewersFault(struct soap*, ns2__NoViewersFault **, const char*, const char*);

#ifndef soap_read_PointerTons2__NoViewersFault
#define soap_read_PointerTons2__NoViewersFault(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__NoViewersFault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons2__NoActiveViewersFault
#define SOAP_TYPE_PointerTons2__NoActiveViewersFault (206)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__NoActiveViewersFault(struct soap*, ns2__NoActiveViewersFault *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__NoActiveViewersFault(struct soap*, const char *, int, ns2__NoActiveViewersFault *const*, const char *);
SOAP_FMAC3 ns2__NoActiveViewersFault ** SOAP_FMAC4 soap_in_PointerTons2__NoActiveViewersFault(struct soap*, const char*, ns2__NoActiveViewersFault **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__NoActiveViewersFault(struct soap*, ns2__NoActiveViewersFault *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__NoActiveViewersFault
#define soap_write_PointerTons2__NoActiveViewersFault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons2__NoActiveViewersFault(soap, data),0) || soap_put_PointerTons2__NoActiveViewersFault(soap, data, "ns2:NoActiveViewersFault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__NoActiveViewersFault ** SOAP_FMAC4 soap_get_PointerTons2__NoActiveViewersFault(struct soap*, ns2__NoActiveViewersFault **, const char*, const char*);

#ifndef soap_read_PointerTons2__NoActiveViewersFault
#define soap_read_PointerTons2__NoActiveViewersFault(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__NoActiveViewersFault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons2__ViewerNotFoundFault
#define SOAP_TYPE_PointerTons2__ViewerNotFoundFault (205)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__ViewerNotFoundFault(struct soap*, ns2__ViewerNotFoundFault *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__ViewerNotFoundFault(struct soap*, const char *, int, ns2__ViewerNotFoundFault *const*, const char *);
SOAP_FMAC3 ns2__ViewerNotFoundFault ** SOAP_FMAC4 soap_in_PointerTons2__ViewerNotFoundFault(struct soap*, const char*, ns2__ViewerNotFoundFault **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__ViewerNotFoundFault(struct soap*, ns2__ViewerNotFoundFault *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__ViewerNotFoundFault
#define soap_write_PointerTons2__ViewerNotFoundFault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons2__ViewerNotFoundFault(soap, data),0) || soap_put_PointerTons2__ViewerNotFoundFault(soap, data, "ns2:ViewerNotFoundFault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__ViewerNotFoundFault ** SOAP_FMAC4 soap_get_PointerTons2__ViewerNotFoundFault(struct soap*, ns2__ViewerNotFoundFault **, const char*, const char*);

#ifndef soap_read_PointerTons2__ViewerNotFoundFault
#define soap_read_PointerTons2__ViewerNotFoundFault(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__ViewerNotFoundFault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons5__QueryFailedFault
#define SOAP_TYPE_PointerTons5__QueryFailedFault (204)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons5__QueryFailedFault(struct soap*, ns5__QueryFailedFault *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons5__QueryFailedFault(struct soap*, const char *, int, ns5__QueryFailedFault *const*, const char *);
SOAP_FMAC3 ns5__QueryFailedFault ** SOAP_FMAC4 soap_in_PointerTons5__QueryFailedFault(struct soap*, const char*, ns5__QueryFailedFault **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons5__QueryFailedFault(struct soap*, ns5__QueryFailedFault *const*, const char*, const char*);

#ifndef soap_write_PointerTons5__QueryFailedFault
#define soap_write_PointerTons5__QueryFailedFault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons5__QueryFailedFault(soap, data),0) || soap_put_PointerTons5__QueryFailedFault(soap, data, "ns5:QueryFailedFault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__QueryFailedFault ** SOAP_FMAC4 soap_get_PointerTons5__QueryFailedFault(struct soap*, ns5__QueryFailedFault **, const char*, const char*);

#ifndef soap_read_PointerTons5__QueryFailedFault
#define soap_read_PointerTons5__QueryFailedFault(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons5__QueryFailedFault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons5__DataValidationFault
#define SOAP_TYPE_PointerTons5__DataValidationFault (203)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons5__DataValidationFault(struct soap*, ns5__DataValidationFault *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons5__DataValidationFault(struct soap*, const char *, int, ns5__DataValidationFault *const*, const char *);
SOAP_FMAC3 ns5__DataValidationFault ** SOAP_FMAC4 soap_in_PointerTons5__DataValidationFault(struct soap*, const char*, ns5__DataValidationFault **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons5__DataValidationFault(struct soap*, ns5__DataValidationFault *const*, const char*, const char*);

#ifndef soap_write_PointerTons5__DataValidationFault
#define soap_write_PointerTons5__DataValidationFault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons5__DataValidationFault(soap, data),0) || soap_put_PointerTons5__DataValidationFault(soap, data, "ns5:DataValidationFault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__DataValidationFault ** SOAP_FMAC4 soap_get_PointerTons5__DataValidationFault(struct soap*, ns5__DataValidationFault **, const char*, const char*);

#ifndef soap_read_PointerTons5__DataValidationFault
#define soap_read_PointerTons5__DataValidationFault(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons5__DataValidationFault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToint
#define SOAP_TYPE_PointerToint (142)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToint(struct soap*, int *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToint(struct soap*, const char *, int, int *const*, const char *);
SOAP_FMAC3 int ** SOAP_FMAC4 soap_in_PointerToint(struct soap*, const char*, int **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToint(struct soap*, int *const*, const char*, const char*);

#ifndef soap_write_PointerToint
#define soap_write_PointerToint(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToint(soap, data),0) || soap_put_PointerToint(soap, data, "int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int ** SOAP_FMAC4 soap_get_PointerToint(struct soap*, int **, const char*, const char*);

#ifndef soap_read_PointerToint
#define soap_read_PointerToint(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToint(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons5__ArrayOfImageIdentifier
#define SOAP_TYPE_PointerTons5__ArrayOfImageIdentifier (141)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons5__ArrayOfImageIdentifier(struct soap*, ns5__ArrayOfImageIdentifier *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons5__ArrayOfImageIdentifier(struct soap*, const char *, int, ns5__ArrayOfImageIdentifier *const*, const char *);
SOAP_FMAC3 ns5__ArrayOfImageIdentifier ** SOAP_FMAC4 soap_in_PointerTons5__ArrayOfImageIdentifier(struct soap*, const char*, ns5__ArrayOfImageIdentifier **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons5__ArrayOfImageIdentifier(struct soap*, ns5__ArrayOfImageIdentifier *const*, const char*, const char*);

#ifndef soap_write_PointerTons5__ArrayOfImageIdentifier
#define soap_write_PointerTons5__ArrayOfImageIdentifier(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons5__ArrayOfImageIdentifier(soap, data),0) || soap_put_PointerTons5__ArrayOfImageIdentifier(soap, data, "ns5:ArrayOfImageIdentifier", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__ArrayOfImageIdentifier ** SOAP_FMAC4 soap_get_PointerTons5__ArrayOfImageIdentifier(struct soap*, ns5__ArrayOfImageIdentifier **, const char*, const char*);

#ifndef soap_read_PointerTons5__ArrayOfImageIdentifier
#define soap_read_PointerTons5__ArrayOfImageIdentifier(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons5__ArrayOfImageIdentifier(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons5__ArrayOfSeriesIdentifier
#define SOAP_TYPE_PointerTons5__ArrayOfSeriesIdentifier (140)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons5__ArrayOfSeriesIdentifier(struct soap*, ns5__ArrayOfSeriesIdentifier *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons5__ArrayOfSeriesIdentifier(struct soap*, const char *, int, ns5__ArrayOfSeriesIdentifier *const*, const char *);
SOAP_FMAC3 ns5__ArrayOfSeriesIdentifier ** SOAP_FMAC4 soap_in_PointerTons5__ArrayOfSeriesIdentifier(struct soap*, const char*, ns5__ArrayOfSeriesIdentifier **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons5__ArrayOfSeriesIdentifier(struct soap*, ns5__ArrayOfSeriesIdentifier *const*, const char*, const char*);

#ifndef soap_write_PointerTons5__ArrayOfSeriesIdentifier
#define soap_write_PointerTons5__ArrayOfSeriesIdentifier(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons5__ArrayOfSeriesIdentifier(soap, data),0) || soap_put_PointerTons5__ArrayOfSeriesIdentifier(soap, data, "ns5:ArrayOfSeriesIdentifier", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__ArrayOfSeriesIdentifier ** SOAP_FMAC4 soap_get_PointerTons5__ArrayOfSeriesIdentifier(struct soap*, ns5__ArrayOfSeriesIdentifier **, const char*, const char*);

#ifndef soap_read_PointerTons5__ArrayOfSeriesIdentifier
#define soap_read_PointerTons5__ArrayOfSeriesIdentifier(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons5__ArrayOfSeriesIdentifier(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons5__ArrayOfStudyRootStudyIdentifier
#define SOAP_TYPE_PointerTons5__ArrayOfStudyRootStudyIdentifier (139)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons5__ArrayOfStudyRootStudyIdentifier(struct soap*, ns5__ArrayOfStudyRootStudyIdentifier *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons5__ArrayOfStudyRootStudyIdentifier(struct soap*, const char *, int, ns5__ArrayOfStudyRootStudyIdentifier *const*, const char *);
SOAP_FMAC3 ns5__ArrayOfStudyRootStudyIdentifier ** SOAP_FMAC4 soap_in_PointerTons5__ArrayOfStudyRootStudyIdentifier(struct soap*, const char*, ns5__ArrayOfStudyRootStudyIdentifier **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons5__ArrayOfStudyRootStudyIdentifier(struct soap*, ns5__ArrayOfStudyRootStudyIdentifier *const*, const char*, const char*);

#ifndef soap_write_PointerTons5__ArrayOfStudyRootStudyIdentifier
#define soap_write_PointerTons5__ArrayOfStudyRootStudyIdentifier(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons5__ArrayOfStudyRootStudyIdentifier(soap, data),0) || soap_put_PointerTons5__ArrayOfStudyRootStudyIdentifier(soap, data, "ns5:ArrayOfStudyRootStudyIdentifier", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__ArrayOfStudyRootStudyIdentifier ** SOAP_FMAC4 soap_get_PointerTons5__ArrayOfStudyRootStudyIdentifier(struct soap*, ns5__ArrayOfStudyRootStudyIdentifier **, const char*, const char*);

#ifndef soap_read_PointerTons5__ArrayOfStudyRootStudyIdentifier
#define soap_read_PointerTons5__ArrayOfStudyRootStudyIdentifier(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons5__ArrayOfStudyRootStudyIdentifier(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons5__ImageIdentifier
#define SOAP_TYPE_PointerTons5__ImageIdentifier (137)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons5__ImageIdentifier(struct soap*, ns5__ImageIdentifier *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons5__ImageIdentifier(struct soap*, const char *, int, ns5__ImageIdentifier *const*, const char *);
SOAP_FMAC3 ns5__ImageIdentifier ** SOAP_FMAC4 soap_in_PointerTons5__ImageIdentifier(struct soap*, const char*, ns5__ImageIdentifier **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons5__ImageIdentifier(struct soap*, ns5__ImageIdentifier *const*, const char*, const char*);

#ifndef soap_write_PointerTons5__ImageIdentifier
#define soap_write_PointerTons5__ImageIdentifier(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons5__ImageIdentifier(soap, data),0) || soap_put_PointerTons5__ImageIdentifier(soap, data, "ns5:ImageIdentifier", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__ImageIdentifier ** SOAP_FMAC4 soap_get_PointerTons5__ImageIdentifier(struct soap*, ns5__ImageIdentifier **, const char*, const char*);

#ifndef soap_read_PointerTons5__ImageIdentifier
#define soap_read_PointerTons5__ImageIdentifier(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons5__ImageIdentifier(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons5__SeriesIdentifier
#define SOAP_TYPE_PointerTons5__SeriesIdentifier (135)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons5__SeriesIdentifier(struct soap*, ns5__SeriesIdentifier *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons5__SeriesIdentifier(struct soap*, const char *, int, ns5__SeriesIdentifier *const*, const char *);
SOAP_FMAC3 ns5__SeriesIdentifier ** SOAP_FMAC4 soap_in_PointerTons5__SeriesIdentifier(struct soap*, const char*, ns5__SeriesIdentifier **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons5__SeriesIdentifier(struct soap*, ns5__SeriesIdentifier *const*, const char*, const char*);

#ifndef soap_write_PointerTons5__SeriesIdentifier
#define soap_write_PointerTons5__SeriesIdentifier(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons5__SeriesIdentifier(soap, data),0) || soap_put_PointerTons5__SeriesIdentifier(soap, data, "ns5:SeriesIdentifier", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__SeriesIdentifier ** SOAP_FMAC4 soap_get_PointerTons5__SeriesIdentifier(struct soap*, ns5__SeriesIdentifier **, const char*, const char*);

#ifndef soap_read_PointerTons5__SeriesIdentifier
#define soap_read_PointerTons5__SeriesIdentifier(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons5__SeriesIdentifier(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons2__CloseViewerRequest
#define SOAP_TYPE_PointerTons2__CloseViewerRequest (132)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__CloseViewerRequest(struct soap*, ns2__CloseViewerRequest *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__CloseViewerRequest(struct soap*, const char *, int, ns2__CloseViewerRequest *const*, const char *);
SOAP_FMAC3 ns2__CloseViewerRequest ** SOAP_FMAC4 soap_in_PointerTons2__CloseViewerRequest(struct soap*, const char*, ns2__CloseViewerRequest **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__CloseViewerRequest(struct soap*, ns2__CloseViewerRequest *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__CloseViewerRequest
#define soap_write_PointerTons2__CloseViewerRequest(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons2__CloseViewerRequest(soap, data),0) || soap_put_PointerTons2__CloseViewerRequest(soap, data, "ns2:CloseViewerRequest", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__CloseViewerRequest ** SOAP_FMAC4 soap_get_PointerTons2__CloseViewerRequest(struct soap*, ns2__CloseViewerRequest **, const char*, const char*);

#ifndef soap_read_PointerTons2__CloseViewerRequest
#define soap_read_PointerTons2__CloseViewerRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__CloseViewerRequest(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons2__ActivateViewerRequest
#define SOAP_TYPE_PointerTons2__ActivateViewerRequest (131)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__ActivateViewerRequest(struct soap*, ns2__ActivateViewerRequest *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__ActivateViewerRequest(struct soap*, const char *, int, ns2__ActivateViewerRequest *const*, const char *);
SOAP_FMAC3 ns2__ActivateViewerRequest ** SOAP_FMAC4 soap_in_PointerTons2__ActivateViewerRequest(struct soap*, const char*, ns2__ActivateViewerRequest **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__ActivateViewerRequest(struct soap*, ns2__ActivateViewerRequest *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__ActivateViewerRequest
#define soap_write_PointerTons2__ActivateViewerRequest(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons2__ActivateViewerRequest(soap, data),0) || soap_put_PointerTons2__ActivateViewerRequest(soap, data, "ns2:ActivateViewerRequest", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__ActivateViewerRequest ** SOAP_FMAC4 soap_get_PointerTons2__ActivateViewerRequest(struct soap*, ns2__ActivateViewerRequest **, const char*, const char*);

#ifndef soap_read_PointerTons2__ActivateViewerRequest
#define soap_read_PointerTons2__ActivateViewerRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__ActivateViewerRequest(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons2__OpenStudiesResult
#define SOAP_TYPE_PointerTons2__OpenStudiesResult (130)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__OpenStudiesResult(struct soap*, ns2__OpenStudiesResult *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__OpenStudiesResult(struct soap*, const char *, int, ns2__OpenStudiesResult *const*, const char *);
SOAP_FMAC3 ns2__OpenStudiesResult ** SOAP_FMAC4 soap_in_PointerTons2__OpenStudiesResult(struct soap*, const char*, ns2__OpenStudiesResult **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__OpenStudiesResult(struct soap*, ns2__OpenStudiesResult *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__OpenStudiesResult
#define soap_write_PointerTons2__OpenStudiesResult(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons2__OpenStudiesResult(soap, data),0) || soap_put_PointerTons2__OpenStudiesResult(soap, data, "ns2:OpenStudiesResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__OpenStudiesResult ** SOAP_FMAC4 soap_get_PointerTons2__OpenStudiesResult(struct soap*, ns2__OpenStudiesResult **, const char*, const char*);

#ifndef soap_read_PointerTons2__OpenStudiesResult
#define soap_read_PointerTons2__OpenStudiesResult(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__OpenStudiesResult(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons2__OpenStudiesRequest
#define SOAP_TYPE_PointerTons2__OpenStudiesRequest (129)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__OpenStudiesRequest(struct soap*, ns2__OpenStudiesRequest *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__OpenStudiesRequest(struct soap*, const char *, int, ns2__OpenStudiesRequest *const*, const char *);
SOAP_FMAC3 ns2__OpenStudiesRequest ** SOAP_FMAC4 soap_in_PointerTons2__OpenStudiesRequest(struct soap*, const char*, ns2__OpenStudiesRequest **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__OpenStudiesRequest(struct soap*, ns2__OpenStudiesRequest *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__OpenStudiesRequest
#define soap_write_PointerTons2__OpenStudiesRequest(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons2__OpenStudiesRequest(soap, data),0) || soap_put_PointerTons2__OpenStudiesRequest(soap, data, "ns2:OpenStudiesRequest", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__OpenStudiesRequest ** SOAP_FMAC4 soap_get_PointerTons2__OpenStudiesRequest(struct soap*, ns2__OpenStudiesRequest **, const char*, const char*);

#ifndef soap_read_PointerTons2__OpenStudiesRequest
#define soap_read_PointerTons2__OpenStudiesRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__OpenStudiesRequest(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons2__GetViewerInfoResult
#define SOAP_TYPE_PointerTons2__GetViewerInfoResult (128)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__GetViewerInfoResult(struct soap*, ns2__GetViewerInfoResult *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__GetViewerInfoResult(struct soap*, const char *, int, ns2__GetViewerInfoResult *const*, const char *);
SOAP_FMAC3 ns2__GetViewerInfoResult ** SOAP_FMAC4 soap_in_PointerTons2__GetViewerInfoResult(struct soap*, const char*, ns2__GetViewerInfoResult **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__GetViewerInfoResult(struct soap*, ns2__GetViewerInfoResult *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__GetViewerInfoResult
#define soap_write_PointerTons2__GetViewerInfoResult(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons2__GetViewerInfoResult(soap, data),0) || soap_put_PointerTons2__GetViewerInfoResult(soap, data, "ns2:GetViewerInfoResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__GetViewerInfoResult ** SOAP_FMAC4 soap_get_PointerTons2__GetViewerInfoResult(struct soap*, ns2__GetViewerInfoResult **, const char*, const char*);

#ifndef soap_read_PointerTons2__GetViewerInfoResult
#define soap_read_PointerTons2__GetViewerInfoResult(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__GetViewerInfoResult(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons2__GetViewerInfoRequest
#define SOAP_TYPE_PointerTons2__GetViewerInfoRequest (127)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__GetViewerInfoRequest(struct soap*, ns2__GetViewerInfoRequest *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__GetViewerInfoRequest(struct soap*, const char *, int, ns2__GetViewerInfoRequest *const*, const char *);
SOAP_FMAC3 ns2__GetViewerInfoRequest ** SOAP_FMAC4 soap_in_PointerTons2__GetViewerInfoRequest(struct soap*, const char*, ns2__GetViewerInfoRequest **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__GetViewerInfoRequest(struct soap*, ns2__GetViewerInfoRequest *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__GetViewerInfoRequest
#define soap_write_PointerTons2__GetViewerInfoRequest(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons2__GetViewerInfoRequest(soap, data),0) || soap_put_PointerTons2__GetViewerInfoRequest(soap, data, "ns2:GetViewerInfoRequest", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__GetViewerInfoRequest ** SOAP_FMAC4 soap_get_PointerTons2__GetViewerInfoRequest(struct soap*, ns2__GetViewerInfoRequest **, const char*, const char*);

#ifndef soap_read_PointerTons2__GetViewerInfoRequest
#define soap_read_PointerTons2__GetViewerInfoRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__GetViewerInfoRequest(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons2__GetActiveViewersResult
#define SOAP_TYPE_PointerTons2__GetActiveViewersResult (126)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__GetActiveViewersResult(struct soap*, ns2__GetActiveViewersResult *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__GetActiveViewersResult(struct soap*, const char *, int, ns2__GetActiveViewersResult *const*, const char *);
SOAP_FMAC3 ns2__GetActiveViewersResult ** SOAP_FMAC4 soap_in_PointerTons2__GetActiveViewersResult(struct soap*, const char*, ns2__GetActiveViewersResult **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__GetActiveViewersResult(struct soap*, ns2__GetActiveViewersResult *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__GetActiveViewersResult
#define soap_write_PointerTons2__GetActiveViewersResult(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons2__GetActiveViewersResult(soap, data),0) || soap_put_PointerTons2__GetActiveViewersResult(soap, data, "ns2:GetActiveViewersResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__GetActiveViewersResult ** SOAP_FMAC4 soap_get_PointerTons2__GetActiveViewersResult(struct soap*, ns2__GetActiveViewersResult **, const char*, const char*);

#ifndef soap_read_PointerTons2__GetActiveViewersResult
#define soap_read_PointerTons2__GetActiveViewersResult(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__GetActiveViewersResult(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons2__GetViewersResult
#define SOAP_TYPE_PointerTons2__GetViewersResult (125)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__GetViewersResult(struct soap*, ns2__GetViewersResult *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__GetViewersResult(struct soap*, const char *, int, ns2__GetViewersResult *const*, const char *);
SOAP_FMAC3 ns2__GetViewersResult ** SOAP_FMAC4 soap_in_PointerTons2__GetViewersResult(struct soap*, const char*, ns2__GetViewersResult **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__GetViewersResult(struct soap*, ns2__GetViewersResult *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__GetViewersResult
#define soap_write_PointerTons2__GetViewersResult(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons2__GetViewersResult(soap, data),0) || soap_put_PointerTons2__GetViewersResult(soap, data, "ns2:GetViewersResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__GetViewersResult ** SOAP_FMAC4 soap_get_PointerTons2__GetViewersResult(struct soap*, ns2__GetViewersResult **, const char*, const char*);

#ifndef soap_read_PointerTons2__GetViewersResult
#define soap_read_PointerTons2__GetViewersResult(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__GetViewersResult(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons2__GetViewersRequest
#define SOAP_TYPE_PointerTons2__GetViewersRequest (124)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__GetViewersRequest(struct soap*, ns2__GetViewersRequest *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__GetViewersRequest(struct soap*, const char *, int, ns2__GetViewersRequest *const*, const char *);
SOAP_FMAC3 ns2__GetViewersRequest ** SOAP_FMAC4 soap_in_PointerTons2__GetViewersRequest(struct soap*, const char*, ns2__GetViewersRequest **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__GetViewersRequest(struct soap*, ns2__GetViewersRequest *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__GetViewersRequest
#define soap_write_PointerTons2__GetViewersRequest(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons2__GetViewersRequest(soap, data),0) || soap_put_PointerTons2__GetViewersRequest(soap, data, "ns2:GetViewersRequest", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__GetViewersRequest ** SOAP_FMAC4 soap_get_PointerTons2__GetViewersRequest(struct soap*, ns2__GetViewersRequest **, const char*, const char*);

#ifndef soap_read_PointerTons2__GetViewersRequest
#define soap_read_PointerTons2__GetViewersRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__GetViewersRequest(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons2__OpenFilesResult
#define SOAP_TYPE_PointerTons2__OpenFilesResult (123)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__OpenFilesResult(struct soap*, ns2__OpenFilesResult *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__OpenFilesResult(struct soap*, const char *, int, ns2__OpenFilesResult *const*, const char *);
SOAP_FMAC3 ns2__OpenFilesResult ** SOAP_FMAC4 soap_in_PointerTons2__OpenFilesResult(struct soap*, const char*, ns2__OpenFilesResult **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__OpenFilesResult(struct soap*, ns2__OpenFilesResult *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__OpenFilesResult
#define soap_write_PointerTons2__OpenFilesResult(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons2__OpenFilesResult(soap, data),0) || soap_put_PointerTons2__OpenFilesResult(soap, data, "ns2:OpenFilesResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__OpenFilesResult ** SOAP_FMAC4 soap_get_PointerTons2__OpenFilesResult(struct soap*, ns2__OpenFilesResult **, const char*, const char*);

#ifndef soap_read_PointerTons2__OpenFilesResult
#define soap_read_PointerTons2__OpenFilesResult(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__OpenFilesResult(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons2__OpenFilesRequest
#define SOAP_TYPE_PointerTons2__OpenFilesRequest (122)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__OpenFilesRequest(struct soap*, ns2__OpenFilesRequest *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__OpenFilesRequest(struct soap*, const char *, int, ns2__OpenFilesRequest *const*, const char *);
SOAP_FMAC3 ns2__OpenFilesRequest ** SOAP_FMAC4 soap_in_PointerTons2__OpenFilesRequest(struct soap*, const char*, ns2__OpenFilesRequest **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__OpenFilesRequest(struct soap*, ns2__OpenFilesRequest *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__OpenFilesRequest
#define soap_write_PointerTons2__OpenFilesRequest(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons2__OpenFilesRequest(soap, data),0) || soap_put_PointerTons2__OpenFilesRequest(soap, data, "ns2:OpenFilesRequest", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__OpenFilesRequest ** SOAP_FMAC4 soap_get_PointerTons2__OpenFilesRequest(struct soap*, ns2__OpenFilesRequest **, const char*, const char*);

#ifndef soap_read_PointerTons2__OpenFilesRequest
#define soap_read_PointerTons2__OpenFilesRequest(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__OpenFilesRequest(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons2__OpenStudyInfo
#define SOAP_TYPE_PointerTons2__OpenStudyInfo (120)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__OpenStudyInfo(struct soap*, ns2__OpenStudyInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__OpenStudyInfo(struct soap*, const char *, int, ns2__OpenStudyInfo *const*, const char *);
SOAP_FMAC3 ns2__OpenStudyInfo ** SOAP_FMAC4 soap_in_PointerTons2__OpenStudyInfo(struct soap*, const char*, ns2__OpenStudyInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__OpenStudyInfo(struct soap*, ns2__OpenStudyInfo *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__OpenStudyInfo
#define soap_write_PointerTons2__OpenStudyInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons2__OpenStudyInfo(soap, data),0) || soap_put_PointerTons2__OpenStudyInfo(soap, data, "ns2:OpenStudyInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__OpenStudyInfo ** SOAP_FMAC4 soap_get_PointerTons2__OpenStudyInfo(struct soap*, ns2__OpenStudyInfo **, const char*, const char*);

#ifndef soap_read_PointerTons2__OpenStudyInfo
#define soap_read_PointerTons2__OpenStudyInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__OpenStudyInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons2__ArrayOfOpenStudyInfo
#define SOAP_TYPE_PointerTons2__ArrayOfOpenStudyInfo (119)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__ArrayOfOpenStudyInfo(struct soap*, ns2__ArrayOfOpenStudyInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__ArrayOfOpenStudyInfo(struct soap*, const char *, int, ns2__ArrayOfOpenStudyInfo *const*, const char *);
SOAP_FMAC3 ns2__ArrayOfOpenStudyInfo ** SOAP_FMAC4 soap_in_PointerTons2__ArrayOfOpenStudyInfo(struct soap*, const char*, ns2__ArrayOfOpenStudyInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__ArrayOfOpenStudyInfo(struct soap*, ns2__ArrayOfOpenStudyInfo *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__ArrayOfOpenStudyInfo
#define soap_write_PointerTons2__ArrayOfOpenStudyInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons2__ArrayOfOpenStudyInfo(soap, data),0) || soap_put_PointerTons2__ArrayOfOpenStudyInfo(soap, data, "ns2:ArrayOfOpenStudyInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__ArrayOfOpenStudyInfo ** SOAP_FMAC4 soap_get_PointerTons2__ArrayOfOpenStudyInfo(struct soap*, ns2__ArrayOfOpenStudyInfo **, const char*, const char*);

#ifndef soap_read_PointerTons2__ArrayOfOpenStudyInfo
#define soap_read_PointerTons2__ArrayOfOpenStudyInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__ArrayOfOpenStudyInfo(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons2__ArrayOfViewer
#define SOAP_TYPE_PointerTons2__ArrayOfViewer (117)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__ArrayOfViewer(struct soap*, ns2__ArrayOfViewer *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__ArrayOfViewer(struct soap*, const char *, int, ns2__ArrayOfViewer *const*, const char *);
SOAP_FMAC3 ns2__ArrayOfViewer ** SOAP_FMAC4 soap_in_PointerTons2__ArrayOfViewer(struct soap*, const char*, ns2__ArrayOfViewer **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__ArrayOfViewer(struct soap*, ns2__ArrayOfViewer *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__ArrayOfViewer
#define soap_write_PointerTons2__ArrayOfViewer(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons2__ArrayOfViewer(soap, data),0) || soap_put_PointerTons2__ArrayOfViewer(soap, data, "ns2:ArrayOfViewer", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__ArrayOfViewer ** SOAP_FMAC4 soap_get_PointerTons2__ArrayOfViewer(struct soap*, ns2__ArrayOfViewer **, const char*, const char*);

#ifndef soap_read_PointerTons2__ArrayOfViewer
#define soap_read_PointerTons2__ArrayOfViewer(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__ArrayOfViewer(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTostd__string
#define SOAP_TYPE_PointerTostd__string (116)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__string(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__string(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTostd__string(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__string(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTostd__string
#define soap_write_PointerTostd__string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTostd__string(soap, data),0) || soap_put_PointerTostd__string(soap, data, "string", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTostd__string(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTostd__string
#define soap_read_PointerTostd__string(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostd__string(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons5__StudyRootStudyIdentifier
#define SOAP_TYPE_PointerTons5__StudyRootStudyIdentifier (115)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons5__StudyRootStudyIdentifier(struct soap*, ns5__StudyRootStudyIdentifier *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons5__StudyRootStudyIdentifier(struct soap*, const char *, int, ns5__StudyRootStudyIdentifier *const*, const char *);
SOAP_FMAC3 ns5__StudyRootStudyIdentifier ** SOAP_FMAC4 soap_in_PointerTons5__StudyRootStudyIdentifier(struct soap*, const char*, ns5__StudyRootStudyIdentifier **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons5__StudyRootStudyIdentifier(struct soap*, ns5__StudyRootStudyIdentifier *const*, const char*, const char*);

#ifndef soap_write_PointerTons5__StudyRootStudyIdentifier
#define soap_write_PointerTons5__StudyRootStudyIdentifier(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons5__StudyRootStudyIdentifier(soap, data),0) || soap_put_PointerTons5__StudyRootStudyIdentifier(soap, data, "ns5:StudyRootStudyIdentifier", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__StudyRootStudyIdentifier ** SOAP_FMAC4 soap_get_PointerTons5__StudyRootStudyIdentifier(struct soap*, ns5__StudyRootStudyIdentifier **, const char*, const char*);

#ifndef soap_read_PointerTons5__StudyRootStudyIdentifier
#define soap_read_PointerTons5__StudyRootStudyIdentifier(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons5__StudyRootStudyIdentifier(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons2__Viewer
#define SOAP_TYPE_PointerTons2__Viewer (114)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__Viewer(struct soap*, ns2__Viewer *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__Viewer(struct soap*, const char *, int, ns2__Viewer *const*, const char *);
SOAP_FMAC3 ns2__Viewer ** SOAP_FMAC4 soap_in_PointerTons2__Viewer(struct soap*, const char*, ns2__Viewer **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__Viewer(struct soap*, ns2__Viewer *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__Viewer
#define soap_write_PointerTons2__Viewer(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons2__Viewer(soap, data),0) || soap_put_PointerTons2__Viewer(soap, data, "ns2:Viewer", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns2__Viewer ** SOAP_FMAC4 soap_get_PointerTons2__Viewer(struct soap*, ns2__Viewer **, const char*, const char*);

#ifndef soap_read_PointerTons2__Viewer
#define soap_read_PointerTons2__Viewer(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__Viewer(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTobool
#define SOAP_TYPE_PointerTobool (113)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTobool(struct soap*, bool *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTobool(struct soap*, const char *, int, bool *const*, const char *);
SOAP_FMAC3 bool ** SOAP_FMAC4 soap_in_PointerTobool(struct soap*, const char*, bool **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTobool(struct soap*, bool *const*, const char*, const char*);

#ifndef soap_write_PointerTobool
#define soap_write_PointerTobool(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTobool(soap, data),0) || soap_put_PointerTobool(soap, data, "boolean", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 bool ** SOAP_FMAC4 soap_get_PointerTobool(struct soap*, bool **, const char*, const char*);

#ifndef soap_read_PointerTobool
#define soap_read_PointerTobool(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTobool(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons4__ArrayOfstring
#define SOAP_TYPE_PointerTons4__ArrayOfstring (112)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons4__ArrayOfstring(struct soap*, ns4__ArrayOfstring *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons4__ArrayOfstring(struct soap*, const char *, int, ns4__ArrayOfstring *const*, const char *);
SOAP_FMAC3 ns4__ArrayOfstring ** SOAP_FMAC4 soap_in_PointerTons4__ArrayOfstring(struct soap*, const char*, ns4__ArrayOfstring **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons4__ArrayOfstring(struct soap*, ns4__ArrayOfstring *const*, const char*, const char*);

#ifndef soap_write_PointerTons4__ArrayOfstring
#define soap_write_PointerTons4__ArrayOfstring(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons4__ArrayOfstring(soap, data),0) || soap_put_PointerTons4__ArrayOfstring(soap, data, "ns4:ArrayOfstring", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns4__ArrayOfstring ** SOAP_FMAC4 soap_get_PointerTons4__ArrayOfstring(struct soap*, ns4__ArrayOfstring **, const char*, const char*);

#ifndef soap_read_PointerTons4__ArrayOfstring
#define soap_read_PointerTons4__ArrayOfstring(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons4__ArrayOfstring(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTounsignedByte
#define SOAP_TYPE_PointerTounsignedByte (15)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTounsignedByte(struct soap*, unsigned char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTounsignedByte(struct soap*, const char *, int, unsigned char *const*, const char *);
SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_in_PointerTounsignedByte(struct soap*, const char*, unsigned char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTounsignedByte(struct soap*, unsigned char *const*, const char*, const char*);

#ifndef soap_write_PointerTounsignedByte
#define soap_write_PointerTounsignedByte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTounsignedByte(soap, data),0) || soap_put_PointerTounsignedByte(soap, data, "unsignedByte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_get_PointerTounsignedByte(struct soap*, unsigned char **, const char*, const char*);

#ifndef soap_read_PointerTounsignedByte
#define soap_read_PointerTounsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTounsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__QName(soap, data),0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_string(soap, data),0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTons5__ImageIdentifier
#define SOAP_TYPE_std__vectorTemplateOfPointerTons5__ImageIdentifier (138)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons5__ImageIdentifier(struct soap*, std::vector<ns5__ImageIdentifier * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons5__ImageIdentifier(struct soap*, const std::vector<ns5__ImageIdentifier * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons5__ImageIdentifier(struct soap*, const char*, int, const std::vector<ns5__ImageIdentifier * >*, const char*);
SOAP_FMAC3 std::vector<ns5__ImageIdentifier * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons5__ImageIdentifier(struct soap*, const char*, std::vector<ns5__ImageIdentifier * >*, const char*);
SOAP_FMAC1 std::vector<ns5__ImageIdentifier * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons5__ImageIdentifier(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns5__ImageIdentifier * > * soap_new_std__vectorTemplateOfPointerTons5__ImageIdentifier(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons5__ImageIdentifier(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTons5__ImageIdentifier(struct soap *soap, std::vector<ns5__ImageIdentifier * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTons5__ImageIdentifier(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTons5__SeriesIdentifier
#define SOAP_TYPE_std__vectorTemplateOfPointerTons5__SeriesIdentifier (136)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons5__SeriesIdentifier(struct soap*, std::vector<ns5__SeriesIdentifier * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons5__SeriesIdentifier(struct soap*, const std::vector<ns5__SeriesIdentifier * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons5__SeriesIdentifier(struct soap*, const char*, int, const std::vector<ns5__SeriesIdentifier * >*, const char*);
SOAP_FMAC3 std::vector<ns5__SeriesIdentifier * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons5__SeriesIdentifier(struct soap*, const char*, std::vector<ns5__SeriesIdentifier * >*, const char*);
SOAP_FMAC1 std::vector<ns5__SeriesIdentifier * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons5__SeriesIdentifier(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns5__SeriesIdentifier * > * soap_new_std__vectorTemplateOfPointerTons5__SeriesIdentifier(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons5__SeriesIdentifier(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTons5__SeriesIdentifier(struct soap *soap, std::vector<ns5__SeriesIdentifier * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTons5__SeriesIdentifier(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTons5__StudyRootStudyIdentifier
#define SOAP_TYPE_std__vectorTemplateOfPointerTons5__StudyRootStudyIdentifier (134)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons5__StudyRootStudyIdentifier(struct soap*, std::vector<ns5__StudyRootStudyIdentifier * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons5__StudyRootStudyIdentifier(struct soap*, const std::vector<ns5__StudyRootStudyIdentifier * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons5__StudyRootStudyIdentifier(struct soap*, const char*, int, const std::vector<ns5__StudyRootStudyIdentifier * >*, const char*);
SOAP_FMAC3 std::vector<ns5__StudyRootStudyIdentifier * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons5__StudyRootStudyIdentifier(struct soap*, const char*, std::vector<ns5__StudyRootStudyIdentifier * >*, const char*);
SOAP_FMAC1 std::vector<ns5__StudyRootStudyIdentifier * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons5__StudyRootStudyIdentifier(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns5__StudyRootStudyIdentifier * > * soap_new_std__vectorTemplateOfPointerTons5__StudyRootStudyIdentifier(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons5__StudyRootStudyIdentifier(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTons5__StudyRootStudyIdentifier(struct soap *soap, std::vector<ns5__StudyRootStudyIdentifier * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTons5__StudyRootStudyIdentifier(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfstd__string
#define SOAP_TYPE_std__vectorTemplateOfstd__string (133)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfstd__string(struct soap*, std::vector<std::string >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfstd__string(struct soap*, const std::vector<std::string >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfstd__string(struct soap*, const char*, int, const std::vector<std::string >*, const char*);
SOAP_FMAC3 std::vector<std::string >* SOAP_FMAC4 soap_in_std__vectorTemplateOfstd__string(struct soap*, const char*, std::vector<std::string >*, const char*);
SOAP_FMAC1 std::vector<std::string > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfstd__string(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<std::string > * soap_new_std__vectorTemplateOfstd__string(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfstd__string(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfstd__string(struct soap *soap, std::vector<std::string >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfstd__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTons2__OpenStudyInfo
#define SOAP_TYPE_std__vectorTemplateOfPointerTons2__OpenStudyInfo (121)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons2__OpenStudyInfo(struct soap*, std::vector<ns2__OpenStudyInfo * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons2__OpenStudyInfo(struct soap*, const std::vector<ns2__OpenStudyInfo * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons2__OpenStudyInfo(struct soap*, const char*, int, const std::vector<ns2__OpenStudyInfo * >*, const char*);
SOAP_FMAC3 std::vector<ns2__OpenStudyInfo * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons2__OpenStudyInfo(struct soap*, const char*, std::vector<ns2__OpenStudyInfo * >*, const char*);
SOAP_FMAC1 std::vector<ns2__OpenStudyInfo * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons2__OpenStudyInfo(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns2__OpenStudyInfo * > * soap_new_std__vectorTemplateOfPointerTons2__OpenStudyInfo(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons2__OpenStudyInfo(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTons2__OpenStudyInfo(struct soap *soap, std::vector<ns2__OpenStudyInfo * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTons2__OpenStudyInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTons2__Viewer
#define SOAP_TYPE_std__vectorTemplateOfPointerTons2__Viewer (118)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons2__Viewer(struct soap*, std::vector<ns2__Viewer * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons2__Viewer(struct soap*, const std::vector<ns2__Viewer * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons2__Viewer(struct soap*, const char*, int, const std::vector<ns2__Viewer * >*, const char*);
SOAP_FMAC3 std::vector<ns2__Viewer * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons2__Viewer(struct soap*, const char*, std::vector<ns2__Viewer * >*, const char*);
SOAP_FMAC1 std::vector<ns2__Viewer * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons2__Viewer(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns2__Viewer * > * soap_new_std__vectorTemplateOfPointerTons2__Viewer(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons2__Viewer(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTons2__Viewer(struct soap *soap, std::vector<ns2__Viewer * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTons2__Viewer(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

/* End of soapH.h */
