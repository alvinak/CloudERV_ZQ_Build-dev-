/* soapStudyLocatorProxy.h
   Generated by gSOAP 2.8.17r from ImageViewerAutomation.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapStudyLocatorProxy_H
#define soapStudyLocatorProxy_H
#include "soapH.h"

class SOAP_CMAC StudyLocatorProxy : public soap
{ public:
	/// Endpoint URL of service 'StudyLocatorProxy' (change as needed)
	const char *soap_endpoint;
	/// Constructor
	StudyLocatorProxy();
	/// Construct from another engine state
	StudyLocatorProxy(const struct soap&);
	/// Constructor with endpoint URL
	StudyLocatorProxy(const char *url);
	/// Constructor with engine input+output mode control
	StudyLocatorProxy(soap_mode iomode);
	/// Constructor with URL and input+output mode control
	StudyLocatorProxy(const char *url, soap_mode iomode);
	/// Constructor with engine input and output mode control
	StudyLocatorProxy(soap_mode imode, soap_mode omode);
	/// Destructor frees deserialized data
	virtual	~StudyLocatorProxy();
	/// Initializer used by constructors
	virtual	void StudyLocatorProxy_init(soap_mode imode, soap_mode omode);
	/// Delete all deserialized data (with soap_destroy and soap_end)
	virtual	void destroy();
	/// Delete all deserialized data and reset to default
	virtual	void reset();
	/// Disables and removes SOAP Header from message
	virtual	void soap_noheader();
	/// Get SOAP Header structure (NULL when absent)
	virtual	const SOAP_ENV__Header *soap_header();
	/// Get SOAP Fault structure (NULL when absent)
	virtual	const SOAP_ENV__Fault *soap_fault();
	/// Get SOAP Fault string (NULL when absent)
	virtual	const char *soap_fault_string();
	/// Get SOAP Fault detail as string (NULL when absent)
	virtual	const char *soap_fault_detail();
	/// Close connection (normally automatic, except for send_X ops)
	virtual	int soap_close_socket();
	/// Force close connection (can kill a thread blocked on IO)
	virtual	int soap_force_close_socket();
	/// Print fault
	virtual	void soap_print_fault(FILE*);
#ifndef WITH_LEAN
	/// Print fault to stream
#ifndef WITH_COMPAT
	virtual	void soap_stream_fault(std::ostream&);
#endif

	/// Put fault into buffer
	virtual	char *soap_sprint_fault(char *buf, size_t len);
#endif

	/// Web service operation 'StudyQuery' (returns error code or SOAP_OK)
	virtual	int StudyQuery(_ns5__StudyQuery *ns5__StudyQuery, _ns5__StudyQueryResponse *ns5__StudyQueryResponse) { return this->StudyQuery(NULL, NULL, ns5__StudyQuery, ns5__StudyQueryResponse); }
	virtual	int StudyQuery(const char *endpoint, const char *soap_action, _ns5__StudyQuery *ns5__StudyQuery, _ns5__StudyQueryResponse *ns5__StudyQueryResponse);

	/// Web service operation 'SeriesQuery' (returns error code or SOAP_OK)
	virtual	int SeriesQuery(_ns5__SeriesQuery *ns5__SeriesQuery, _ns5__SeriesQueryResponse *ns5__SeriesQueryResponse) { return this->SeriesQuery(NULL, NULL, ns5__SeriesQuery, ns5__SeriesQueryResponse); }
	virtual	int SeriesQuery(const char *endpoint, const char *soap_action, _ns5__SeriesQuery *ns5__SeriesQuery, _ns5__SeriesQueryResponse *ns5__SeriesQueryResponse);

	/// Web service operation 'ImageQuery' (returns error code or SOAP_OK)
	virtual	int ImageQuery(_ns5__ImageQuery *ns5__ImageQuery, _ns5__ImageQueryResponse *ns5__ImageQueryResponse) { return this->ImageQuery(NULL, NULL, ns5__ImageQuery, ns5__ImageQueryResponse); }
	virtual	int ImageQuery(const char *endpoint, const char *soap_action, _ns5__ImageQuery *ns5__ImageQuery, _ns5__ImageQueryResponse *ns5__ImageQueryResponse);

	/// Web service operation 'StudyQuery' (returns error code or SOAP_OK)
	virtual	int StudyQuery_(_ns5__StudyQuery *ns5__StudyQuery, _ns5__StudyQueryResponse *ns5__StudyQueryResponse) { return this->StudyQuery_(NULL, NULL, ns5__StudyQuery, ns5__StudyQueryResponse); }
	virtual	int StudyQuery_(const char *endpoint, const char *soap_action, _ns5__StudyQuery *ns5__StudyQuery, _ns5__StudyQueryResponse *ns5__StudyQueryResponse);

	/// Web service operation 'SeriesQuery' (returns error code or SOAP_OK)
	virtual	int SeriesQuery_(_ns5__SeriesQuery *ns5__SeriesQuery, _ns5__SeriesQueryResponse *ns5__SeriesQueryResponse) { return this->SeriesQuery_(NULL, NULL, ns5__SeriesQuery, ns5__SeriesQueryResponse); }
	virtual	int SeriesQuery_(const char *endpoint, const char *soap_action, _ns5__SeriesQuery *ns5__SeriesQuery, _ns5__SeriesQueryResponse *ns5__SeriesQueryResponse);

	/// Web service operation 'ImageQuery' (returns error code or SOAP_OK)
	virtual	int ImageQuery_(_ns5__ImageQuery *ns5__ImageQuery, _ns5__ImageQueryResponse *ns5__ImageQueryResponse) { return this->ImageQuery_(NULL, NULL, ns5__ImageQuery, ns5__ImageQueryResponse); }
	virtual	int ImageQuery_(const char *endpoint, const char *soap_action, _ns5__ImageQuery *ns5__ImageQuery, _ns5__ImageQueryResponse *ns5__ImageQueryResponse);

	/// Web service operation 'StudyQuery' (returns error code or SOAP_OK)
	virtual	int StudyQuery__(_ns5__StudyQuery *ns5__StudyQuery, _ns5__StudyQueryResponse *ns5__StudyQueryResponse) { return this->StudyQuery__(NULL, NULL, ns5__StudyQuery, ns5__StudyQueryResponse); }
	virtual	int StudyQuery__(const char *endpoint, const char *soap_action, _ns5__StudyQuery *ns5__StudyQuery, _ns5__StudyQueryResponse *ns5__StudyQueryResponse);

	/// Web service operation 'SeriesQuery' (returns error code or SOAP_OK)
	virtual	int SeriesQuery__(_ns5__SeriesQuery *ns5__SeriesQuery, _ns5__SeriesQueryResponse *ns5__SeriesQueryResponse) { return this->SeriesQuery__(NULL, NULL, ns5__SeriesQuery, ns5__SeriesQueryResponse); }
	virtual	int SeriesQuery__(const char *endpoint, const char *soap_action, _ns5__SeriesQuery *ns5__SeriesQuery, _ns5__SeriesQueryResponse *ns5__SeriesQueryResponse);

	/// Web service operation 'ImageQuery' (returns error code or SOAP_OK)
	virtual	int ImageQuery__(_ns5__ImageQuery *ns5__ImageQuery, _ns5__ImageQueryResponse *ns5__ImageQueryResponse) { return this->ImageQuery__(NULL, NULL, ns5__ImageQuery, ns5__ImageQueryResponse); }
	virtual	int ImageQuery__(const char *endpoint, const char *soap_action, _ns5__ImageQuery *ns5__ImageQuery, _ns5__ImageQueryResponse *ns5__ImageQueryResponse);
};
#endif
