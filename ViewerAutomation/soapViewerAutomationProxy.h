/* soapViewerAutomationProxy.h
   Generated by gSOAP 2.8.17r from ImageViewerAutomation.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapViewerAutomationProxy_H
#define soapViewerAutomationProxy_H
#include "soapH.h"

class SOAP_CMAC ViewerAutomationProxy : public soap
{ public:
	/// Endpoint URL of service 'ViewerAutomationProxy' (change as needed)
	const char *soap_endpoint;
	/// Constructor
	ViewerAutomationProxy();
	/// Construct from another engine state
	ViewerAutomationProxy(const struct soap&);
	/// Constructor with endpoint URL
	ViewerAutomationProxy(const char *url);
	/// Constructor with engine input+output mode control
	ViewerAutomationProxy(soap_mode iomode);
	/// Constructor with URL and input+output mode control
	ViewerAutomationProxy(const char *url, soap_mode iomode);
	/// Constructor with engine input and output mode control
	ViewerAutomationProxy(soap_mode imode, soap_mode omode);
	/// Destructor frees deserialized data
	virtual	~ViewerAutomationProxy();
	/// Initializer used by constructors
	virtual	void ViewerAutomationProxy_init(soap_mode imode, soap_mode omode);
	/// Delete all deserialized data (with soap_destroy and soap_end)
	virtual	void destroy();
	/// Delete all deserialized data and reset to default
	virtual	void reset();
	/// Disables and removes SOAP Header from message
	virtual	void soap_noheader();
	/// Get SOAP Header structure (NULL when absent)
	virtual	const SOAP_ENV__Header *soap_header();
	/// Get SOAP Fault structure (NULL when absent)
	virtual	const SOAP_ENV__Fault *soap_fault();
	/// Get SOAP Fault string (NULL when absent)
	virtual	const char *soap_fault_string();
	/// Get SOAP Fault detail as string (NULL when absent)
	virtual	const char *soap_fault_detail();
	/// Close connection (normally automatic, except for send_X ops)
	virtual	int soap_close_socket();
	/// Force close connection (can kill a thread blocked on IO)
	virtual	int soap_force_close_socket();
	/// Print fault
	virtual	void soap_print_fault(FILE*);
#ifndef WITH_LEAN
	/// Print fault to stream
#ifndef WITH_COMPAT
	virtual	void soap_stream_fault(std::ostream&);
#endif

	/// Put fault into buffer
	virtual	char *soap_sprint_fault(char *buf, size_t len);
#endif

	/// Web service operation 'OpenFiles' (returns error code or SOAP_OK)
	virtual	int OpenFiles(_ns2__OpenFiles *ns2__OpenFiles, _ns2__OpenFilesResponse *ns2__OpenFilesResponse) { return this->OpenFiles(NULL, NULL, ns2__OpenFiles, ns2__OpenFilesResponse); }
	virtual	int OpenFiles(const char *endpoint, const char *soap_action, _ns2__OpenFiles *ns2__OpenFiles, _ns2__OpenFilesResponse *ns2__OpenFilesResponse);

	/// Web service operation 'GetViewers' (returns error code or SOAP_OK)
	virtual	int GetViewers(_ns2__GetViewers *ns2__GetViewers, _ns2__GetViewersResponse *ns2__GetViewersResponse) { return this->GetViewers(NULL, NULL, ns2__GetViewers, ns2__GetViewersResponse); }
	virtual	int GetViewers(const char *endpoint, const char *soap_action, _ns2__GetViewers *ns2__GetViewers, _ns2__GetViewersResponse *ns2__GetViewersResponse);

	/// Web service operation 'GetActiveViewers' (returns error code or SOAP_OK)
	virtual	int GetActiveViewers(_ns2__GetActiveViewers *ns2__GetActiveViewers, _ns2__GetActiveViewersResponse *ns2__GetActiveViewersResponse) { return this->GetActiveViewers(NULL, NULL, ns2__GetActiveViewers, ns2__GetActiveViewersResponse); }
	virtual	int GetActiveViewers(const char *endpoint, const char *soap_action, _ns2__GetActiveViewers *ns2__GetActiveViewers, _ns2__GetActiveViewersResponse *ns2__GetActiveViewersResponse);

	/// Web service operation 'GetViewerInfo' (returns error code or SOAP_OK)
	virtual	int GetViewerInfo(_ns2__GetViewerInfo *ns2__GetViewerInfo, _ns2__GetViewerInfoResponse *ns2__GetViewerInfoResponse) { return this->GetViewerInfo(NULL, NULL, ns2__GetViewerInfo, ns2__GetViewerInfoResponse); }
	virtual	int GetViewerInfo(const char *endpoint, const char *soap_action, _ns2__GetViewerInfo *ns2__GetViewerInfo, _ns2__GetViewerInfoResponse *ns2__GetViewerInfoResponse);

	/// Web service operation 'OpenStudies' (returns error code or SOAP_OK)
	virtual	int OpenStudies(_ns2__OpenStudies *ns2__OpenStudies, _ns2__OpenStudiesResponse *ns2__OpenStudiesResponse) { return this->OpenStudies(NULL, NULL, ns2__OpenStudies, ns2__OpenStudiesResponse); }
	virtual	int OpenStudies(const char *endpoint, const char *soap_action, _ns2__OpenStudies *ns2__OpenStudies, _ns2__OpenStudiesResponse *ns2__OpenStudiesResponse);

	/// Web service operation 'ActivateViewer' (returns error code or SOAP_OK)
	virtual	int ActivateViewer(_ns2__ActivateViewer *ns2__ActivateViewer, _ns2__ActivateViewerResponse *ns2__ActivateViewerResponse) { return this->ActivateViewer(NULL, NULL, ns2__ActivateViewer, ns2__ActivateViewerResponse); }
	virtual	int ActivateViewer(const char *endpoint, const char *soap_action, _ns2__ActivateViewer *ns2__ActivateViewer, _ns2__ActivateViewerResponse *ns2__ActivateViewerResponse);

	/// Web service operation 'CloseViewer' (returns error code or SOAP_OK)
	virtual	int CloseViewer(_ns2__CloseViewer *ns2__CloseViewer, _ns2__CloseViewerResponse *ns2__CloseViewerResponse) { return this->CloseViewer(NULL, NULL, ns2__CloseViewer, ns2__CloseViewerResponse); }
	virtual	int CloseViewer(const char *endpoint, const char *soap_action, _ns2__CloseViewer *ns2__CloseViewer, _ns2__CloseViewerResponse *ns2__CloseViewerResponse);

	/// Web service operation 'OpenFiles' (returns error code or SOAP_OK)
	virtual	int OpenFiles_(_ns2__OpenFiles *ns2__OpenFiles, _ns2__OpenFilesResponse *ns2__OpenFilesResponse) { return this->OpenFiles_(NULL, NULL, ns2__OpenFiles, ns2__OpenFilesResponse); }
	virtual	int OpenFiles_(const char *endpoint, const char *soap_action, _ns2__OpenFiles *ns2__OpenFiles, _ns2__OpenFilesResponse *ns2__OpenFilesResponse);

	/// Web service operation 'GetViewers' (returns error code or SOAP_OK)
	virtual	int GetViewers_(_ns2__GetViewers *ns2__GetViewers, _ns2__GetViewersResponse *ns2__GetViewersResponse) { return this->GetViewers_(NULL, NULL, ns2__GetViewers, ns2__GetViewersResponse); }
	virtual	int GetViewers_(const char *endpoint, const char *soap_action, _ns2__GetViewers *ns2__GetViewers, _ns2__GetViewersResponse *ns2__GetViewersResponse);

	/// Web service operation 'GetActiveViewers' (returns error code or SOAP_OK)
	virtual	int GetActiveViewers_(_ns2__GetActiveViewers *ns2__GetActiveViewers, _ns2__GetActiveViewersResponse *ns2__GetActiveViewersResponse) { return this->GetActiveViewers_(NULL, NULL, ns2__GetActiveViewers, ns2__GetActiveViewersResponse); }
	virtual	int GetActiveViewers_(const char *endpoint, const char *soap_action, _ns2__GetActiveViewers *ns2__GetActiveViewers, _ns2__GetActiveViewersResponse *ns2__GetActiveViewersResponse);

	/// Web service operation 'GetViewerInfo' (returns error code or SOAP_OK)
	virtual	int GetViewerInfo_(_ns2__GetViewerInfo *ns2__GetViewerInfo, _ns2__GetViewerInfoResponse *ns2__GetViewerInfoResponse) { return this->GetViewerInfo_(NULL, NULL, ns2__GetViewerInfo, ns2__GetViewerInfoResponse); }
	virtual	int GetViewerInfo_(const char *endpoint, const char *soap_action, _ns2__GetViewerInfo *ns2__GetViewerInfo, _ns2__GetViewerInfoResponse *ns2__GetViewerInfoResponse);

	/// Web service operation 'OpenStudies' (returns error code or SOAP_OK)
	virtual	int OpenStudies_(_ns2__OpenStudies *ns2__OpenStudies, _ns2__OpenStudiesResponse *ns2__OpenStudiesResponse) { return this->OpenStudies_(NULL, NULL, ns2__OpenStudies, ns2__OpenStudiesResponse); }
	virtual	int OpenStudies_(const char *endpoint, const char *soap_action, _ns2__OpenStudies *ns2__OpenStudies, _ns2__OpenStudiesResponse *ns2__OpenStudiesResponse);

	/// Web service operation 'ActivateViewer' (returns error code or SOAP_OK)
	virtual	int ActivateViewer_(_ns2__ActivateViewer *ns2__ActivateViewer, _ns2__ActivateViewerResponse *ns2__ActivateViewerResponse) { return this->ActivateViewer_(NULL, NULL, ns2__ActivateViewer, ns2__ActivateViewerResponse); }
	virtual	int ActivateViewer_(const char *endpoint, const char *soap_action, _ns2__ActivateViewer *ns2__ActivateViewer, _ns2__ActivateViewerResponse *ns2__ActivateViewerResponse);

	/// Web service operation 'CloseViewer' (returns error code or SOAP_OK)
	virtual	int CloseViewer_(_ns2__CloseViewer *ns2__CloseViewer, _ns2__CloseViewerResponse *ns2__CloseViewerResponse) { return this->CloseViewer_(NULL, NULL, ns2__CloseViewer, ns2__CloseViewerResponse); }
	virtual	int CloseViewer_(const char *endpoint, const char *soap_action, _ns2__CloseViewer *ns2__CloseViewer, _ns2__CloseViewerResponse *ns2__CloseViewerResponse);

	/// Web service operation 'OpenFiles' (returns error code or SOAP_OK)
	virtual	int OpenFiles__(_ns2__OpenFiles *ns2__OpenFiles, _ns2__OpenFilesResponse *ns2__OpenFilesResponse) { return this->OpenFiles__(NULL, NULL, ns2__OpenFiles, ns2__OpenFilesResponse); }
	virtual	int OpenFiles__(const char *endpoint, const char *soap_action, _ns2__OpenFiles *ns2__OpenFiles, _ns2__OpenFilesResponse *ns2__OpenFilesResponse);

	/// Web service operation 'GetViewers' (returns error code or SOAP_OK)
	virtual	int GetViewers__(_ns2__GetViewers *ns2__GetViewers, _ns2__GetViewersResponse *ns2__GetViewersResponse) { return this->GetViewers__(NULL, NULL, ns2__GetViewers, ns2__GetViewersResponse); }
	virtual	int GetViewers__(const char *endpoint, const char *soap_action, _ns2__GetViewers *ns2__GetViewers, _ns2__GetViewersResponse *ns2__GetViewersResponse);

	/// Web service operation 'GetActiveViewers' (returns error code or SOAP_OK)
	virtual	int GetActiveViewers__(_ns2__GetActiveViewers *ns2__GetActiveViewers, _ns2__GetActiveViewersResponse *ns2__GetActiveViewersResponse) { return this->GetActiveViewers__(NULL, NULL, ns2__GetActiveViewers, ns2__GetActiveViewersResponse); }
	virtual	int GetActiveViewers__(const char *endpoint, const char *soap_action, _ns2__GetActiveViewers *ns2__GetActiveViewers, _ns2__GetActiveViewersResponse *ns2__GetActiveViewersResponse);

	/// Web service operation 'GetViewerInfo' (returns error code or SOAP_OK)
	virtual	int GetViewerInfo__(_ns2__GetViewerInfo *ns2__GetViewerInfo, _ns2__GetViewerInfoResponse *ns2__GetViewerInfoResponse) { return this->GetViewerInfo__(NULL, NULL, ns2__GetViewerInfo, ns2__GetViewerInfoResponse); }
	virtual	int GetViewerInfo__(const char *endpoint, const char *soap_action, _ns2__GetViewerInfo *ns2__GetViewerInfo, _ns2__GetViewerInfoResponse *ns2__GetViewerInfoResponse);

	/// Web service operation 'OpenStudies' (returns error code or SOAP_OK)
	virtual	int OpenStudies__(_ns2__OpenStudies *ns2__OpenStudies, _ns2__OpenStudiesResponse *ns2__OpenStudiesResponse) { return this->OpenStudies__(NULL, NULL, ns2__OpenStudies, ns2__OpenStudiesResponse); }
	virtual	int OpenStudies__(const char *endpoint, const char *soap_action, _ns2__OpenStudies *ns2__OpenStudies, _ns2__OpenStudiesResponse *ns2__OpenStudiesResponse);

	/// Web service operation 'ActivateViewer' (returns error code or SOAP_OK)
	virtual	int ActivateViewer__(_ns2__ActivateViewer *ns2__ActivateViewer, _ns2__ActivateViewerResponse *ns2__ActivateViewerResponse) { return this->ActivateViewer__(NULL, NULL, ns2__ActivateViewer, ns2__ActivateViewerResponse); }
	virtual	int ActivateViewer__(const char *endpoint, const char *soap_action, _ns2__ActivateViewer *ns2__ActivateViewer, _ns2__ActivateViewerResponse *ns2__ActivateViewerResponse);

	/// Web service operation 'CloseViewer' (returns error code or SOAP_OK)
	virtual	int CloseViewer__(_ns2__CloseViewer *ns2__CloseViewer, _ns2__CloseViewerResponse *ns2__CloseViewerResponse) { return this->CloseViewer__(NULL, NULL, ns2__CloseViewer, ns2__CloseViewerResponse); }
	virtual	int CloseViewer__(const char *endpoint, const char *soap_action, _ns2__CloseViewer *ns2__CloseViewer, _ns2__CloseViewerResponse *ns2__CloseViewerResponse);
};
#endif
